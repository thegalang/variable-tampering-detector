0x000000000009f8a8 : adc al, 0 ; add rsp, 8 ; ret
0x000000000009f863 : adc al, 0 ; mov qword ptr [rip + 0x14f6dc], rax ; ret
0x000000000009f86a : adc al, 0 ; ret
0x000000000012334f : adc al, 0x11 ; test edx, edx ; jne 0x123360 ; ret
0x0000000000123c7f : adc al, 0x11 ; test edx, edx ; jne 0x123c90 ; ret
0x00000000000aa3f9 : adc al, 0x16 ; sub eax, edx ; ret
0x0000000000183c10 : adc al, 0x16 ; sub eax, edx ; vzeroupper ; ret
0x00000000000bb163 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000018423d : adc al, 0x3a ; sub eax, edx ; vzeroupper ; ret
0x00000000000d01f4 : adc al, 0x48 ; add esp, 0x28 ; ret
0x000000000012df50 : adc al, 0x48 ; add esp, 0xd8 ; ret
0x00000000000b8690 : adc al, 0x48 ; lea eax, [rdi + 0x14] ; ret
0x00000000000b9503 : adc al, 0x48 ; lea eax, [rdi + 0x15] ; ret
0x00000000000ac6db : adc al, 0x48 ; lea eax, [rdi + rax + 0x30] ; ret
0x000000000012cf79 : adc al, 0x5b ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x000000000012cf77 : adc al, 0x74 ; adc al, 0x5b ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x00000000000f69ed : adc al, 0x83 ; ret
0x0000000000087f25 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000001817f0 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000017ff1e : adc al, 0x91 ; sub eax, edx ; ret
0x0000000000128878 : adc al, 0x9b ; out dx, eax ; inc dword ptr [rax - 0x76b7ffc8] ; ret
0x00000000000aa563 : adc al, 0xa ; sub eax, edx ; ret
0x0000000000183d8d : adc al, 0xa ; sub eax, edx ; vzeroupper ; ret
0x000000000012310f : adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000033df9 : adc al, 0xb7 ; mov r8d, dword ptr [rdx + rax] ; mov eax, r8d ; ret
0x0000000000055601 : adc al, 0xc0 ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000055605 : adc al, 0xc6 ; xor eax, eax ; ret
0x0000000000160a48 : adc al, 0xc7 ; setne al ; movzx eax, al ; ret
0x0000000000160a78 : adc al, 0xc7 ; xor eax, eax ; ret
0x000000000009e1f7 : adc al, 0xd ; adc eax, 0x2740000 ; ret
0x00000000000bbb58 : adc al, 0xe ; cmp rdi, rdx ; jb 0xbbb62 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000017e031 : adc al, 0xe ; sub eax, edx ; ret
0x0000000000184dda : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x000000000014102d : adc al, 0xee ; dec dword ptr [rax + 0x39] ; ret
0x00000000000b9079 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000000c7ef8 : adc al, 0xf ; xchg ebx, eax ; ret
0x00000000000dd756 : adc al, 0xff ; pop rbx ; pop rbp ; lea rax, [rax + rdx*8] ; ret
0x0000000000048df7 : adc al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000192ac8 : adc al, 1 ; add byte ptr [rax], al ; ret
0x00000000000a8816 : adc al, 7 ; cmp edx, esi ; je 0xa8810 ; ret
0x00000000000a1438 : adc al, bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b3964 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000036729 : adc al, byte ptr [rdx*4 - 0x763f6af1] ; ret
0x000000000018a4ea : adc al, byte ptr [rdx] ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000079cfa : adc al, byte ptr [rsi - 0x76b60006] ; ret
0x000000000003c307 : adc al, ch ; ret
0x000000000014834b : adc bl, al ; mov dword ptr [rsi], 8 ; ret
0x0000000000041bac : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000001252f5 : adc bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000056316 : adc bl, ch ; jge 0x56363 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000b7c56 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000b6fa6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000b7017 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000b6f77 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000b7c55 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000b6fa5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000014834a : adc bl, r8b ; mov dword ptr [rsi], 8 ; ret
0x0000000000112943 : adc byte ptr [r13 + 0x41], r11b ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000015f90b : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000ecb00 : adc byte ptr [r8 + 0x63], r9b ; ret
0x00000000000e8142 : adc byte ptr [r8 + 1], r9b ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000089742 : adc byte ptr [r8 + 1], r9b ; ret
0x00000000001412b9 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000bb0dc : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000bb0fe : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000bb13c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000bb1be : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000c8f08 : adc byte ptr [rax + 0x39], cl ; fisttp word ptr [rdi] ; xchg ebx, eax ; ret
0x00000000000e5c71 : adc byte ptr [rax + 0x39], cl ; ret
0x000000000015f90c : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00000000000ecb01 : adc byte ptr [rax + 0x63], cl ; ret
0x000000000011739f : adc byte ptr [rax + 1], bh ; ret
0x00000000000cf34e : adc byte ptr [rax + 1], cl ; clc ; ret
0x00000000000e8143 : adc byte ptr [rax + 1], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000056aae : adc byte ptr [rax + 1], cl ; ret
0x000000000015087d : adc byte ptr [rax + 1], dil ; ret
0x00000000000623e5 : adc byte ptr [rax + rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000bb2e4 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000bb1e2 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000bb160 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000012310c : adc byte ptr [rax - 0x73], cl ; adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000123364 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000123363 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000000b67ac : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000004823c : adc byte ptr [rax - 0x77], cl ; jl 0x48265 ; or al, ch ; cdq ; ret
0x0000000000086e5b : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000086e9d : adc byte ptr [rax - 0x77], cl ; push rax ; movups xmmword ptr [rax], xmm0 ; ret
0x0000000000086e5f : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000024140 : adc byte ptr [rax - 0x7d], cl ; ret
0x00000000001537e2 : adc byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret
0x00000000000f4cc4 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001482a2 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x0000000000146995 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000bc1e2 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000063029 : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000062654 : adc byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbp ; pop r12 ; ret
0x000000000006e190 : adc byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000052a01 : adc byte ptr [rax], al ; ret
0x00000000000bb0dd : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000bb0ff : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000bb13d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000bb1bf : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000bb2c1 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000062848 : adc byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000a478b : adc byte ptr [rbp + 0x39], cl ; fiadd dword ptr [rcx + 0xf] ; xchg ebx, eax ; ret
0x0000000000112944 : adc byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000002ff0a : adc byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000014123b : adc byte ptr [rbp + 0x5b0875c0], al ; pop rbp ; pop r12 ; ret
0x0000000000090fef : adc byte ptr [rbx + 0x15d7c92d], al ; add byte ptr [rcx], al ; ret
0x0000000000062568 : adc byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000df61c : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ef191 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r15 ; ret
0x0000000000081127 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000111d3e : adc byte ptr [rbx + r9*4 + 0x63], r9b ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000111d3f : adc byte ptr [rbx + rcx*4 + 0x63], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000009359a : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000008774e : adc byte ptr [rbx - 0x3b7cb7ff], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000013c23e : adc byte ptr [rbx - 0x73], al ; add dword ptr [rdx], r8d ; pop rbx ; ret
0x000000000005fcfa : adc byte ptr [rcx + 0x39], cl ; ret
0x00000000001449c2 : adc byte ptr [rcx + 0x5c], al ; ret
0x000000000003f403 : adc byte ptr [rcx + rcx*4 + 4], cl ; and al, 0xe8 ; ret
0x000000000009d4e5 : adc byte ptr [rcx + rcx*4 - 0x20], al ; pop r12 ; ret
0x0000000000044154 : adc byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002ff32 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000812db : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000152388 : adc byte ptr [rcx + rcx*4 - 0x40], al ; pop r12 ; ret
0x000000000015cbd5 : adc byte ptr [rcx + rcx*4 - 0x40], al ; pop rbp ; ret
0x0000000000046d2f : adc byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000995a2 : adc byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbp ; ret
0x000000000009ce47 : adc byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000993ab : adc byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x00000000000bb242 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000bb222 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000047c9e : adc byte ptr [rcx - 0x3f76bbea], cl ; ret
0x000000000015a41c : adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000053c2f : adc byte ptr [rcx - 0x7d], cl ; ret
0x0000000000160961 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; mov eax, r12d ; pop r12 ; ret
0x0000000000152670 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015799f : adc byte ptr [rcx], al ; imul ebp, dword ptr [rax], 0x5b ; pop rbp ; pop r12 ; ret
0x000000000009359d : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000121c48 : adc byte ptr [rdi + 0x2000c], ah ; add byte ptr [rax], al ; ret
0x000000000002e044 : adc byte ptr [rdi], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000341c9 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000000a8a8d : adc byte ptr [rdi], cl ; mov dh, 0x54 ; and al, 0xf4 ; mov byte ptr [rax + 4], dl ; ret
0x00000000000a8a6f : adc byte ptr [rdi], cl ; mov dh, 0x54 ; and al, 0xfa ; mov byte ptr [rax + 2], dl ; ret
0x000000000008dfdc : adc byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; neg eax ; ret
0x00000000001783b8 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x000000000018e14b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018dffa : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x00000000000d029e : adc byte ptr [rsp - 0x10], al ; ret
0x0000000000154897 : adc ch, al ; ret
0x000000000005f3bc : adc cl, bl ; in eax, 0xdf ; loopne 0x5f34b ; ret
0x00000000000a8f29 : adc cl, byte ptr [rax + 0x29] ; ret
0x00000000001507cb : adc dword ptr [rax + 0x20], edx ; ret
0x0000000000150798 : adc dword ptr [rax + 0x30], eax ; ret
0x0000000000087cca : adc dword ptr [rax + 0x40], eax ; pop rbx ; ret
0x000000000014d070 : adc dword ptr [rax + 8], eax ; ret
0x0000000000023a4e : adc dword ptr [rax - 0x77], ecx ; add eax, 0x1cd8d2 ; ret
0x0000000000118e84 : adc dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a421c : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; ret
0x00000000000a4442 : adc dword ptr [rax], eax ; add byte ptr [rcx - 9], al ; ret
0x00000000000d0135 : adc dword ptr [rax], eax ; add rsp, 8 ; ret
0x00000000000d1d1d : adc dword ptr [rax], eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000086ea3 : adc dword ptr [rax], eax ; ret
0x000000000010c7ab : adc dword ptr [rax], ecx ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000926bf : adc dword ptr [rbp + 0x38], eax ; pop rbp ; pop r12 ; ret
0x00000000000bcccd : adc dword ptr [rbp - 0x6b], esi ; test edx, edx ; jne 0xbccb0 ; ret
0x000000000008e553 : adc dword ptr [rbx + 0x18], eax ; movups xmmword ptr [rbx + 0x28], xmm0 ; pop rbx ; ret
0x000000000009e901 : adc dword ptr [rbx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008e557 : adc dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x0000000000091f06 : adc dword ptr [rbx + 0x38], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000919c6 : adc dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x000000000008e656 : adc dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000048008 : adc dword ptr [rbx], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bbddc : adc dword ptr [rbx], eax ; ret
0x00000000000bbd55 : adc dword ptr [rbx], esp ; ret
0x000000000018fe2b : adc dword ptr [rcx + 7], edi ; ret
0x00000000000d4a8e : adc dword ptr [rcx + rcx*4 - 0x40], ecx ; add rsp, 8 ; ret
0x00000000000bbd50 : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x000000000018fac6 : adc dword ptr [rcx - 1], ebx ; ret
0x000000000018fa8a : adc dword ptr [rcx - 1], edi ; ret
0x00000000001576ee : adc dword ptr [rdi + 0x18], eax ; ret
0x000000000010c306 : adc dword ptr [rdi + 0x30], eax ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x00000000000bbdd7 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000010c30a : adc dword ptr [rdi + 0x40], eax ; ret
0x0000000000043b49 : adc dword ptr [rdi + 0x58], eax ; movups xmmword ptr [rdi + 0x68], xmm0 ; ret
0x0000000000043b4d : adc dword ptr [rdi + 0x68], eax ; ret
0x000000000010c74a : adc dword ptr [rdi + 0x78], edi ; ret
0x000000000010d0df : adc dword ptr [rdi + 0xf8], edi ; ret
0x00000000000918fc : adc dword ptr [rdi + 8], eax ; ret
0x000000000013c624 : adc dword ptr [rdi + rdx + 8], eax ; ret
0x00000000000bbaf7 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x00000000000bbcb9 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x00000000000bbcbe : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x00000000000bbc96 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x00000000000bbc9b : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000018ff8d : adc dword ptr [rdi - 8], edi ; ret
0x0000000000057da5 : adc dword ptr [rdi], eax ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x0000000000042305 : adc dword ptr [rdi], eax ; movd xmm0, esi ; ret
0x00000000000bbaf4 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000043f36 : adc dword ptr [rdi], eax ; ret
0x00000000001901e0 : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000002717f : adc dword ptr [rdx + 0x48], eax ; ret
0x00000000001507dc : adc dword ptr [rdx], ebx ; ret
0x000000000014d084 : adc dword ptr [rdx], ecx ; ret
0x000000000014fecc : adc dword ptr [rdx], edx ; ret
0x00000000001507bc : adc dword ptr [rdx], esp ; ret
0x000000000010c6fa : adc dword ptr [rsi + 0x70], edi ; ret
0x0000000000190313 : adc dword ptr [rsi + 3], edx ; ret
0x00000000001903b0 : adc dword ptr [rsi + 7], edx ; ret
0x0000000000100457 : adc dword ptr [rsi + 8], eax ; ret
0x000000000014832c : adc dword ptr [rsi + 8], ecx ; ret
0x00000000001901b2 : adc dword ptr [rsi - 1], edx ; ret
0x00000000000479c4 : adc dword ptr [rsi], eax ; sub ecx, 1 ; jns 0x47989 ; xor eax, eax ; ret
0x000000000009a0cb : adc dword ptr [rsi], ebx ; adc eax, 0x38894800 ; ret
0x00000000000961d3 : adc eax, 0x10894800 ; ret
0x00000000000cf34a : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x00000000000bdf8f : adc eax, 0x116fc ; cmovne rax, rdx ; ret
0x000000000009f0ef : adc eax, 0x12e8c ; cmovne rax, rdx ; ret
0x000000000009f6ff : adc eax, 0x1449c ; cmovne rax, rdx ; ret
0x0000000000094e79 : adc eax, 0x157452 ; ret
0x000000000015e929 : adc eax, 0x18c48348 ; pop rbx ; pop rbp ; ret
0x00000000000440d1 : adc eax, 0x1a80d6 ; ret
0x00000000000a09fd : adc eax, 0x1b0ce ; cmove rax, rdx ; ret
0x00000000000a068d : adc eax, 0x1b41e ; cmove rax, rdx ; ret
0x00000000000a052d : adc eax, 0x1b59e ; cmove rax, rdx ; ret
0x0000000000032854 : adc eax, 0x1bb2a4 ; ret
0x00000000000226b9 : adc eax, 0x1ceae2 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000009e1f9 : adc eax, 0x2740000 ; ret
0x000000000009a0cd : adc eax, 0x38894800 ; ret
0x00000000000cf03a : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000012da37 : adc eax, 0x3d9b4 ; cmovne rax, rdx ; ret
0x000000000012d8b7 : adc eax, 0x3db54 ; cmovne rax, rdx ; ret
0x000000000012d977 : adc eax, 0x40584 ; cmovne rax, rdx ; ret
0x000000000009c1ea : adc eax, 0x48227300 ; lea eax, [rax - 8] ; ret
0x000000000009552d : adc eax, 0x48a77600 ; add esp, 8 ; ret
0x0000000000098119 : adc eax, 0x51894900 ; or byte ptr [rax + 0x39], cl ; ret
0x0000000000094a54 : adc eax, 0x5b050f00 ; ret
0x000000000010c55a : adc eax, 0x5bc33948 ; setl al ; ret
0x0000000000098db0 : adc eax, 0x5d050f00 ; ret
0x000000000012da16 : adc eax, 0x5dc25 ; cmove rax, rdx ; ret
0x000000000012d956 : adc eax, 0x5dd05 ; cmove rax, rdx ; ret
0x000000000012d896 : adc eax, 0x5ddc5 ; cmove rax, rdx ; ret
0x00000000000b7958 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x000000000012da61 : adc eax, 0x6295a ; cmove rax, rdx ; ret
0x000000000012d9a1 : adc eax, 0x62a3a ; cmove rax, rdx ; ret
0x000000000012d8e1 : adc eax, 0x62afa ; cmove rax, rdx ; ret
0x000000000012db21 : adc eax, 0x62e4a ; cmove rax, rdx ; ret
0x00000000000b90ac : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x000000000015317d : adc eax, 0x9dcbe ; mov qword ptr fs:[rax], rdx ; ret
0x0000000000098d10 : adc eax, 0xc35d0100 ; nop dword ptr [rax] ; ret
0x000000000009f19f : adc eax, 0xc42dc ; cmovne rax, rdx ; ret
0x0000000000042a0c : adc eax, 0xc4834800 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000009f769 : adc eax, 0xc4f82 ; cmovne rax, rdx ; ret
0x00000000000a09b7 : adc eax, 0xcaa64 ; cmovne rax, rdx ; ret
0x00000000000a0647 : adc eax, 0xcadb4 ; cmovne rax, rdx ; ret
0x00000000000a04e7 : adc eax, 0xcda24 ; cmovne rax, rdx ; ret
0x00000000000a0892 : adc eax, 0xd01b9 ; cmovne rax, rdx ; ret
0x00000000000a07f2 : adc eax, 0xd0239 ; cmovne rax, rdx ; ret
0x00000000000a08e2 : adc eax, 0xd22c9 ; cmovne rax, rdx ; ret
0x00000000000a0842 : adc eax, 0xd2349 ; cmovne rax, rdx ; ret
0x00000000000bcd60 : adc eax, 0xd587b ; cmovne rax, rdx ; ret
0x000000000009f21f : adc eax, 0xd5edc ; cmovne rax, rdx ; ret
0x000000000009f7cf : adc eax, 0xd70dc ; cmovne rax, rdx ; ret
0x00000000000a073f : adc eax, 0xd8cec ; cmovne rax, rdx ; ret
0x000000000006174d : adc eax, 0xd8d4800 ; ret
0x00000000000a079f : adc eax, 0xda49c ; cmovne rax, rdx ; ret
0x00000000000cfaca : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000000a0996 : adc eax, 0xeacd5 ; cmove rax, rdx ; ret
0x00000000000a0626 : adc eax, 0xeb025 ; cmove rax, rdx ; ret
0x00000000000a04c6 : adc eax, 0xeb1a5 ; cmove rax, rdx ; ret
0x00000000000a09e1 : adc eax, 0xefa0a ; cmove rax, rdx ; ret
0x00000000000a0671 : adc eax, 0xefd5a ; cmove rax, rdx ; ret
0x00000000000a0511 : adc eax, 0xefeda ; cmove rax, rdx ; ret
0x00000000000a05d1 : adc eax, 0xf03aa ; cmove rax, rdx ; ret
0x00000000000a0450 : adc eax, 0xf0a1b ; cmovne rax, rdx ; ret
0x000000000009f142 : adc eax, 0xf1a09 ; cmovne rax, rdx ; ret
0x00000000000bc048 : adc eax, 0xf880272 ; ret
0x000000000012da7d : adc eax, 0xfff8e01e ; cmove rax, rdx ; ret
0x000000000012d9bd : adc eax, 0xfff8e0fe ; cmove rax, rdx ; ret
0x000000000012d8fd : adc eax, 0xfff8e1be ; cmove rax, rdx ; ret
0x00000000000639ce : adc eax, dword ptr [rax - 0x78] ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000095178 : adc eax, dword ptr [rbp + 1] ; sbb byte ptr [r8 + 0x39], cl ; ret
0x0000000000139e19 : adc eax, dword ptr [rbp - 0x7cb70012] ; ret
0x00000000000b3968 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x0000000000055a7d : adc eax, eax ; ret
0x0000000000055bb6 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x0000000000141063 : adc ebp, esi ; dec dword ptr [rax + 0x39] ; ret
0x0000000000048b4f : adc ecx, dword ptr [rax + 0xf] ; mov esi, 0x83480143 ; ret
0x00000000000469b1 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000002f254 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000006bba2 : adc ecx, dword ptr [rcx + 0x415d5b28] ; pop rsp ; ret
0x00000000000ffc3c : adc ecx, dword ptr [rcx + 0x6c0f66d0] ; ret
0x00000000000b3b34 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x00000000000b3b54 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x00000000000b3b74 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x00000000000b39be : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000013b90f : adc edi, dword ptr [rax - 1] ; ret
0x00000000000a444e : adc qword ptr [rax], rax ; add byte ptr [rcx - 9], al ; ret
0x000000000018fe2a : adc qword ptr [rcx + 7], rdi ; ret
0x000000000018fac5 : adc qword ptr [rcx - 1], rbx ; ret
0x000000000018fa89 : adc qword ptr [rcx - 1], rdi ; ret
0x000000000018ff8c : adc qword ptr [rdi - 8], rdi ; ret
0x0000000000190312 : adc qword ptr [rsi + 3], rdx ; ret
0x00000000001903af : adc qword ptr [rsi + 7], rdx ; ret
0x00000000001901b1 : adc qword ptr [rsi - 1], rdx ; ret
0x0000000000098118 : adc rax, 0x51894900 ; or byte ptr [rax + 0x39], cl ; ret
0x0000000000099fab : adc rax, 0x5b050f00 ; ret
0x0000000000055bb5 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000000bc117 : add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000000bc217 : add ah, bh ; inc dword ptr [rbx] ; div ecx ; mov eax, eax ; ret
0x00000000000bc162 : add ah, bh ; inc dword ptr [rbx] ; ret
0x000000000019030e : add ah, byte ptr [rdx - 0xf] ; jl 0x19035b ; adc dword ptr [rsi + 3], edx ; ret
0x00000000000b39bb : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000ef964 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000cfb53 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000000623e6 : add al, 0 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000ecafb : add al, 0 ; add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 + 0x63], r9b ; ret
0x000000000013e366 : add al, 0 ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000013f755 : add al, 0 ; add byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000094e4a : add al, 0 ; add byte ptr [rsi + 1], dh ; ret
0x000000000005d107 : add al, 0 ; add dh, dh ; ret
0x000000000012d97a : add al, 0 ; cmovne rax, rdx ; ret
0x000000000014ae94 : add al, 0x10 ; mov byte ptr [rdi + 7], al ; ret
0x0000000000123279 : add al, 0x10 ; shr eax, cl ; and eax, 1 ; ret
0x000000000012336a : add al, 0x11 ; ret
0x00000000000bc1b4 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000000aa3f5 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x00000000000aa38a : add al, 0x17 ; sub eax, ecx ; ret
0x000000000018ac3e : add al, 0x17 ; vzeroupper ; ret
0x000000000003007e : add al, 0x24 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001156cd : add al, 0x24 ; add byte ptr [rcx + rcx*4 - 0x20], cl ; pop r12 ; ret
0x00000000000429f3 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010e9d7 : add al, 0x24 ; add rsp, 0x18 ; ret
0x0000000000120371 : add al, 0x24 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000010c1c5 : add al, 0x24 ; add rsp, 0x28 ; ret
0x0000000000120437 : add al, 0x24 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000122918 : add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000122979 : add al, 0x24 ; add rsp, 0x40 ; ret
0x000000000012530b : add al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000094c47 : add al, 0x25 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000002440e : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000013c3f5 : add al, 0x2b ; pop rbx ; pop rbp ; ret
0x000000000005f367 : add al, 0x30 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret
0x00000000000baf99 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000bafab : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000b1abe : add al, 0x31 ; ret
0x00000000000b19ba : add al, 0x37 ; ret
0x00000000000bdfb6 : add al, 0x39 ; bnd je 0xbdfbf ; test edx, edx ; jne 0xbdfb0 ; ret
0x000000000009696c : add al, 0x39 ; ret
0x00000000000a87b0 : add al, 0x39 ; sal byte ptr [rbp - 0x15], 1 ; mov rax, r8 ; ret
0x0000000000087def : add al, 0x3a ; ret
0x00000000000c6a9e : add al, 0x44 ; mov eax, eax ; ret
0x00000000000cf15b : add al, 0x44 ; mov eax, ecx ; ret
0x000000000011f2ac : add al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000120bff : add al, 0x48 ; add esp, 0x28 ; ret
0x000000000010c3d5 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000005b331 : add al, 0x48 ; cmp edi, eax ; jbe 0x5b32a ; mov rax, r10 ; ret
0x00000000000b84fb : add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x00000000000b934b : add al, 0x48 ; lea eax, [rdi + 6] ; ret
0x00000000000a8b6d : add al, 0x48 ; lea eax, [rdi + rdx - 1] ; ret
0x000000000017ab29 : add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x000000000017ab3b : add al, 0x48 ; lea eax, [rdx + 5] ; ret
0x000000000008558c : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x000000000016da2a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000000860c2 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x00000000000b3a2e : add al, 0x48 ; mov eax, edi ; ret
0x00000000000b1d68 : add al, 0x48 ; xor eax, eax ; ret
0x00000000000bce03 : add al, 0x4c ; cmovne eax, eax ; mov rax, r8 ; ret
0x000000000013c765 : add al, 0x4c ; lea eax, [rdi + rsi + 8] ; mov rax, r8 ; ret
0x000000000012ceb8 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x000000000010c46f : add al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010c4fd : add al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000017ab37 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x00000000000b3a4c : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000002f252 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000047866 : add al, 0x75 ; push rcx ; add rsp, 0x18 ; ret
0x000000000014e16a : add al, 0x75 ; ret
0x00000000000341a4 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x00000000000341c4 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x0000000000034104 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x0000000000034184 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x00000000000340a4 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x0000000000034144 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x00000000000340e4 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x0000000000034124 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x0000000000034244 : add al, 0x78 ; and eax, 1 ; ret
0x00000000000340c4 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x0000000000034164 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x0000000000034084 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x00000000000a15f9 : add al, 0x80 ; jb 0xa160b ; sub al, bl ; ret
0x00000000000bc79c : add al, 0x80 ; sub eax, dword ptr [r8 + r9*4] ; je 0xbc780 ; ret
0x00000000000bc742 : add al, 0x81 ; je 0xbc728 ; ret
0x000000000017ff1b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000bc73e : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0xbc728 ; ret
0x00000000001817f3 : add al, 0x81 ; sub eax, edx ; ret
0x00000000000aedf7 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000008ad42 : add al, 0x83 ; loop 0x8ad47 ; mov eax, edx ; ret
0x000000000013c724 : add al, 0x83 ; loopne 0x13c7a7 ; ret
0x000000000008def8 : add al, 0x83 ; loopne 0x8defd ; ret
0x000000000005f4ac : add al, 0x83 ; ret
0x00000000000bcc35 : add al, 0x85 ; sal byte ptr [rbp - 0x12], cl ; xor eax, eax ; ret
0x000000000012edcb : add al, 0x85 ; sal byte ptr [rbp - 0x57], 0x48 ; mov eax, edi ; ret
0x00000000000bdfba : add al, 0x85 ; sal byte ptr [rbp - 0xf], cl ; ret
0x000000000017ab26 : add al, 0x88 ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x00000000000b3a2b : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x00000000000bc7a0 : add al, 0x88 ; je 0xbc780 ; ret
0x00000000000b3a14 : add al, 0x8b ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000000bce3a : add al, 0x98 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000123112 : add al, 0xa ; ret
0x0000000000157907 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000003445c : add al, 0xb8 ; ret
0x0000000000055849 : add al, 0xc8 ; mov qword ptr [r9 + rcx*8], rax ; xor eax, eax ; ret
0x000000000005584d : add al, 0xc9 ; xor eax, eax ; ret
0x00000000000dd75c : add al, 0xd0 ; ret
0x0000000000160a9b : add al, 0xd7 ; xor eax, eax ; ret
0x000000000010c5de : add al, 0xeb ; ret
0x00000000000340a9 : add al, 0xf ; mov bh, 0xc0 ; ret
0x00000000000a8a01 : add al, 0xf ; mov dh, 0x54 ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000a8abe : add al, 0xf ; mov dh, 0x54 ; and al, 0xe ; mov byte ptr [rax + 6], dl ; ret
0x000000000017e02d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x00000000000cef45 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00000000000b772b : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x000000000016dd93 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000013bcce : add al, 1 ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000cef78 : add al, 1 ; add byte ptr [rax], al ; ret
0x0000000000062fbb : add al, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000de23d : add al, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000063032 : add al, 1 ; xor eax, eax ; ret
0x0000000000033dfd : add al, 2 ; mov eax, r8d ; ret
0x000000000014933e : add al, 2 ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x0000000000033d9b : add al, 2 ; test eax, eax ; jne 0x33da8 ; mov eax, r8d ; ret
0x000000000018e857 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000b7878 : add al, 7 ; add byte ptr [rax], al ; ret
0x00000000000b14d1 : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000b16fc : add al, 7 ; ret
0x000000000018b2f4 : add al, 7 ; vzeroupper ; ret
0x000000000008cd57 : add al, 8 ; add byte ptr [rax], al ; ret
0x00000000001229eb : add al, 8 ; mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x00000000000aa55f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000000ff3b1 : add al, 9 ; ret
0x00000000000bc201 : add al, bh ; jg 0xbc1fc ; int1 ; mov eax, eax ; ret
0x00000000000b7b7b : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a5dc2 : add al, byte ptr [rax] ; add bh, dh ; ret
0x00000000000f089c : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000abf42 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000010f89a : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001904b8 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000194d51 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000006e3e3 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000102a85 : add al, byte ptr [rax] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x0000000000057d55 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000011d01a : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000086bab : add al, byte ptr [rax] ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000044586 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000a4435 : add al, byte ptr [rax] ; add byte ptr [rcx - 9], al ; ret
0x00000000000d683a : add al, byte ptr [rax] ; add dh, dh ; rol dword ptr [rdi + rcx], 0x84 ; ret
0x000000000018ac08 : add al, byte ptr [rax] ; lea rax, [rdi + 2] ; vzeroupper ; ret
0x000000000011cc48 : add al, byte ptr [rax] ; mov r8, rbx ; mov rax, r8 ; pop rbx ; ret
0x0000000000134b4b : add al, byte ptr [rax] ; pop r12 ; pop r13 ; ret
0x000000000013c5df : add al, byte ptr [rax] ; ret
0x0000000000189178 : add al, byte ptr [rax] ; vzeroupper ; ret
0x0000000000033d9c : add al, byte ptr [rbp + 0x440775c0] ; mov eax, eax ; ret
0x000000000013c527 : add al, byte ptr [rbp - 0x77] ; sbb byte ptr [rbx + 0x49], bl ; mov dword ptr [rcx], ecx ; ret
0x000000000011f7b7 : add al, byte ptr [rbx + 0x377426f8] ; mov eax, r8d ; ret
0x00000000000945f2 : add al, byte ptr [rcx + 0x39] ; ret
0x0000000000102831 : add al, byte ptr [rcx + rcx*4 - 0x38] ; ret
0x0000000000033dfe : add al, byte ptr [rcx + rcx*4 - 0x40] ; ret
0x00000000000d4234 : add al, byte ptr [rcx - 0x70a3d706] ; add dh, byte ptr [rsi + 3] ; ret
0x000000000006fd9d : add al, byte ptr [rcx - 9] ; ret
0x000000000013bcf8 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00000000000d13bf : add al, byte ptr [rcx] ; ret
0x0000000000057c33 : add al, byte ptr [rdx] ; sar bh, 0xff ; ret
0x00000000000b797a : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x0000000000139e17 : add al, ch ; adc eax, dword ptr [rbp - 0x7cb70012] ; ret
0x00000000000f4cff : add al, ch ; fdiv st(2) ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f57d6 : add al, ch ; je 0xf57a7 ; dec dword ptr [rax - 0x77] ; ret
0x00000000001160fa : add al, ch ; loopne 0x1160c0 ; lock dec dword ptr [rax + 1] ; ret
0x00000000000f9754 : add al, ch ; mov dh, 0x8b ; dec dword ptr [rax - 0x77] ; ret
0x000000000002c9ff : add al, ch ; mov esi, dword ptr [rbp] ; add byte ptr [rbp - 0x77], cl ; ret
0x00000000001383c6 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; mov edx, 0x89480000 ; ret
0x0000000000045fee : add al, ch ; pop rsp ; ret
0x000000000012a2aa : add al, ch ; push rax ; fdivr st(7) ; dec dword ptr [rcx] ; ret
0x000000000012a7aa : add al, ch ; push rax ; sar edi, cl ; dec dword ptr [rcx] ; ret
0x0000000000162146 : add al, ch ; push rsp ; cmp eax, 0x8948ffee ; ret
0x0000000000024a67 : add al, ch ; ret
0x00000000000e7666 : add al, ch ; xor al, 0xe8 ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000057c31 : add bh, al ; add al, byte ptr [rdx] ; sar bh, 0xff ; ret
0x00000000000469af : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001952e3 : add bh, bh ; dec dword ptr [rcx + 0x21] ; ret
0x000000000010c76c : add bh, bh ; jne 0x10c775 ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x00000000000ce098 : add bh, bh ; ret
0x0000000000057b79 : add bh, byte ptr [rax + 1] ; ret
0x0000000000057da8 : add bh, byte ptr [rax + 2] ; ret
0x000000000004342b : add bh, byte ptr [rax - 1] ; ret
0x00000000001925c2 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000000a5dc4 : add bh, dh ; ret
0x0000000000094eae : add bl, al ; endbr64 ; xor eax, eax ; ret
0x0000000000148352 : add bl, al ; mov dword ptr [rsi], 0xa ; ret
0x0000000000148359 : add bl, al ; mov dword ptr [rsi], 0xb ; ret
0x00000000000e5a9c : add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000ec40d : add bl, al ; nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000e501c : add bl, al ; nop ; mov eax, 0x7e ; ret
0x000000000015089d : add bl, al ; nop ; xor eax, eax ; ret
0x00000000000a8a5a : add bl, al ; nop dword ptr [rax] ; mov word ptr [rax], si ; ret
0x0000000000198d0f : add bl, al ; nop dword ptr [rax] ; ret
0x000000000009e864 : add bl, al ; ret
0x000000000013bd04 : add bl, al ; xor eax, eax ; ret
0x0000000000041c6b : add bl, bl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000041dcf : add bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; fadd st(0) ; ret
0x00000000000e8432 : add bl, byte ptr [r11 + 0x5d] ; pop r12 ; ret
0x000000000014933f : add bl, byte ptr [rbx + 0x5d] ; mov eax, r8d ; ret
0x00000000000e8433 : add bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000627ad : add bl, byte ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000000949f9 : add bl, byte ptr [rsi + 0x5b010015] ; ret
0x00000000000d358b : add bl, ch ; or dword ptr [rax - 0x7d], ecx ; ret
0x00000000000e324d : add bl, ch ; ret
0x000000000004245f : add bl, dh ; addps xmm0, xmm0 ; ret
0x0000000000197273 : add bl, dh ; divps xmm0, xmmword ptr [rip + 0x27418] ; ret
0x00000000000b7f2f : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000b7f3f : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000042406 : add bl, dh ; mulps xmm0, xmmword ptr [rip + 0x17af79] ; ret
0x00000000000423e1 : add bl, dh ; mulps xmm0, xmmword ptr [rip + 0x17afa2] ; ret
0x000000000006669f : add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000d005d : add byte ptr [r8], al ; add byte ptr [rcx + rcx*4 - 0x20], cl ; pop r12 ; ret
0x00000000000a20c0 : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000a3fe7 : add byte ptr [r9 + 0xf], 0x93 ; ret
0x000000000013bcf6 : add byte ptr [rax + 0x102], bh ; cmovne eax, edx ; ret
0x0000000000063027 : add byte ptr [rax + 0x10], bh ; ret
0x0000000000190d9e : add byte ptr [rax + 0x1478d48], dl ; ret
0x000000000004229f : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x0000000000092a27 : add byte ptr [rax + 0x29], cl ; enter -0x177d, 1 ; ret
0x000000000007a3be : add byte ptr [rax + 0x29], cl ; ret
0x000000000009939b : add byte ptr [rax + 0x29], cl ; ror byte ptr [rax + 0x39], 1 ; ret
0x000000000002a5ab : add byte ptr [rax + 0x39], cl ; ret
0x00000000000bc197 : add byte ptr [rax + 0x485bf0e5], al ; cmovne eax, edx ; ret
0x0000000000041fc8 : add byte ptr [rax + 0x48c22148], al ; mov dword ptr [rdi], edx ; ret
0x0000000000136d0c : add byte ptr [rax + 0x578b4803], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000226bd : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000001483de : add byte ptr [rax + 0x5d5bc031], dl ; pop r12 ; ret
0x000000000013b6b1 : add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 1] ; ret
0x000000000006251e : add byte ptr [rax + 0x63], cl ; ret
0x0000000000183a7f : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax + 1], 0xf8 ; ret
0x000000000018a66f : add byte ptr [rax + 0x77f8c517], cl ; ret
0x00000000000b849f : add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000013c9bf : add byte ptr [rax + 0x7fffffff], bh ; ret
0x00000000000f249f : add byte ptr [rax + 0xc], bh ; ret
0x0000000000034148 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x00000000000b1919 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000012b30f : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480143 ; ret
0x000000000012a49f : add byte ptr [rax + 0xf], cl ; mov esi, 0x8348014b ; ret
0x00000000000e0947 : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480153 ; ret
0x00000000000df310 : add byte ptr [rax + 0xf], cl ; ret
0x00000000000e5017 : add byte ptr [rax + 0xfc17], bh ; ret
0x00000000000e5016 : add byte ptr [rax + 0xfc17], dil ; ret
0x00000000000e5147 : add byte ptr [rax + 0xff], bh ; ret
0x00000000000e5146 : add byte ptr [rax + 0xff], dil ; ret
0x000000000010c56f : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000057b40 : add byte ptr [rax + 1], bh ; ret
0x00000000000abf44 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000184af9 : add byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x0000000000095624 : add byte ptr [rax + 1], cl ; ret
0x000000000010c56e : add byte ptr [rax + 1], dil ; pop rbx ; ret
0x000000000011635e : add byte ptr [rax + 1], dil ; ret
0x0000000000057d53 : add byte ptr [rax + 2], bh ; ret
0x00000000000a8727 : add byte ptr [rax + rax*8 - 0x76b2d38c], al ; ret
0x00000000000b7afc : add byte ptr [rax + rax], 0 ; ret
0x000000000009809c : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, r8 ; ret
0x0000000000119792 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000009e95d : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000cf615 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, [rdi - 0x10] ; ret
0x00000000001984e3 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a2055 : add byte ptr [rax + rdx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000043b8d : add byte ptr [rax - 0x2d], cl ; loopne 0x43bda ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000042364 : add byte ptr [rax - 0x3991f09a], al ; ret
0x0000000000049d2f : add byte ptr [rax - 0x39], cl ; ret
0x00000000000cfb3f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000cfb7f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000cfb2f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000cfb6f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000116757 : add byte ptr [rax - 0x3d7cb7fe], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000041b79 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x0000000000113754 : add byte ptr [rax - 0x3fcef877], al ; ret
0x00000000000d6edf : add byte ptr [rax - 0x41], cl ; ret
0x00000000000328bf : add byte ptr [rax - 0x73], cl ; add eax, 0x181ab6 ; ret
0x00000000000d0fe7 : add byte ptr [rax - 0x73], cl ; add eax, 0xfffffee1 ; ret
0x00000000000d0ec7 : add byte ptr [rax - 0x73], cl ; add eax, 0xfffffef1 ; ret
0x00000000000cf65f : add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000cf66f : add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000542d7 : add byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 0x39] ; ret
0x00000000000cf64f : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x0000000000119fd7 : add byte ptr [rax - 0x73], cl ; push rbx ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000115f88 : add byte ptr [rax - 0x73], cl ; push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x000000000019693b : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x000000000011ba67 : add byte ptr [rax - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000473c9 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000151937 : add byte ptr [rax - 0x75], cl ; cmp ebp, ebx ; ret
0x00000000000f4dd7 : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000196d7c : add byte ptr [rax - 0x75], cl ; je 0x196da5 ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000011d02f : add byte ptr [rax - 0x75], cl ; or al, 1 ; add byte ptr [rax], al ; ret
0x000000000011d027 : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x000000000016791f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000a8a47 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; mov qword ptr [rax], rdx ; ret
0x0000000000121fc6 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x000000000008ccf7 : add byte ptr [rax - 0x75], cl ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000015f908 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000009f864 : add byte ptr [rax - 0x77], cl ; add eax, 0x14f6dc ; ret
0x000000000009520a : add byte ptr [rax - 0x77], cl ; add eax, 0x15707e ; ret
0x00000000000951e1 : add byte ptr [rax - 0x77], cl ; add eax, 0x15709f ; ret
0x00000000000951c1 : add byte ptr [rax - 0x77], cl ; add eax, 0x1570b7 ; ret
0x000000000015fe03 : add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000000b67bf : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000018b62f : add byte ptr [rax - 0x77], cl ; clc ; vzeroupper ; ret
0x00000000000fec9d : add byte ptr [rax - 0x77], cl ; cmp byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x000000000004610e : add byte ptr [rax - 0x77], cl ; enter -0x3fcf, -0x18 ; ret
0x0000000000090087 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000006680f : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x7d] ; ret
0x00000000000f1e18 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000124714 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000093466 : add byte ptr [rax - 0x77], cl ; imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x000000000014e500 : add byte ptr [rax - 0x77], cl ; in eax, 0x89 ; ret
0x00000000001196f3 : add byte ptr [rax - 0x77], cl ; je 0x119700 ; pop rbx ; ret
0x0000000000022676 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000a8637 : add byte ptr [rax - 0x77], cl ; sal dword ptr [rcx], 0xc0 ; mov qword ptr [rdx], rcx ; ret
0x00000000000bbbf4 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000015f8c0 : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000001971de : add byte ptr [rax - 0x7ab70000], al ; ret
0x0000000000194d53 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000b4223 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x000000000011cc25 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + riz + 0x48], 0x39 ; ret
0x000000000017c6e7 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00000000000f69e7 : add byte ptr [rax - 0x7d], cl ; and al, 0x30 ; adc al, 0x83 ; ret
0x0000000000026208 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000002f10d : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000013bcb5 : add byte ptr [rax - 1], bh ; cmove eax, edx ; ret
0x00000000000412bd : add byte ptr [rax - 1], bh ; pop rbp ; ret
0x00000000000246f5 : add byte ptr [rax - 1], bh ; ret
0x0000000000090d3e : add byte ptr [rax - 1], dil ; ret
0x00000000001091b2 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009f8eb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000009c20b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; lea rax, [rdx - 0x10] ; ret
0x00000000000a8a53 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov byte ptr [rax], 0 ; ret
0x00000000000a8a7b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov dword ptr [rax], ecx ; ret
0x000000000016dd9b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000011d023 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000bc143 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000000ca053 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000054313 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x0000000000189b0d : add byte ptr [rax], 0 ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000040fc3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000006dc6d : add byte ptr [rax], 0 ; add byte ptr [rbx - 0x9bef71d], al ; ret
0x00000000001533bb : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x00000000001280c6 : add byte ptr [rax], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000034188 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x0000000000045fec : add byte ptr [rax], al ; add al, ch ; pop rsp ; ret
0x000000000012a2a8 : add byte ptr [rax], al ; add al, ch ; push rax ; fdivr st(7) ; dec dword ptr [rcx] ; ret
0x000000000012a7a8 : add byte ptr [rax], al ; add al, ch ; push rax ; sar edi, cl ; dec dword ptr [rcx] ; ret
0x0000000000057c2f : add byte ptr [rax], al ; add bh, al ; add al, byte ptr [rdx] ; sar bh, 0xff ; ret
0x0000000000198b1d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001952e1 : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rcx + 0x21] ; ret
0x00000000000ee3c3 : add byte ptr [rax], al ; add bh, dh ; ret
0x00000000000e5a9a : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x000000000015089b : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000009e862 : add byte ptr [rax], al ; add bl, al ; ret
0x0000000000041c69 : add byte ptr [rax], al ; add bl, bl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000000e324b : add byte ptr [rax], al ; add bl, ch ; ret
0x00000000000b7f2d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000b7f3d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000190d9c : add byte ptr [rax], al ; add byte ptr [rax + 0x1478d48], dl ; ret
0x000000000007a3bc : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000007d0c2 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000013b6af : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 1] ; ret
0x00000000000c034d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000b849d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000013c9bd : add byte ptr [rax], al ; add byte ptr [rax + 0x7fffffff], bh ; ret
0x00000000000f249d : add byte ptr [rax], al ; add byte ptr [rax + 0xc], bh ; ret
0x00000000000df30e : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000057b3e : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000cf284 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000184af7 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x0000000000057d51 : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000000cf613 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, [rdi - 0x10] ; ret
0x0000000000042362 : add byte ptr [rax], al ; add byte ptr [rax - 0x3991f09a], al ; ret
0x00000000000bfa55 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000113752 : add byte ptr [rax], al ; add byte ptr [rax - 0x3fcef877], al ; ret
0x00000000000d7095 : add byte ptr [rax], al ; add byte ptr [rax - 0x41], cl ; ret
0x00000000000cf65d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000cf66d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000cf64d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00000000000f4dd5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000011d025 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x00000000000b92cd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000018b62d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; vzeroupper ; ret
0x00000000000f1e16 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000124712 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000040689 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001971dc : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret
0x00000000000323cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000412bb : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbp ; ret
0x00000000000246f3 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000198b1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001952df : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rcx + 0x21] ; ret
0x00000000000b7f3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x00000000000c2cbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000cf65b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000cf66b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000cf64b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00000000000b92cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000001941bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000323cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000010286d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, r8d ; ret
0x00000000000a20c1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000014de63 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013c24b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret
0x00000000000bb70b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000010286e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x00000000000bff4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000cfafc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000009a75c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000009f8ec : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000112af8 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmova eax, edx ; ret
0x0000000000120e0b : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovb rax, rdx ; ret
0x0000000000115709 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000a28d7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000012d83c : add byte ptr [rax], al ; add byte ptr [rax], al ; endbr64 ; ret
0x0000000000041c68 : add byte ptr [rax], al ; add byte ptr [rax], al ; fld xword ptr [rsp - 0x18] ; ret
0x000000000005503a : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x55043 ; push r10 ; ret
0x0000000000055543 : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x5554c ; push r10 ; ret
0x0000000000190e1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x0000000000190e2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x0000000000190e3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x0000000000190e4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x0000000000190e5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x0000000000190dac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x0000000000190dbc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x0000000000190dcc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x0000000000190ddc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x0000000000190dec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x0000000000190dfc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x0000000000190e0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x00000000000cf64c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 0xc] ; ret
0x00000000000cf66c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 4] ; ret
0x00000000000cf65c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 8] ; ret
0x000000000009c20c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdx - 0x10] ; ret
0x00000000000a8a54 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rax], 0 ; ret
0x00000000000b849c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000000b6e5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a8a7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rax], ecx ; ret
0x00000000001787cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000017879c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000013c9bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7fffffff ; ret
0x00000000000f249c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xc ; ret
0x00000000000440dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000057b3d : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000057d50 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000047583 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000010286f : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, r8d ; ret
0x000000000016dd9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000001787dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00000000000b7eac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000b7ebc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x0000000000148344 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000011d024 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000b92cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000b7f2c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000b7f3c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000087cc5 : add byte ptr [rax], al ; add byte ptr [rax], al ; movups xmmword ptr [rax + 0x40], xmm0 ; pop rbx ; ret
0x00000000000919c1 : add byte ptr [rax], al ; add byte ptr [rax], al ; movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x000000000010046a : add byte ptr [rax], al ; add byte ptr [rax], al ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x00000000000bc144 : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000016deec : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000190d9b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea rax, [rdi + 1] ; ret
0x0000000000190d8b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea rax, [rdi] ; ret
0x00000000000b7e6b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000b7e7b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; ret
0x000000000017877a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov word ptr [rcx], dx ; ret
0x00000000000b7e5a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov word ptr [rdi], dx ; ret
0x00000000000cf35a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; xor rax, rax ; ret
0x00000000000b7b38 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x00000000000ac6e9 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000a20c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000ca054 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000bc0ff : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; cmove rax, rdx ; ret
0x00000000000a2075 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002fdda : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000024410 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000189b0e : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000184bdc : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x000000000009ef36 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x00000000000bc0cc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000040fc4 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000cf67c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000008dbd5 : add byte ptr [rax], al ; add byte ptr [rbp + 0x11], dh ; add rsp, 0x48 ; ret
0x00000000001157f1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x11], dh ; add rsp, 0x58 ; ret
0x00000000000d01f0 : add byte ptr [rax], al ; add byte ptr [rbp + 0x14], dh ; add rsp, 0x28 ; ret
0x000000000011f0b6 : add byte ptr [rax], al ; add byte ptr [rbp + 0x18], dh ; add rsp, 0x68 ; ret
0x000000000005b872 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1e], dh ; add rsp, 0x38 ; ret
0x0000000000154220 : add byte ptr [rax], al ; add byte ptr [rbp + 0x23], dh ; add rsp, 0x28 ; ret
0x00000000001365cc : add byte ptr [rax], al ; add byte ptr [rbp + 0x28], dh ; add rsp, 0x38 ; ret
0x00000000000d273b : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; ret
0x00000000000d1036 : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], dh ; add rsp, 0x28 ; ret
0x000000000015cabf : add byte ptr [rax], al ; add byte ptr [rbp + 0x30], dh ; add rsp, 0x18 ; ret
0x00000000000c0597 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; imul cl ; ret
0x00000000000a0afe : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x0000000000115941 : add byte ptr [rax], al ; add byte ptr [rbp + 0x37], dh ; add rsp, 0x68 ; ret
0x000000000015fa11 : add byte ptr [rax], al ; add byte ptr [rbp + 0x38], dh ; add rsp, 0x58 ; ret
0x000000000019719b : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; ret
0x0000000000116b65 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; add rsp, 0x38 ; ret
0x0000000000116c34 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3c], dh ; add rsp, 0x38 ; ret
0x000000000015fd7a : add byte ptr [rax], al ; add byte ptr [rbp + 0x3d], dh ; add rsp, 0x38 ; ret
0x0000000000060f0b : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000436c7 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000121100 : add byte ptr [rax], al ; add byte ptr [rbp + 0x46], dh ; add rsp, 0x58 ; ret
0x00000000001133c8 : add byte ptr [rax], al ; add byte ptr [rbp + 0x46], dh ; add rsp, 0x68 ; ret
0x0000000000113457 : add byte ptr [rax], al ; add byte ptr [rbp + 0x47], dh ; add rsp, 0x18 ; ret
0x000000000011350f : add byte ptr [rax], al ; add byte ptr [rbp + 0x47], dh ; add rsp, 0x58 ; ret
0x000000000015fb08 : add byte ptr [rax], al ; add byte ptr [rbp + 0x47], dh ; add rsp, 0x68 ; ret
0x00000000001135ad : add byte ptr [rax], al ; add byte ptr [rbp + 0x49], dh ; add rsp, 0x58 ; ret
0x000000000015fcb1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4e], dh ; add rsp, 0x68 ; ret
0x00000000000df40c : add byte ptr [rax], al ; add byte ptr [rbp + 0x52], dh ; add rsp, 0x38 ; ret
0x000000000010299e : add byte ptr [rax], al ; add byte ptr [rbp + 0x53], dh ; add rsp, 0x38 ; ret
0x000000000011498c : add byte ptr [rax], al ; add byte ptr [rbp + 0x5a], dh ; add rsp, 0x38 ; ret
0x00000000000e44fc : add byte ptr [rax], al ; add byte ptr [rbp + 0x62], dh ; add rsp, 0x38 ; ret
0x0000000000114ae1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x75], dh ; add rsp, 0x38 ; ret
0x000000000012f595 : add byte ptr [rax], al ; add byte ptr [rbp + 0xb], dh ; add rsp, 0x28 ; ret
0x0000000000113afa : add byte ptr [rax], al ; add byte ptr [rbp + 0xc], dh ; add rsp, 0x18 ; ret
0x0000000000062de4 : add byte ptr [rax], al ; add byte ptr [rbp + 0xe], dh ; add rsp, 0x18 ; ret
0x000000000005503b : add byte ptr [rax], al ; add byte ptr [rbp + 3], dh ; push r10 ; ret
0x0000000000042b92 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x0000000000047440 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x0000000000136669 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x0000000000155c93 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x48 ; ret
0x00000000001539e2 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x78 ; ret
0x0000000000023a72 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3c], dh ; ret
0x000000000010befa : add byte ptr [rax], al ; add byte ptr [rbp - 0x76b7febd], cl ; ret
0x0000000000155a6e : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; in al, 0x74 ; ret
0x0000000000049b39 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], -0x7c ; ret
0x00000000000911f5 : add byte ptr [rax], al ; add byte ptr [rbx + 0x158901ea], al ; ret
0x00000000000900ad : add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000bc100 : add byte ptr [rax], al ; add byte ptr [rbx + 0x48], bl ; cmove eax, edx ; ret
0x000000000004429a : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000043550 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000832cc : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000018f9a8 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x0000000000045eed : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x63], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000102e45 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf00001], al ; ret
0x00000000000bf1e1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0cf03], al ; ret
0x00000000001413e7 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7efab], cl ; ret
0x00000000001412b5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7efbb], cl ; ret
0x00000000000bca8d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fb8d], cl ; ret
0x00000000001890c1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cf0fb06], al ; ret
0x000000000006dc6e : add byte ptr [rax], al ; add byte ptr [rbx - 0x9bef71d], al ; ret
0x0000000000194cff : add byte ptr [rax], al ; add byte ptr [rcx + 0x21], cl ; ret
0x00000000000d6be9 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret
0x00000000001787cd : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x00000000000f8759 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret
0x000000000005f369 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret
0x000000000012cf91 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; pop rbp ; ret
0x00000000000cd818 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret
0x00000000001507c6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; adc dword ptr [rax + 0x20], edx ; ret
0x000000000014fea3 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; adc dword ptr [rax + 8], eax ; ret
0x00000000000531ad : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000009d716 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x20], al ; pop r12 ; ret
0x000000000015e332 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbp ; pop r12 ; ret
0x00000000000d005e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x20], cl ; pop r12 ; ret
0x000000000004125b : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x28], cl ; ret
0x000000000002f702 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbp ; pop r12 ; ret
0x0000000000081a40 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x00000000000d11a1 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000008cd43 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x00000000001533bc : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x000000000009809e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x0000000000188a1d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x0000000000051446 : add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret
0x000000000013b40b : add byte ptr [rax], al ; add byte ptr [rcx - 0x76b7f3a9], cl ; ret
0x0000000000029b4a : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x000000000019654b : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000053be7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000001393ab : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x000000000006c6b7 : add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x00000000000a0472 : add byte ptr [rax], al ; add byte ptr [rcx], al ; je 0xa0435 ; ret
0x00000000000bcd82 : add byte ptr [rax], al ; add byte ptr [rcx], al ; je 0xbcd45 ; ret
0x00000000000c9ff5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x000000000008d8db : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000097c9e : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x34 ; ret
0x000000000009ef37 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x00000000000cf082 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x0000000000192be2 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x0000000000087cc6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rax + 0x40], eax ; pop rbx ; ret
0x00000000000919c2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x00000000001507d8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdx], ebx ; ret
0x000000000014d080 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdx], ecx ; ret
0x000000000014fec8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdx], edx ; ret
0x00000000001507b8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdx], esp ; ret
0x000000000010d04e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], edi ; ret
0x000000000010046b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 8], eax ; ret
0x0000000000148328 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 8], ecx ; ret
0x000000000016de7d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000001388d3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov cl, 0x15 ; ret
0x000000000016deed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000038dd5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000004921d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000bc145 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x00000000000ac16d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000e15f7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x000000000014f44d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg edi, eax ; ret
0x00000000000951f9 : add byte ptr [rax], al ; add byte ptr [rdx], al ; jbe 0x95200 ; ret
0x00000000000ac57a : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000009525a : add byte ptr [rax], al ; add byte ptr [rsi + 1], dh ; ret
0x00000000001255ab : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; endbr64 ; ret
0x000000000017877b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov word ptr [rcx], dx ; ret
0x00000000000b7e5b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov word ptr [rdi], dx ; ret
0x00000000000baf2b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000cf35b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; xor rax, rax ; ret
0x00000000000c6a9a : add byte ptr [rax], al ; add byte ptr [rsp + rax + 0x44], dh ; mov eax, eax ; ret
0x000000000002e046 : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000578c5 : add byte ptr [rax], al ; add cl, cl ; ret
0x00000000000a8a55 : add byte ptr [rax], al ; add dh, al ; add byte ptr [rax], al ; ret
0x000000000013d075 : add byte ptr [rax], al ; add dh, al ; ret
0x00000000000951fa : add byte ptr [rax], al ; add dh, byte ptr [rsi + 1] ; ret
0x0000000000063c08 : add byte ptr [rax], al ; add dh, dh ; ret
0x00000000000cfafe : add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000000abf43 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000184af8 : add byte ptr [rax], al ; add rax, rdi ; vzeroupper ; ret
0x00000000000521fa : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000089a54 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000009a75e : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000042b3f : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000000000014e653 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000155ef5 : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000010e60b : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000008a401 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000151f91 : add byte ptr [rax], al ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000013de83 : add byte ptr [rax], al ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000115095 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x000000000010dd59 : add byte ptr [rax], al ; add rsp, 0x68 ; pop rbp ; pop r12 ; ret
0x00000000001010ea : add byte ptr [rax], al ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000010e4ca : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x000000000010ded4 : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x0000000000024240 : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000011737c : add byte ptr [rax], al ; add rsp, 8 ; mov eax, r8d ; ret
0x00000000000a291e : add byte ptr [rax], al ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x0000000000024e06 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000041e66 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000004245e : add byte ptr [rax], al ; addss xmm0, xmm0 ; ret
0x000000000011ee88 : add byte ptr [rax], al ; and eax, 0xfffff000 ; or eax, edx ; ret
0x000000000003448f : add byte ptr [rax], al ; and eax, esi ; ret
0x00000000000ac16e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x00000000000b1e00 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000b1918 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000000bc200 : add byte ptr [rax], al ; clc ; jg 0xbc1fc ; int1 ; mov eax, eax ; ret
0x0000000000112afa : add byte ptr [rax], al ; cmova eax, edx ; ret
0x000000000013c576 : add byte ptr [rax], al ; cmovb eax, edx ; ret
0x0000000000120e0d : add byte ptr [rax], al ; cmovb rax, rdx ; ret
0x0000000000043de0 : add byte ptr [rax], al ; cmove eax, edx ; ret
0x000000000011570b : add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000bc13a : add byte ptr [rax], al ; cmove rax, rcx ; ret
0x00000000000a0405 : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000cf193 : add byte ptr [rax], al ; cmovg r9d, eax ; mov eax, r9d ; ret
0x00000000000cf171 : add byte ptr [rax], al ; cmovl r9d, eax ; mov eax, r9d ; ret
0x00000000000ee412 : add byte ptr [rax], al ; cmovne eax, edx ; pop rbx ; ret
0x00000000000dcffa : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00000000000a2898 : add byte ptr [rax], al ; cmovne r8, rax ; mov rax, r8 ; ret
0x00000000000e4fed : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000127ade : add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000017c6e6 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000102a0c : add byte ptr [rax], al ; cmp dx, 2 ; je 0x102a18 ; ret
0x0000000000087499 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x874a8 ; ret
0x000000000009385e : add byte ptr [rax], al ; endbr64 ; mov rax, rdi ; ret
0x000000000009381e : add byte ptr [rax], al ; endbr64 ; ret
0x000000000014625e : add byte ptr [rax], al ; endbr64 ; xor eax, eax ; ret
0x0000000000041dce : add byte ptr [rax], al ; fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x0000000000041c6a : add byte ptr [rax], al ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000094e4b : add byte ptr [rax], al ; jbe 0x94e50 ; ret
0x0000000000094e8b : add byte ptr [rax], al ; jbe 0x94e90 ; ret
0x000000000009525b : add byte ptr [rax], al ; jbe 0x95260 ; ret
0x000000000009e1fa : add byte ptr [rax], al ; je 0x9e200 ; ret
0x00000000000c6a9b : add byte ptr [rax], al ; je 0xc6aa3 ; mov eax, r8d ; ret
0x00000000000cf614 : add byte ptr [rax], al ; je 0xcf680 ; lea rax, [rdi - 0x10] ; ret
0x0000000000192be3 : add byte ptr [rax], al ; jg 0x192bf0 ; neg eax ; ret
0x00000000000cf083 : add byte ptr [rax], al ; jg 0xcf089 ; neg eax ; ret
0x000000000018f9a9 : add byte ptr [rax], al ; jl 0x18f9b0 ; neg eax ; ret
0x000000000010299f : add byte ptr [rax], al ; jne 0x1029f6 ; add rsp, 0x38 ; ret
0x000000000010d179 : add byte ptr [rax], al ; jne 0x10d191 ; add rsp, 0x28 ; ret
0x000000000010d32e : add byte ptr [rax], al ; jne 0x10d338 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000010d43e : add byte ptr [rax], al ; jne 0x10d447 ; add rsp, 0x18 ; ret
0x000000000010d490 : add byte ptr [rax], al ; jne 0x10d499 ; add rsp, 0x18 ; ret
0x00000000001133c9 : add byte ptr [rax], al ; jne 0x113413 ; add rsp, 0x68 ; ret
0x0000000000113458 : add byte ptr [rax], al ; jne 0x1134a3 ; add rsp, 0x18 ; ret
0x0000000000113510 : add byte ptr [rax], al ; jne 0x11355b ; add rsp, 0x58 ; ret
0x00000000001135ae : add byte ptr [rax], al ; jne 0x1135fb ; add rsp, 0x58 ; ret
0x0000000000113afb : add byte ptr [rax], al ; jne 0x113b0b ; add rsp, 0x18 ; ret
0x000000000011498d : add byte ptr [rax], al ; jne 0x1149eb ; add rsp, 0x38 ; ret
0x0000000000114a2d : add byte ptr [rax], al ; jne 0x114a8b ; add rsp, 0x38 ; ret
0x0000000000114ae2 : add byte ptr [rax], al ; jne 0x114b5b ; add rsp, 0x38 ; ret
0x0000000000114bb2 : add byte ptr [rax], al ; jne 0x114c2b ; add rsp, 0x38 ; ret
0x0000000000114cac : add byte ptr [rax], al ; jne 0x114cb5 ; add rsp, 0x28 ; ret
0x00000000001157f2 : add byte ptr [rax], al ; jne 0x115807 ; add rsp, 0x58 ; ret
0x000000000011586b : add byte ptr [rax], al ; jne 0x115874 ; add rsp, 0x28 ; ret
0x0000000000115942 : add byte ptr [rax], al ; jne 0x11597d ; add rsp, 0x68 ; ret
0x0000000000116b66 : add byte ptr [rax], al ; jne 0x116ba5 ; add rsp, 0x38 ; ret
0x0000000000116c35 : add byte ptr [rax], al ; jne 0x116c75 ; add rsp, 0x38 ; ret
0x00000000001196b7 : add byte ptr [rax], al ; jne 0x1196c0 ; add rsp, 0x18 ; ret
0x000000000011f0b7 : add byte ptr [rax], al ; jne 0x11f0d3 ; add rsp, 0x68 ; ret
0x0000000000120abc : add byte ptr [rax], al ; jne 0x120ac5 ; add rsp, 0x18 ; ret
0x0000000000121101 : add byte ptr [rax], al ; jne 0x12114b ; add rsp, 0x58 ; ret
0x000000000012d0d2 : add byte ptr [rax], al ; jne 0x12d1ad ; leave ; ret
0x000000000012f596 : add byte ptr [rax], al ; jne 0x12f5a5 ; add rsp, 0x28 ; ret
0x000000000012f5f6 : add byte ptr [rax], al ; jne 0x12f605 ; add rsp, 0x28 ; ret
0x00000000001365cd : add byte ptr [rax], al ; jne 0x1365f9 ; add rsp, 0x38 ; ret
0x000000000013666a : add byte ptr [rax], al ; jne 0x136673 ; add rsp, 0x38 ; ret
0x00000000001366d7 : add byte ptr [rax], al ; jne 0x1366e0 ; add rsp, 0x28 ; ret
0x000000000013c6f0 : add byte ptr [rax], al ; jne 0x13c700 ; add rsp, 0x18 ; ret
0x000000000013e127 : add byte ptr [rax], al ; jne 0x13e145 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000013e17c : add byte ptr [rax], al ; jne 0x13e185 ; add rsp, 0x18 ; ret
0x000000000013e1cf : add byte ptr [rax], al ; jne 0x13e1d8 ; add rsp, 0x28 ; ret
0x000000000013ea5e : add byte ptr [rax], al ; jne 0x13ea67 ; add rsp, 0x18 ; ret
0x0000000000146329 : add byte ptr [rax], al ; jne 0x146333 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000001490ff : add byte ptr [rax], al ; jne 0x149143 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000149672 : add byte ptr [rax], al ; jne 0x1496a2 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000149710 : add byte ptr [rax], al ; jne 0x149745 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014a323 : add byte ptr [rax], al ; jne 0x14a337 ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000151721 : add byte ptr [rax], al ; jne 0x151741 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000151cea : add byte ptr [rax], al ; jne 0x151d5a ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000151e2a : add byte ptr [rax], al ; jne 0x151e9a ; add rsp, 0x30 ; pop rbx ; ret
0x00000000001539e3 : add byte ptr [rax], al ; jne 0x1539ec ; add rsp, 0x78 ; ret
0x0000000000153a59 : add byte ptr [rax], al ; jne 0x153a62 ; add rsp, 0x78 ; ret
0x0000000000153ac9 : add byte ptr [rax], al ; jne 0x153ad2 ; add rsp, 0x78 ; ret
0x0000000000153b39 : add byte ptr [rax], al ; jne 0x153b42 ; add rsp, 0x78 ; ret
0x0000000000153b9a : add byte ptr [rax], al ; jne 0x153ba3 ; add rsp, 0x78 ; ret
0x0000000000153bfe : add byte ptr [rax], al ; jne 0x153c07 ; add rsp, 0x78 ; ret
0x0000000000153c69 : add byte ptr [rax], al ; jne 0x153c72 ; add rsp, 0x78 ; ret
0x0000000000153cec : add byte ptr [rax], al ; jne 0x153cf5 ; add rsp, 0x78 ; ret
0x0000000000154221 : add byte ptr [rax], al ; jne 0x154248 ; add rsp, 0x28 ; ret
0x0000000000155c94 : add byte ptr [rax], al ; jne 0x155c9d ; add rsp, 0x48 ; ret
0x0000000000155cff : add byte ptr [rax], al ; jne 0x155d43 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000155d8f : add byte ptr [rax], al ; jne 0x155dd2 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000155e5f : add byte ptr [rax], al ; jne 0x155ea5 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000001562af : add byte ptr [rax], al ; jne 0x1562f4 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015633f : add byte ptr [rax], al ; jne 0x156383 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015650f : add byte ptr [rax], al ; jne 0x156559 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015659f : add byte ptr [rax], al ; jne 0x1565e3 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015728f : add byte ptr [rax], al ; jne 0x1572d5 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015731f : add byte ptr [rax], al ; jne 0x157365 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001573af : add byte ptr [rax], al ; jne 0x1573f5 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015743f : add byte ptr [rax], al ; jne 0x157485 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000157c58 : add byte ptr [rax], al ; jne 0x157c62 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000157ccb : add byte ptr [rax], al ; jne 0x157cd5 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015cac0 : add byte ptr [rax], al ; jne 0x15caf4 ; add rsp, 0x18 ; ret
0x000000000015cdb7 : add byte ptr [rax], al ; jne 0x15cdec ; add rsp, 0x10 ; pop rbp ; ret
0x000000000015ce47 : add byte ptr [rax], al ; jne 0x15ce7c ; add rsp, 0x10 ; pop rbp ; ret
0x000000000015fa12 : add byte ptr [rax], al ; jne 0x15fa4e ; add rsp, 0x58 ; ret
0x000000000015fb09 : add byte ptr [rax], al ; jne 0x15fb54 ; add rsp, 0x68 ; ret
0x000000000015fcb2 : add byte ptr [rax], al ; jne 0x15fd04 ; add rsp, 0x68 ; ret
0x000000000015fd7b : add byte ptr [rax], al ; jne 0x15fdbc ; add rsp, 0x38 ; ret
0x0000000000160e0e : add byte ptr [rax], al ; jne 0x160e17 ; add rsp, 0x28 ; ret
0x0000000000163399 : add byte ptr [rax], al ; jne 0x1633a3 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000016341f : add byte ptr [rax], al ; jne 0x163429 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000184ec2 : add byte ptr [rax], al ; jne 0x184dd0 ; ret
0x000000000018be00 : add byte ptr [rax], al ; jne 0x18bd80 ; ret
0x0000000000023a73 : add byte ptr [rax], al ; jne 0x23a3b ; ret
0x0000000000042b93 : add byte ptr [rax], al ; jne 0x42b9c ; add rsp, 0x18 ; ret
0x0000000000043994 : add byte ptr [rax], al ; jne 0x439b2 ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000047441 : add byte ptr [rax], al ; jne 0x4744a ; add rsp, 0x28 ; ret
0x0000000000047531 : add byte ptr [rax], al ; jne 0x4753a ; add rsp, 0x28 ; ret
0x0000000000047dbb : add byte ptr [rax], al ; jne 0x47dc4 ; add rsp, 0x18 ; ret
0x0000000000047e08 : add byte ptr [rax], al ; jne 0x47e11 ; add rsp, 0x18 ; ret
0x0000000000047e5a : add byte ptr [rax], al ; jne 0x47e63 ; add rsp, 0x18 ; ret
0x0000000000047ea7 : add byte ptr [rax], al ; jne 0x47eb0 ; add rsp, 0x18 ; ret
0x0000000000047efa : add byte ptr [rax], al ; jne 0x47f03 ; add rsp, 0x18 ; ret
0x0000000000047f47 : add byte ptr [rax], al ; jne 0x47f50 ; add rsp, 0x18 ; ret
0x000000000005503c : add byte ptr [rax], al ; jne 0x55043 ; push r10 ; ret
0x0000000000055545 : add byte ptr [rax], al ; jne 0x5554c ; push r10 ; ret
0x00000000000578c0 : add byte ptr [rax], al ; jne 0x57945 ; leave ; ret
0x000000000005b873 : add byte ptr [rax], al ; jne 0x5b895 ; add rsp, 0x38 ; ret
0x0000000000062de5 : add byte ptr [rax], al ; jne 0x62df7 ; add rsp, 0x18 ; ret
0x000000000008dbd6 : add byte ptr [rax], al ; jne 0x8dbeb ; add rsp, 0x48 ; ret
0x00000000000991fd : add byte ptr [rax], al ; jne 0x99242 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000000ca0b1 : add byte ptr [rax], al ; jne 0xca0d4 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000d01f1 : add byte ptr [rax], al ; jne 0xd0209 ; add rsp, 0x28 ; ret
0x00000000000d026b : add byte ptr [rax], al ; jne 0xd0275 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000000d1037 : add byte ptr [rax], al ; jne 0xd1064 ; add rsp, 0x28 ; ret
0x00000000000da6ba : add byte ptr [rax], al ; jne 0xda6c3 ; add rsp, 0x18 ; ret
0x00000000000dcf8a : add byte ptr [rax], al ; jne 0xdcf93 ; add rsp, 0x18 ; ret
0x00000000000df40d : add byte ptr [rax], al ; jne 0xdf463 ; add rsp, 0x38 ; ret
0x00000000000e3664 : add byte ptr [rax], al ; jne 0xe36a9 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000e3834 : add byte ptr [rax], al ; jne 0xe3879 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000e418d : add byte ptr [rax], al ; jne 0xe41e3 ; add rsp, 0x38 ; ret
0x00000000000e422d : add byte ptr [rax], al ; jne 0xe4283 ; add rsp, 0x38 ; ret
0x00000000000e44fd : add byte ptr [rax], al ; jne 0xe4563 ; add rsp, 0x38 ; ret
0x00000000000e45ad : add byte ptr [rax], al ; jne 0xe4613 ; add rsp, 0x38 ; ret
0x00000000000e4fc3 : add byte ptr [rax], al ; jne 0xe4fe3 ; mov eax, 0xfffa ; ret
0x00000000000e50e4 : add byte ptr [rax], al ; jne 0xe50f0 ; mov eax, 0x40 ; ret
0x00000000000ee492 : add byte ptr [rax], al ; jne 0xee3bd ; ret
0x0000000000190e1e : add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x0000000000190e2e : add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x0000000000190e3e : add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x0000000000190e4e : add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x0000000000190e5e : add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x0000000000190d7d : add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x0000000000190dae : add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x0000000000190dbe : add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x0000000000190dce : add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x0000000000190dde : add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x0000000000190dee : add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x0000000000190d2a : add byte ptr [rax], al ; lea rax, [rdi + 7] ; ret
0x0000000000190dfe : add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x0000000000190e0e : add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x00000000000cf4eb : add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x00000000000cf64e : add byte ptr [rax], al ; lea rax, [rdi - 0xc] ; ret
0x00000000000cf66e : add byte ptr [rax], al ; lea rax, [rdi - 4] ; ret
0x00000000000cf65e : add byte ptr [rax], al ; lea rax, [rdi - 8] ; ret
0x000000000009c20e : add byte ptr [rax], al ; lea rax, [rdx - 0x10] ; ret
0x00000000000328be : add byte ptr [rax], al ; lea rax, [rip + 0x181ab6] ; ret
0x00000000000578c6 : add byte ptr [rax], al ; leave ; ret
0x00000000000a8a56 : add byte ptr [rax], al ; mov byte ptr [rax], 0 ; ret
0x0000000000189803 : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x00000000000ec443 : add byte ptr [rax], al ; mov byte ptr [rdi], 0x5b ; ret
0x00000000000b849e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000000b6e5e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a8a7e : add byte ptr [rax], al ; mov dword ptr [rax], ecx ; ret
0x00000000001787ce : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x00000000001787be : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000017879e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000013b40c : add byte ptr [rax], al ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000a8b4e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000b7e9e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000057c30 : add byte ptr [rax], al ; mov dword ptr [rdx], 0xffffc002 ; ret
0x0000000000095230 : add byte ptr [rax], al ; mov dword ptr [rip + 0x157074], eax ; ret
0x0000000000148317 : add byte ptr [rax], al ; mov dword ptr [rsi + 8], eax ; ret
0x000000000010d068 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000b7b5e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000013c9be : add byte ptr [rax], al ; mov eax, 0x7fffffff ; ret
0x00000000000f249e : add byte ptr [rax], al ; mov eax, 0xc ; ret
0x00000000000412bc : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbp ; ret
0x00000000000246f4 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000057b3f : add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000057d52 : add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000047585 : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000017debe : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000012fb06 : add byte ptr [rax], al ; mov eax, edi ; and eax, 0xffffff ; ret
0x000000000009d717 : add byte ptr [rax], al ; mov eax, r12d ; pop r12 ; ret
0x000000000015e333 : add byte ptr [rax], al ; mov eax, r12d ; pop rbp ; pop r12 ; ret
0x000000000011417a : add byte ptr [rax], al ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011733d : add byte ptr [rax], al ; mov eax, r8d ; add rsp, 8 ; ret
0x000000000002f703 : add byte ptr [rax], al ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000081a41 : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x00000000000438ed : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x000000000008cd44 : add byte ptr [rax], al ; mov eax, r8d ; ret
0x00000000000b6e9e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000b6e8e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000015f907 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000015f8bf : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000015fe02 : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000017880e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000017881e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000017882e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000017883e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000017884e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000017885e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x00000000001787fe : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x00000000001787de : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00000000000b7eae : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a86e9 : add byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, r9 ; ret
0x00000000000b7eee : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b7efe : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000b7f0e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000b7f1e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000b7ede : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000b7ebe : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x0000000000057b58 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00000000000827f8 : add byte ptr [rax], al ; mov qword ptr [rdx + 0xe0], rcx ; ret
0x0000000000095209 : add byte ptr [rax], al ; mov qword ptr [rip + 0x15707e], rax ; ret
0x00000000000951e0 : add byte ptr [rax], al ; mov qword ptr [rip + 0x15709f], rax ; ret
0x00000000000951c0 : add byte ptr [rax], al ; mov qword ptr [rip + 0x1570b7], rax ; ret
0x0000000000148308 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000048156 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000001482a4 : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000003454d : add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x000000000013f08e : add byte ptr [rax], al ; mov r10, rax ; mov byte ptr [r10], 0 ; ret
0x0000000000042f2c : add byte ptr [rax], al ; mov rax, 0xffffffffffffffff ; ret
0x00000000000cfb2e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000cfb3e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000cfb4e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000cfb5e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000cfb6e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000cfb7e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000011d026 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000473c8 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000004125c : add byte ptr [rax], al ; mov rax, r11 ; ret
0x00000000000d005f : add byte ptr [rax], al ; mov rax, r12 ; pop r12 ; ret
0x0000000000062655 : add byte ptr [rax], al ; mov rax, r12 ; pop rbp ; pop r12 ; ret
0x0000000000117283 : add byte ptr [rax], al ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015d1c7 : add byte ptr [rax], al ; mov rax, r8 ; pop rbp ; ret
0x0000000000099caf : add byte ptr [rax], al ; mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001533bd : add byte ptr [rax], al ; mov rax, r8 ; pop rbx ; ret
0x000000000009809f : add byte ptr [rax], al ; mov rax, r8 ; ret
0x0000000000188a1e : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x0000000000038c75 : add byte ptr [rax], al ; mov rax, r9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008f50b : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000090086 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b812e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000018b62e : add byte ptr [rax], al ; mov rax, rdi ; vzeroupper ; ret
0x00000000000bbbf3 : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000b6ece : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000005b4ce : add byte ptr [rax], al ; mov rsp, rdx ; ret
0x0000000000113c89 : add byte ptr [rax], al ; mov word ptr [rdi + 0x16], ax ; ret
0x00000000000a898e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; add rax, rdi ; ret
0x000000000018a67e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x0000000000048198 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000000b7f2e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000b7f3e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000001507c7 : add byte ptr [rax], al ; movups xmmword ptr [r8 + 0x20], xmm2 ; ret
0x000000000014fea4 : add byte ptr [rax], al ; movups xmmword ptr [r8 + 8], xmm0 ; ret
0x0000000000087cc7 : add byte ptr [rax], al ; movups xmmword ptr [rax + 0x40], xmm0 ; pop rbx ; ret
0x0000000000141b75 : add byte ptr [rax], al ; movups xmmword ptr [rax], xmm0 ; add rsp, 8 ; ret
0x00000000000926bc : add byte ptr [rax], al ; movups xmmword ptr [rbp + 0x38], xmm0 ; pop rbp ; pop r12 ; ret
0x00000000000919c3 : add byte ptr [rax], al ; movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x000000000014d081 : add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm1 ; ret
0x000000000014fec9 : add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm2 ; ret
0x00000000001507d9 : add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm3 ; ret
0x00000000001507b9 : add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm4 ; ret
0x000000000010d04f : add byte ptr [rax], al ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000010046c : add byte ptr [rax], al ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x0000000000148329 : add byte ptr [rax], al ; movups xmmword ptr [rsi + 8], xmm1 ; ret
0x0000000000090de1 : add byte ptr [rax], al ; movzx eax, bl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bc146 : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000016deee : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000016de7e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000001255ac : add byte ptr [rax], al ; nop ; endbr64 ; ret
0x0000000000190d9d : add byte ptr [rax], al ; nop ; lea rax, [rdi + 1] ; ret
0x0000000000190d8d : add byte ptr [rax], al ; nop ; lea rax, [rdi] ; ret
0x00000000001787ac : add byte ptr [rax], al ; nop ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000000b7e6d : add byte ptr [rax], al ; nop ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000b7e8c : add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000b7e7d : add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; ret
0x00000000001787ed : add byte ptr [rax], al ; nop ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x00000000000b7ecd : add byte ptr [rax], al ; nop ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000018a8ed : add byte ptr [rax], al ; nop ; mov rax, rdi ; vzeroupper ; ret
0x000000000017878d : add byte ptr [rax], al ; nop ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000017877c : add byte ptr [rax], al ; nop ; mov word ptr [rcx], dx ; ret
0x00000000000b7e5c : add byte ptr [rax], al ; nop ; mov word ptr [rdi], dx ; ret
0x00000000000319bc : add byte ptr [rax], al ; nop ; ret
0x000000000018478d : add byte ptr [rax], al ; nop ; vzeroupper ; xor eax, eax ; ret
0x00000000000baf2c : add byte ptr [rax], al ; nop ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000001483dd : add byte ptr [rax], al ; nop ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cf35c : add byte ptr [rax], al ; nop ; xor rax, rax ; ret
0x0000000000198ac1 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x000000000014690b : add byte ptr [rax], al ; nop dword ptr [rax] ; endbr64 ; ret
0x000000000017876a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov byte ptr [rcx], dl ; ret
0x00000000000b7e4a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov byte ptr [rdi], dl ; ret
0x00000000000b67ba : add byte ptr [rax], al ; nop dword ptr [rax] ; mov rax, rdi ; ret
0x00000000000b7b3a : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x00000000000ac6eb : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000012dbe8 : add byte ptr [rax], al ; nop word ptr [rax + rax] ; ret
0x0000000000041fc7 : add byte ptr [rax], al ; or byte ptr [rax + 0x21], 0xc2 ; mov qword ptr [rdi], rdx ; ret
0x000000000012cf92 : add byte ptr [rax], al ; pop r12 ; pop rbp ; ret
0x000000000006344d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000060f0c : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000436c8 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000005b5ba : add byte ptr [rax], al ; pop rbp ; ret
0x00000000000bc101 : add byte ptr [rax], al ; pop rbx ; cmove rax, rdx ; ret
0x0000000000099bd2 : add byte ptr [rax], al ; pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; ret
0x000000000010feae : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000004429b : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000043551 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000832cd : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002fddc : add byte ptr [rax], al ; pop rbx ; ret
0x00000000000900ae : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000116d8e : add byte ptr [rax], al ; pxor xmm0, xmm0 ; movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000024247 : add byte ptr [rax], al ; ret
0x0000000000102aa6 : add byte ptr [rax], al ; setne al ; lea eax, [rax + rax*8 + 5] ; ret
0x00000000000e518e : add byte ptr [rax], al ; setne al ; ret
0x00000000000989cf : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbp ; ret
0x000000000010c68a : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000018e2bc : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000041b68 : add byte ptr [rax], al ; sub eax, edx ; sar eax, 0x10 ; ret
0x00000000001141b6 : add byte ptr [rax], al ; sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x000000000013c16f : add byte ptr [rax], al ; sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x0000000000092a26 : add byte ptr [rax], al ; sub rax, rcx ; sub eax, 1 ; ret
0x00000000000bb931 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x0000000000148213 : add byte ptr [rax], al ; test eax, eax ; je 0x148220 ; xor eax, eax ; ret
0x00000000000e5217 : add byte ptr [rax], al ; test edi, edi ; js 0xe5220 ; ret
0x0000000000063084 : add byte ptr [rax], al ; test edx, edx ; jne 0x63090 ; sub dword ptr [rdi], 1 ; ret
0x0000000000189b10 : add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000184bde : add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000000d015c : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000009ef38 : add byte ptr [rax], al ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x000000000008d8dc : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bc0ce : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000040fc6 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001843ee : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x0000000000047d7a : add byte ptr [rax], al ; xor eax, ecx ; ret
0x000000000008e306 : add byte ptr [rax], al ; xor r8d, r8d ; mov rax, r8 ; ret
0x00000000000cf08e : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000970e8 : add byte ptr [rax], cl ; add byte ptr [rcx], dh ; shr al, 0xbe ; ret
0x00000000000340e8 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x00000000000341c8 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x0000000000024e05 : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000445c1 : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x000000000004245d : add byte ptr [rax], r8b ; addss xmm0, xmm0 ; ret
0x000000000009381d : add byte ptr [rax], r8b ; endbr64 ; ret
0x000000000014625d : add byte ptr [rax], r8b ; endbr64 ; xor eax, eax ; ret
0x0000000000041dcd : add byte ptr [rax], r8b ; fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x0000000000062e75 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; pop rbp ; ret
0x00000000000884b5 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000000e5a95 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x00000000000ff75d : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x000000000012595d : add byte ptr [rax], r8b ; mov eax, r8d ; ret
0x00000000000b6e8d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000011cc55 : add byte ptr [rax], r8b ; mov rax, r8 ; ret
0x00000000000b812d : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x00000000000b6ecd : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000009e405 : add byte ptr [rax], r8b ; pop rbp ; ret
0x0000000000148bb5 : add byte ptr [rax], r8b ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000002fd65 : add byte ptr [rax], r8b ; ret
0x0000000000092a25 : add byte ptr [rax], r8b ; sub rax, rcx ; sub eax, 1 ; ret
0x000000000010c565 : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x0000000000055bf5 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000001843ed : add byte ptr [rax], r8b ; xor eax, eax ; vzeroupper ; ret
0x00000000000a285d : add byte ptr [rax], r8b ; xor r8d, r8d ; mov rax, r8 ; ret
0x00000000000cf08d : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x000000000014a324 : add byte ptr [rbp + 0x10], dh ; add rsp, 0x40 ; pop rbx ; ret
0x000000000008dbd7 : add byte ptr [rbp + 0x11], dh ; add rsp, 0x48 ; ret
0x00000000001157f3 : add byte ptr [rbp + 0x11], dh ; add rsp, 0x58 ; ret
0x00000000000d01f2 : add byte ptr [rbp + 0x14], dh ; add rsp, 0x28 ; ret
0x000000000015e927 : add byte ptr [rbp + 0x15], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011f0b8 : add byte ptr [rbp + 0x18], dh ; add rsp, 0x68 ; ret
0x000000000013e128 : add byte ptr [rbp + 0x1a], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000043995 : add byte ptr [rbp + 0x1a], dh ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000151722 : add byte ptr [rbp + 0x1c], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e4fc4 : add byte ptr [rbp + 0x1c], dh ; mov eax, 0xfffa ; ret
0x000000000005b874 : add byte ptr [rbp + 0x1e], dh ; add rsp, 0x38 ; ret
0x00000000000ca0b2 : add byte ptr [rbp + 0x1f], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000154222 : add byte ptr [rbp + 0x23], dh ; add rsp, 0x28 ; ret
0x000000000013a64c : add byte ptr [rbp + 0x28], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001365ce : add byte ptr [rbp + 0x28], dh ; add rsp, 0x38 ; ret
0x00000000000d273d : add byte ptr [rbp + 0x29], al ; ret
0x00000000000d1038 : add byte ptr [rbp + 0x29], dh ; add rsp, 0x28 ; ret
0x00000000000c9e86 : add byte ptr [rbp + 0x29dd75db], al ; ret
0x0000000000149673 : add byte ptr [rbp + 0x2c], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012b67f : add byte ptr [rbp + 0x2e], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000051ae9 : add byte ptr [rbp + 0x30], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000015cac1 : add byte ptr [rbp + 0x30], dh ; add rsp, 0x18 ; ret
0x00000000000c0599 : add byte ptr [rbp + 0x31], al ; imul cl ; ret
0x00000000000d006f : add byte ptr [rbp + 0x31], al ; in al, 0x4c ; mov eax, esp ; pop r12 ; ret
0x000000000013efdf : add byte ptr [rbp + 0x31], al ; rol byte ptr [rcx + rcx*4 - 0x30], cl ; ret
0x00000000000a0b00 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x000000000015cdb8 : add byte ptr [rbp + 0x31], dh ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000149711 : add byte ptr [rbp + 0x31], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001476de : add byte ptr [rbp + 0x34], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000024488 : add byte ptr [rbp + 0x35], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000115943 : add byte ptr [rbp + 0x37], dh ; add rsp, 0x68 ; ret
0x000000000015fa13 : add byte ptr [rbp + 0x38], dh ; add rsp, 0x58 ; ret
0x00000000000c9ee2 : add byte ptr [rbp + 0x391974db], al ; ret
0x00000000000c9fd7 : add byte ptr [rbp + 0x391c74db], al ; ret
0x000000000019719d : add byte ptr [rbp + 0x39], cl ; ret
0x0000000000116b67 : add byte ptr [rbp + 0x3b], dh ; add rsp, 0x38 ; ret
0x0000000000116c36 : add byte ptr [rbp + 0x3c], dh ; add rsp, 0x38 ; ret
0x000000000015fd7c : add byte ptr [rbp + 0x3d], dh ; add rsp, 0x38 ; ret
0x0000000000155d90 : add byte ptr [rbp + 0x3f], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000149100 : add byte ptr [rbp + 0x40], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000006344e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000060f0d : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000436c9 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000001562b0 : add byte ptr [rbp + 0x41], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000991fe : add byte ptr [rbp + 0x41], dh ; add rsp, 0x40 ; pop rbp ; ret
0x00000000000e3665 : add byte ptr [rbp + 0x41], dh ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000155e60 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000157290 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000156510 : add byte ptr [rbp + 0x46], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013c7ec : add byte ptr [rbp + 0x46], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000121102 : add byte ptr [rbp + 0x46], dh ; add rsp, 0x58 ; ret
0x00000000001133ca : add byte ptr [rbp + 0x46], dh ; add rsp, 0x68 ; ret
0x0000000000113459 : add byte ptr [rbp + 0x47], dh ; add rsp, 0x18 ; ret
0x0000000000113511 : add byte ptr [rbp + 0x47], dh ; add rsp, 0x58 ; ret
0x000000000015fb0a : add byte ptr [rbp + 0x47], dh ; add rsp, 0x68 ; ret
0x00000000001135af : add byte ptr [rbp + 0x49], dh ; add rsp, 0x58 ; ret
0x00000000001155a8 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000009a498 : add byte ptr [rbp + 0x4c], bl ; mov eax, eax ; pop r12 ; pop r13 ; ret
0x00000000001563cf : add byte ptr [rbp + 0x4e], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000015fcb3 : add byte ptr [rbp + 0x4e], dh ; add rsp, 0x68 ; ret
0x000000000005b059 : add byte ptr [rbp + 0x51], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000df40e : add byte ptr [rbp + 0x52], dh ; add rsp, 0x38 ; ret
0x00000000001029a0 : add byte ptr [rbp + 0x53], dh ; add rsp, 0x38 ; ret
0x000000000013cc9a : add byte ptr [rbp + 0x54], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000051c67 : add byte ptr [rbp + 0x5a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000011498e : add byte ptr [rbp + 0x5a], dh ; add rsp, 0x38 ; ret
0x0000000000051b99 : add byte ptr [rbp + 0x5f], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e44fe : add byte ptr [rbp + 0x62], dh ; add rsp, 0x38 ; ret
0x0000000000151ceb : add byte ptr [rbp + 0x6c], dh ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000e160a : add byte ptr [rbp + 0x6f], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000151a74 : add byte ptr [rbp + 0x73], dh ; add rsp, 0x10 ; pop r12 ; ret
0x0000000000114ae3 : add byte ptr [rbp + 0x75], dh ; add rsp, 0x38 ; ret
0x000000000014746d : add byte ptr [rbp + 0x77], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000112a54 : add byte ptr [rbp + 0x7f], dh ; add rsp, 0x40 ; pop r12 ; ret
0x000000000012f597 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x28 ; ret
0x0000000000113afc : add byte ptr [rbp + 0xc], dh ; add rsp, 0x18 ; ret
0x0000000000062de6 : add byte ptr [rbp + 0xe], dh ; add rsp, 0x18 ; ret
0x00000000000e2e14 : add byte ptr [rbp + 0xe], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001522b2 : add byte ptr [rbp + 0xe], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000005648f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x000000000005637f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000005503d : add byte ptr [rbp + 3], dh ; push r10 ; ret
0x0000000000042b94 : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x0000000000047442 : add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x000000000013666b : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x0000000000155c95 : add byte ptr [rbp + 5], dh ; add rsp, 0x48 ; ret
0x00000000001539e4 : add byte ptr [rbp + 5], dh ; add rsp, 0x78 ; ret
0x000000000010d32f : add byte ptr [rbp + 6], dh ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000157c59 : add byte ptr [rbp + 6], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d026c : add byte ptr [rbp + 6], dh ; add rsp, 0x40 ; pop rbp ; ret
0x00000000001449bc : add byte ptr [rbp + 7], dh ; add rsp, 0x10 ; pop r12 ; ret
0x000000000004736e : add byte ptr [rbp + 7], dh ; pop rbx ; ret
0x00000000000e50e5 : add byte ptr [rbp + 8], dh ; mov eax, 0x40 ; ret
0x00000000001930af : add byte ptr [rbp + rcx*4 + 0x5f], cl ; add dword ptr [rcx - 9], eax ; ret
0x0000000000023a74 : add byte ptr [rbp - 0x3c], dh ; ret
0x000000000010befc : add byte ptr [rbp - 0x76b7febd], cl ; ret
0x000000000002ca04 : add byte ptr [rbp - 0x77], cl ; ret
0x000000000009d5d8 : add byte ptr [rbp - 0x7acc812e], al ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000155a70 : add byte ptr [rbp - 0x7b], al ; in al, 0x74 ; ret
0x0000000000028239 : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000049b3b : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], -0x7c ; ret
0x00000000001183e8 : add byte ptr [rbp - 0x8f38b25], al ; ret
0x0000000000054337 : add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x00000000000e4802 : add byte ptr [rbp], bh ; add cl, ch ; ret
0x000000000017ff19 : add byte ptr [rbx + 0x148b8104], cl ; xchg ecx, eax ; sub eax, edx ; ret
0x0000000000098d0b : add byte ptr [rbx + 0x153e6d2d], al ; add byte ptr [rcx], al ; pop rbp ; ret
0x00000000000911f7 : add byte ptr [rbx + 0x158901ea], al ; ret
0x00000000000938a5 : add byte ptr [rbx + 0x15af1705], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000117c0f : add byte ptr [rbx + 0x17f01f8], al ; ret
0x000000000009c1eb : add byte ptr [rbx + 0x22], dh ; lea rax, [rax - 8] ; ret
0x00000000000900af : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000010feaf : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010d8a6 : add byte ptr [rbx + 0x47426f8], al ; mov eax, r9d ; ret
0x00000000000b6e9f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000017ab0f : add byte ptr [rbx + 0x48028901], cl ; lea eax, [rdx + 3] ; ret
0x000000000017debf : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x000000000004349d : add byte ptr [rbx + 0x48082444], cl ; add esp, 0x18 ; ret
0x00000000000b931f : add byte ptr [rbx + 0x48178916], cl ; lea eax, [rdi + 4] ; ret
0x00000000000bc102 : add byte ptr [rbx + 0x48], bl ; cmove eax, edx ; ret
0x0000000000099bd3 : add byte ptr [rbx + 0x4c], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000016d67f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000000ec812 : add byte ptr [rbx + 0x5b010447], al ; pop rbp ; pop r12 ; ret
0x000000000008b645 : add byte ptr [rbx + 0x5d], bl ; mov eax, r8d ; pop r12 ; ret
0x00000000000635d4 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000004429c : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000030080 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000832ce : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000018f9aa : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x000000000014e166 : add byte ptr [rbx + rax*4 + 0x38], ah ; add al, 0x75 ; ret
0x0000000000105fc5 : add byte ptr [rbx + rcx*4 + 0x1d], al ; ret
0x0000000000133e49 : add byte ptr [rbx + rcx*4 + 0x35], cl ; out dx, eax ; ret
0x0000000000101935 : add byte ptr [rbx + rcx*4 + 0x63], cl ; and byte ptr [rax - 0x7d], cl ; ret
0x0000000000045eef : add byte ptr [rbx + rcx*4 + 0x63], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000edf65 : add byte ptr [rbx - 0x157cfe15], al ; add dword ptr [rax + 0x63], ecx ; ret
0x00000000000878cf : add byte ptr [rbx - 0x3b7cb7ff], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000bc1de : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00000000000bc1d7 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000000bc1d0 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000000bc1c9 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000000bc1ec : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x00000000000bc1e5 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x000000000011cd7f : add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x000000000014110a : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x141118 ; ret
0x000000000013f48c : add byte ptr [rbx - 0x49f0fe0d], al ; ret
0x0000000000192d5b : add byte ptr [rbx - 0x70f0c006], al ; ret
0x00000000000f0b04 : add byte ptr [rbx - 0x72bed3a7], cl ; add dword ptr [rcx], edi ; ret
0x00000000000473cc : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000c9f57 : add byte ptr [rbx - 0x76b30383], cl ; out 0x89, al ; ret
0x000000000013c170 : add byte ptr [rbx - 0x77bffe12], al ; ja 0x13c179 ; ret
0x0000000000102e47 : add byte ptr [rbx - 0x7bf00001], al ; ret
0x00000000000bf1e3 : add byte ptr [rbx - 0x7bf0cf03], al ; ret
0x0000000000039f2b : add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x000000000012c527 : add byte ptr [rbx - 0x7cb7e7ad], cl ; ret
0x00000000001413e9 : add byte ptr [rbx - 0x7cb7efab], cl ; ret
0x00000000001412b7 : add byte ptr [rbx - 0x7cb7efbb], cl ; ret
0x00000000000e8837 : add byte ptr [rbx - 0x7cb7f7bd], cl ; ret
0x00000000000bca8f : add byte ptr [rbx - 0x7cb7fb8d], cl ; ret
0x0000000000060caf : add byte ptr [rbx - 0x7cb7fbbd], cl ; ret
0x00000000001890c3 : add byte ptr [rbx - 0x7cf0fb06], al ; ret
0x000000000006dc70 : add byte ptr [rbx - 0x9bef71d], al ; ret
0x000000000005b15c : add byte ptr [rbx - 4], dh ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000116ed3 : add byte ptr [rbx], ah ; mov rax, r8 ; mov byte ptr [rsi - 1], 0 ; ret
0x0000000000093597 : add byte ptr [rbx], ch ; push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000012fb97 : add byte ptr [rcx + 0x18e8c1f8], cl ; ret
0x000000000014d0f2 : add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x0000000000194d01 : add byte ptr [rcx + 0x21], cl ; ret
0x00000000000d6beb : add byte ptr [rcx + 0x29], al ; ret
0x000000000008973f : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x00000000001787cf : add byte ptr [rcx + 0x3518911], cl ; ret
0x00000000000bc0d7 : add byte ptr [rcx + 0x358d48d0], cl ; ret
0x000000000002c13b : add byte ptr [rcx + 0x3948fc51], cl ; ret
0x00000000000f875b : add byte ptr [rcx + 0x39], al ; ret
0x000000000005f36b : add byte ptr [rcx + 0x39], cl ; ret
0x000000000010257a : add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x0000000000119188 : add byte ptr [rcx + 0x5c], al ; pop r13 ; ret
0x000000000012cf93 : add byte ptr [rcx + 0x5c], al ; pop rbp ; ret
0x000000000011914f : add byte ptr [rcx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000cd81a : add byte ptr [rcx + 0x63], cl ; ret
0x00000000000ff2bc : add byte ptr [rcx + 0x6c0f66d0], cl ; ret
0x00000000000d6b51 : add byte ptr [rcx + 0x76bc3], al ; add byte ptr [rdi], cl ; ret
0x00000000000a3fe8 : add byte ptr [rcx + 0xf], 0x93 ; ret
0x00000000001507c8 : add byte ptr [rcx + 0xf], al ; adc dword ptr [rax + 0x20], edx ; ret
0x000000000014fea5 : add byte ptr [rcx + 0xf], al ; adc dword ptr [rax + 8], eax ; ret
0x00000000000eb75f : add byte ptr [rcx + 0xf], al ; mov dh, 0x43 ; add cl, byte ptr [rcx - 0x7d] ; ret
0x00000000000531af : add byte ptr [rcx + 1], cl ; ret
0x0000000000106f5a : add byte ptr [rcx + rbx*2 + 0x5b], dh ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000cb184 : add byte ptr [rcx + rcx*4 + 0x42], 4 ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000000000a89b7 : add byte ptr [rcx + rcx*4 + 7], al ; add rax, rdi ; ret
0x00000000000a8748 : add byte ptr [rcx + rcx*4 + 7], cl ; mov rax, r12 ; pop r12 ; ret
0x000000000009d718 : add byte ptr [rcx + rcx*4 - 0x20], al ; pop r12 ; ret
0x0000000000125786 : add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000015e334 : add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbp ; pop r12 ; ret
0x000000000011417b : add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d0060 : add byte ptr [rcx + rcx*4 - 0x20], cl ; pop r12 ; ret
0x0000000000082c43 : add byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000062656 : add byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbp ; pop r12 ; ret
0x0000000000117284 : add byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004125d : add byte ptr [rcx + rcx*4 - 0x28], cl ; ret
0x0000000000038c76 : add byte ptr [rcx + rcx*4 - 0x38], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000151baa : add byte ptr [rcx + rcx*4 - 0x40], 0x5d ; ret
0x000000000011733e : add byte ptr [rcx + rcx*4 - 0x40], al ; add rsp, 8 ; ret
0x000000000002f704 : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbp ; pop r12 ; ret
0x0000000000081a42 : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x00000000000438ee : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x0000000000088044 : add byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x0000000000117682 : add byte ptr [rcx + rcx*4 - 0x40], cl ; add rsp, 8 ; ret
0x000000000015d1c8 : add byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbp ; ret
0x0000000000099cb0 : add byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001533be : add byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x00000000000980a0 : add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x0000000000188a1f : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x0000000000051448 : add byte ptr [rcx - 0x39], cl ; ret
0x000000000002c0f0 : add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x00000000000ecafd : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 + 0x63], r9b ; ret
0x000000000013b40d : add byte ptr [rcx - 0x76b7f3a9], cl ; ret
0x0000000000023d2b : add byte ptr [rcx - 0x77], al ; ret
0x00000000000288e7 : add byte ptr [rcx - 0x77], cl ; add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x39], 1 ; ret
0x00000000000ff807 : add byte ptr [rcx - 0x77], cl ; dec dword ptr [rbp - 0x77] ; ret
0x0000000000038e17 : add byte ptr [rcx - 0x77], cl ; fisttp word ptr [rax - 0x7d] ; ret
0x000000000011cc49 : add byte ptr [rcx - 0x77], cl ; fmul dword ptr [rcx + rcx*4 - 0x40] ; pop rbx ; ret
0x000000000009811a : add byte ptr [rcx - 0x77], cl ; push rcx ; or byte ptr [rax + 0x39], cl ; ret
0x000000000007dce0 : add byte ptr [rcx - 0x77], cl ; ret
0x00000000001971e1 : add byte ptr [rcx - 0x7b], cl ; ret
0x000000000005d9df : add byte ptr [rcx - 0x7d], al ; in eax, dx ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000013e368 : add byte ptr [rcx - 0x7d], al ; ret
0x0000000000053be9 : add byte ptr [rcx - 0x7d], cl ; ret
0x000000000012c4cf : add byte ptr [rcx - 0x877b], cl ; dec dword ptr [rax - 0x7d] ; ret
0x00000000001393ad : add byte ptr [rcx - 0xa], al ; ret
0x000000000012fb07 : add byte ptr [rcx - 0xda08], cl ; inc dword ptr [rax] ; ret
0x000000000006c6b9 : add byte ptr [rcx - 9], al ; ret
0x0000000000148f16 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000003448d : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x0000000000113c87 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov word ptr [rdi + 0x16], ax ; ret
0x000000000013bd0a : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000bb92f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x0000000000046c22 : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d2911 : add byte ptr [rcx], al ; add rsp, 8 ; ret
0x00000000000a0474 : add byte ptr [rcx], al ; je 0xa0435 ; ret
0x00000000000bcd84 : add byte ptr [rcx], al ; je 0xbcd45 ; ret
0x00000000001258fa : add byte ptr [rcx], al ; mov eax, r8d ; add rsp, 8 ; ret
0x00000000001379fe : add byte ptr [rcx], al ; mov eax, r8d ; pop rbp ; ret
0x0000000000061057 : add byte ptr [rcx], al ; mov eax, r8d ; pop rbx ; ret
0x000000000015cc7c : add byte ptr [rcx], al ; mov rax, r8 ; pop rbp ; ret
0x00000000000341a8 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x00000000000475fe : add byte ptr [rcx], al ; pop rbp ; ret
0x0000000000054cd5 : add byte ptr [rcx], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000000938ab : add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000083f41 : add byte ptr [rcx], al ; ret
0x0000000000046701 : add byte ptr [rcx], al ; xor eax, eax ; pop rbx ; ret
0x00000000000c9e67 : add byte ptr [rcx], bh ; ret
0x00000000000c9ff7 : add byte ptr [rcx], ch ; ret
0x0000000000042177 : add byte ptr [rcx], dh ; leave ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x000000000008d8dd : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000097ca0 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x34 ; ret
0x000000000009ef39 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x0000000000048071 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000bb9e2 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000018bd9f : add byte ptr [rcx], dh ; ror byte ptr [rbx + 0x75163b17], 0xe4 ; ret
0x0000000000144727 : add byte ptr [rcx], dh ; sal al, 0xf ; mov cl, 0x15 ; sahf ; ret
0x000000000011195c : add byte ptr [rcx], dh ; shr al, 0x7c ; ret
0x00000000000970ea : add byte ptr [rcx], dh ; shr al, 0xbe ; ret
0x00000000000cf084 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x0000000000192be4 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x00000000000cf172 : add byte ptr [rdi + rcx + 0x4c], al ; enter -0x76bc, -0x38 ; ret
0x00000000000cf194 : add byte ptr [rdi + rcx + 0x4f], al ; enter -0x76bc, -0x38 ; ret
0x00000000000340a8 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x00000000000424c7 : add byte ptr [rdi], bh ; mov dword ptr [rdi], edx ; movd xmm0, eax ; ret
0x0000000000087cc8 : add byte ptr [rdi], cl ; adc dword ptr [rax + 0x40], eax ; pop rbx ; ret
0x0000000000141b76 : add byte ptr [rdi], cl ; adc dword ptr [rax], eax ; add rsp, 8 ; ret
0x00000000000926bd : add byte ptr [rdi], cl ; adc dword ptr [rbp + 0x38], eax ; pop rbp ; pop r12 ; ret
0x00000000000919c4 : add byte ptr [rdi], cl ; adc dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x00000000001507da : add byte ptr [rdi], cl ; adc dword ptr [rdx], ebx ; ret
0x000000000014d082 : add byte ptr [rdi], cl ; adc dword ptr [rdx], ecx ; ret
0x000000000014feca : add byte ptr [rdi], cl ; adc dword ptr [rdx], edx ; ret
0x00000000001507ba : add byte ptr [rdi], cl ; adc dword ptr [rdx], esp ; ret
0x000000000010d050 : add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], edi ; ret
0x000000000010046d : add byte ptr [rdi], cl ; adc dword ptr [rsi + 8], eax ; ret
0x000000000014832a : add byte ptr [rdi], cl ; adc dword ptr [rsi + 8], ecx ; ret
0x000000000016de7f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000122b34 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x122abd ; loopne 0x122b3d ; ret
0x0000000000034241 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x341ca ; loopne 0x3424a ; ret
0x00000000001388d5 : add byte ptr [rdi], cl ; mov cl, 0x15 ; ret
0x000000000016deef : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000018a58f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000ea56f : add byte ptr [rdi], cl ; mov dh, 0x43 ; add cl, byte ptr [rax - 0x7d] ; ret
0x0000000000038dd7 : add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000048d07 : add byte ptr [rdi], cl ; mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000e6d4f : add byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d4eb9 : add byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000bc147 : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x0000000000090de2 : add byte ptr [rdi], cl ; mov dh, 0xc3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aa39f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000184e4f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000ac65f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000ac66f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00000000000ac64f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000ac15f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00000000000ac18f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000ac17f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000ac16f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000422bb : add byte ptr [rdi], cl ; push rsp ; ret
0x00000000000d6b57 : add byte ptr [rdi], cl ; ret
0x00000000000d1dc1 : add byte ptr [rdi], cl ; sub dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000196547 : add byte ptr [rdi], cl ; test bh, ch ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000578c1 : add byte ptr [rdi], cl ; test dword ptr [rbp], edi ; add byte ptr [rax], al ; leave ; ret
0x000000000012d0d3 : add byte ptr [rdi], cl ; test ebx, edx ; add byte ptr [rax], al ; add cl, cl ; ret
0x0000000000045fe8 : add byte ptr [rdi], cl ; xchg dword ptr [rcx - 0x18000000], ebx ; pop rsp ; ret
0x000000000014f44f : add byte ptr [rdi], cl ; xchg edi, eax ; ret
0x000000000017679f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x00000000000986cc : add byte ptr [rdx - 0x7d], cl ; xor qword ptr [rax], r9 ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000003454b : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x00000000000341fa : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000000000026f76 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00000000000951fb : add byte ptr [rdx], al ; jbe 0x95200 ; ret
0x0000000000034108 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x0000000000041259 : add byte ptr [rdx], ch ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x28], cl ; ret
0x00000000001280ab : add byte ptr [rdx], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011ee89 : add byte ptr [rip - 0x1000], ah ; or eax, edx ; ret
0x0000000000152bdb : add byte ptr [rsi + 0xa], bh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001149b1 : add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ror dword ptr [rax - 0x75], 5 ; ret
0x00000000000ac57c : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000094e4c : add byte ptr [rsi + 1], dh ; ret
0x000000000009552e : add byte ptr [rsi - 0x59], dh ; add rsp, 8 ; ret
0x00000000001255ad : add byte ptr [rsi - 0x70], ah ; endbr64 ; ret
0x00000000001787ad : add byte ptr [rsi - 0x70], ah ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000000b7e8d : add byte ptr [rsi - 0x70], ah ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000b6e6d : add byte ptr [rsi - 0x70], ah ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000017877d : add byte ptr [rsi - 0x70], ah ; mov word ptr [rcx], dx ; ret
0x00000000000b7e5d : add byte ptr [rsi - 0x70], ah ; mov word ptr [rdi], dx ; ret
0x00000000000319bd : add byte ptr [rsi - 0x70], ah ; ret
0x00000000000baf2d : add byte ptr [rsi - 0x70], ah ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000cf35d : add byte ptr [rsi - 0x70], ah ; xor rax, rax ; ret
0x000000000013a2fa : add byte ptr [rsi - 0x77], ah ; rol r14, 0x45 ; ret
0x00000000000e3249 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add bl, ch ; ret
0x00000000000c6a9c : add byte ptr [rsp + rax + 0x44], dh ; mov eax, eax ; ret
0x000000000005ba5a : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000115f87 : add byte ptr ds:[rax - 0x73], cl ; push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x00000000001196f2 : add byte ptr ds:[rax - 0x77], cl ; je 0x119700 ; pop rbx ; ret
0x0000000000043c5e : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000013a213 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001849ce : add ch, al ; std ; je 0x184a32 ; and ch, al ; std ; xlatb ; ret
0x0000000000184abc : add ch, al ; std ; je 0x184b20 ; and ch, al ; std ; xlatb ; ret
0x0000000000184a62 : add ch, al ; std ; xlatb ; ret
0x0000000000087eba : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000043aea : add cl, 0xe9 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00000000000d123f : add cl, al ; stc ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000000b39fc : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x00000000000ea572 : add cl, byte ptr [r8 - 0x7d] ; ret
0x00000000000eb763 : add cl, byte ptr [r9 - 0x7d] ; ret
0x000000000002c0f4 : add cl, byte ptr [rax + 0x39] ; ret
0x000000000018bc38 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000008959d : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000009869e : add cl, byte ptr [rax - 0x73] ; push rsp ; ret
0x00000000000b39fd : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x00000000000b3969 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000085c6f : add cl, byte ptr [rax - 0x77] ; ret
0x00000000000cf8d3 : add cl, byte ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], cl ; ret
0x000000000006ab61 : add cl, byte ptr [rax - 0x7d] ; ret
0x000000000016dcc2 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000d4aab : add cl, byte ptr [rcx + rcx*4 - 0x40] ; add rsp, 8 ; ret
0x0000000000094d87 : add cl, byte ptr [rcx - 0x3fcef7b9] ; ret
0x0000000000086bfc : add cl, byte ptr [rcx - 0x77] ; ret
0x00000000000eb764 : add cl, byte ptr [rcx - 0x7d] ; ret
0x00000000000340c8 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x00000000000319b8 : add cl, ch ; mov dl, 5 ; add byte ptr [rax], al ; nop ; ret
0x000000000002e048 : add cl, ch ; ret
0x00000000000578c7 : add cl, cl ; ret
0x00000000000a8a57 : add dh, al ; add byte ptr [rax], al ; ret
0x00000000000a8627 : add dh, al ; inc dword ptr [r8] ; mov qword ptr [rdx], rcx ; ret
0x000000000013d077 : add dh, al ; ret
0x000000000016de73 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000baf6b : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000951fc : add dh, byte ptr [rsi + 1] ; ret
0x00000000000d423a : add dh, byte ptr [rsi + 3] ; ret
0x00000000000dd191 : add dh, byte ptr [rsp + rbx*2 - 0x7b] ; dec dword ptr [rdi] ; xchg esp, eax ; ret
0x00000000001120c8 : add dh, cl ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000005c02f : add dh, dh ; ret
0x00000000000d683c : add dh, dh ; rol dword ptr [rdi + rcx], 0x84 ; ret
0x00000000000ce097 : add dil, r15b ; ret
0x0000000000042a0b : add dl, byte ptr [rip - 0x3b7cb800] ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000420ff : add dl, dh ; addps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000042067 : add dl, dh ; mulps xmm0, xmm1 ; ret
0x000000000002c7b7 : add dword ptr [r8 + 0x39], r9d ; ret
0x000000000005b3c3 : add dword ptr [r8 + r8*8 - 0x7cb6f78c], eax ; ret
0x000000000010befe : add dword ptr [r8 - 0x77], ecx ; ret
0x0000000000037ff4 : add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000001899e6 : add dword ptr [r8], r8d ; vzeroupper ; ret
0x00000000000eb5a9 : add dword ptr [r9 - 0x73], ecx ; push rbx ; add dword ptr [rcx - 0x7f], ecx ; ret
0x00000000000ec46d : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x000000000017aad1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x000000000002c804 : add dword ptr [rax + 0x39480751], ecx ; ret
0x000000000002c44e : add dword ptr [rax + 0x39], ecx ; ret
0x000000000012d40e : add dword ptr [rax + 0x3b], ecx ; pop rbp ; mov eax, 0x89483e74 ; ret
0x00000000000edf6b : add dword ptr [rax + 0x63], ecx ; ret
0x0000000000064e33 : add dword ptr [rax + 1], ecx ; ret
0x00000000000ec43f : add dword ptr [rax + 1], edi ; mov byte ptr [rdi], 0x5b ; ret
0x00000000000ec3f0 : add dword ptr [rax + 1], edi ; ret
0x00000000000e81e0 : add dword ptr [rax + rax*8 - 0x3fce538b], eax ; ret
0x000000000005b3c4 : add dword ptr [rax + rax*8 - 0x7cb6f78c], eax ; ret
0x00000000000ee45c : add dword ptr [rax + rdi*4 - 0x7d], esi ; jrcxz 0xee46a ; je 0xee3f7 ; pop rbx ; ret
0x000000000008af2d : add dword ptr [rax - 0x75], ecx ; sub byte ptr [r15 + rcx - 0x4a], r8b ; ret
0x00000000000b39d6 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000094e76 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x157452 ; ret
0x0000000000176732 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000008df51 : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000a5611 : add dword ptr [rax - 0x77], ecx ; ret
0x000000000013c173 : add dword ptr [rax - 0x78], eax ; ja 0x13c179 ; ret
0x000000000017c6ea : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x00000000000258d8 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000052411 : add dword ptr [rax - 0x7f], ecx ; ret
0x0000000000038858 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000121fcc : add dword ptr [rax], 1 ; ret
0x000000000013bd0b : add dword ptr [rax], eax ; add bl, al ; ret
0x000000000013bd02 : add dword ptr [rax], eax ; add bl, al ; xor eax, eax ; ret
0x000000000013b495 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000d6edd : add dword ptr [rax], eax ; add byte ptr [rax - 0x41], cl ; ret
0x000000000015fe01 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000001435da : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000bbbf2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000026206 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000dcfbf : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000043dde : add dword ptr [rax], eax ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x0000000000192be1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x192bf0 ; neg eax ; ret
0x00000000000cf081 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0xcf089 ; neg eax ; ret
0x000000000018f9a7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x18f9b0 ; neg eax ; ret
0x00000000000ec441 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov byte ptr [rdi], 0x5b ; ret
0x000000000014d104 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000009d715 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, r12d ; pop r12 ; ret
0x000000000008cd42 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, r8d ; ret
0x0000000000057b56 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000148306 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000001507c5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [r8 + 0x20], xmm2 ; ret
0x000000000014fea2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [r8 + 8], xmm0 ; ret
0x000000000014d07f : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm1 ; ret
0x000000000014fec7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm2 ; ret
0x00000000001507d7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm3 ; ret
0x00000000001507b7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm4 ; ret
0x0000000000060f0a : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000087595 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000009eb14 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000832cb : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000010c571 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000005562f : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000e5215 : add dword ptr [rax], eax ; add byte ptr [rax], al ; test edi, edi ; js 0xe5220 ; ret
0x0000000000062356 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000028237 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; ret
0x000000000013dc83 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000114ec6 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000101933 : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x63], cl ; and byte ptr [rax - 0x7d], cl ; ret
0x000000000002c139 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x3948fc51], cl ; ret
0x0000000000160962 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x20], al ; pop r12 ; ret
0x00000000000438ec : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000015d1c6 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbp ; ret
0x00000000000e8a73 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000194b90 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000006ea60 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000a45c7 : add dword ptr [rax], eax ; add byte ptr [rcx - 9], al ; ret
0x0000000000184a60 : add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret
0x00000000000d123d : add dword ptr [rax], eax ; add cl, al ; stc ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000009f665 : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000009f0f2 : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x0000000000054336 : add dword ptr [rax], eax ; jne 0x54330 ; pop rbx ; ret
0x0000000000048114 : add dword ptr [rax], eax ; ret
0x00000000001899e7 : add dword ptr [rax], eax ; vzeroupper ; ret
0x0000000000028236 : add dword ptr [rax], r8d ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; ret
0x000000000009f701 : add dword ptr [rax], r8d ; cmovne rax, rdx ; ret
0x000000000012796e : add dword ptr [rbp + 0x38], ebx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000129567 : add dword ptr [rbp + 0x440f45c9], eax ; ror dword ptr [rax - 0x7d], 1 ; ret
0x00000000000d6c9f : add dword ptr [rbp + rcx*4 + 0x14], eax ; ret
0x00000000000a13f3 : add dword ptr [rbp - 0x16], esi ; ret
0x000000000005562b : add dword ptr [rbp - 0x1e], esi ; mov eax, 1 ; ret
0x0000000000115f8c : add dword ptr [rbp - 0x2f], esi ; ret
0x0000000000098d12 : add dword ptr [rbp - 0x3d], ebx ; nop dword ptr [rax] ; ret
0x00000000001461c3 : add dword ptr [rbp - 0x7e], esi ; ret
0x000000000016dd32 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000001579a0 : add dword ptr [rbx + 0x28], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000046ada : add dword ptr [rbx + 0x44], ebx ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000de23e : add dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000000edf68 : add dword ptr [rbx + 0x634801ea], eax ; ret
0x000000000011a565 : add dword ptr [rbx + 0x94901e0], eax ; ret
0x0000000000117d53 : add dword ptr [rbx + 0xd], edi ; add byte ptr [rax - 0x77], cl ; ret
0x000000000006a71c : add dword ptr [rbx - 0x64f7b], ecx ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000a0b76 : add dword ptr [rcx + 0x39], ecx ; ret
0x000000000010cfde : add dword ptr [rcx + 0xf], ecx ; ret
0x000000000011a568 : add dword ptr [rcx + 9], ecx ; ret
0x00000000000df4d6 : add dword ptr [rcx + rax*2 - 0x77], esp ; sbb dword ptr [rcx + rcx*4 - 0x40], ecx ; pop rbx ; ret
0x000000000015e114 : add dword ptr [rcx + rcx*4 - 0x20], eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001258fb : add dword ptr [rcx + rcx*4 - 0x40], eax ; add rsp, 8 ; ret
0x00000000001379ff : add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbp ; ret
0x0000000000085682 : add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000061058 : add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; ret
0x0000000000122c42 : add dword ptr [rcx + rcx*4 - 0x40], eax ; ret
0x000000000013c5d8 : add dword ptr [rcx + rcx*4 - 0x40], ecx ; mov byte ptr [r8 + 2], 0 ; ret
0x000000000015cc7d : add dword ptr [rcx + rcx*4 - 0x40], ecx ; pop rbp ; ret
0x000000000012dceb : add dword ptr [rcx + rcx*8 - 0x76b7578b], eax ; clc ; ret
0x00000000000a88cb : add dword ptr [rcx + rcx*8 - 0xec6f78c], eax ; jne 0xa88c0 ; ret
0x00000000000479c8 : add dword ptr [rcx - 0x42], edi ; xor eax, eax ; ret
0x00000000000eb5aa : add dword ptr [rcx - 0x73], ecx ; push rbx ; add dword ptr [rcx - 0x7f], ecx ; ret
0x00000000000b3a16 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000007457d : add dword ptr [rcx - 0x77], ecx ; push rdi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000570b0 : add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x0000000000053210 : add dword ptr [rcx - 0x78], eax ; add ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000002a03b : add dword ptr [rcx - 0x7d], ecx ; ret
0x00000000000eb5ae : add dword ptr [rcx - 0x7f], ecx ; ret
0x00000000001930b3 : add dword ptr [rcx - 9], eax ; ret
0x00000000000cf54b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x000000000013bd01 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; ret
0x000000000007b325 : add dword ptr [rcx], eax ; ret
0x00000000000f0b0b : add dword ptr [rcx], edi ; ret
0x00000000000bc046 : add dword ptr [rdi + 0x15], esi ; jb 0xbc04d ; mov byte ptr [rdi], cl ; ret
0x0000000000157904 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x0000000000157914 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x0000000000117c12 : add dword ptr [rdi + 1], edi ; ret
0x00000000000ec813 : add dword ptr [rdi + 4], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a2224 : add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000043f34 : add dword ptr [rdi], ecx ; adc dword ptr [rdi], eax ; ret
0x00000000000341a9 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x00000000000a8813 : add dword ptr [rdi], ecx ; mov esi, 0xf2390714 ; je 0xa8810 ; ret
0x0000000000117cb1 : add dword ptr [rdi], ecx ; test byte ptr [rcx], bl ; add al, byte ptr [rax] ; add bh, dh ; ret
0x00000000001785ae : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000bc73f : add dword ptr [rdx + 0x2b], 0xe2748104 ; ret
0x00000000000b39d4 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x0000000000102a83 : add dword ptr [rdx + 2], edi ; cmove eax, edx ; ret
0x0000000000190230 : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000063030 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x000000000018fb61 : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000121d06 : add dword ptr [rdx + rax*2], 1 ; ret
0x000000000013c242 : add dword ptr [rdx], eax ; pop rbx ; ret
0x000000000013c241 : add dword ptr [rdx], r8d ; pop rbx ; ret
0x00000000000938a6 : add dword ptr [rip + 0x15af17], 1 ; pop rbx ; ret
0x00000000000b3965 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00000000000b39e7 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000009f0f1 : add dword ptr cs:[rax], eax ; cmovne rax, rdx ; ret
0x000000000009f6a4 : add dword ptr es:[rax], eax ; cmove rax, rdx ; ret
0x000000000013b3ea : add eax, 0x10 ; ret
0x00000000000bcd12 : add eax, 0x11389 ; cmove rax, rdx ; ret
0x00000000000bc852 : add eax, 0x11b79 ; cmove rax, rdx ; ret
0x00000000000d0132 : add eax, 0x11ef69 ; add rsp, 8 ; ret
0x000000000009f812 : add eax, 0x120a9 ; cmove rax, rdx ; ret
0x000000000009f662 : add eax, 0x12559 ; cmove rax, rdx ; ret
0x00000000000bca02 : add eax, 0x12699 ; cmove rax, rdx ; ret
0x000000000009f6a2 : add eax, 0x126b9 ; cmove rax, rdx ; ret
0x00000000000bcaf2 : add eax, 0x12879 ; cmove rax, rdx ; ret
0x00000000000bc878 : add eax, 0x12933 ; cmovne rax, rdx ; ret
0x00000000000bc812 : add eax, 0x129c9 ; cmove rax, rdx ; ret
0x00000000000bc962 : add eax, 0x12f89 ; cmove rax, rdx ; ret
0x000000000009f8a5 : add eax, 0x14f69e ; add rsp, 8 ; ret
0x000000000009f867 : add eax, 0x14f6dc ; ret
0x000000000009a0ca : add eax, 0x151e11 ; mov qword ptr [rax], rdi ; ret
0x000000000009a05f : add eax, 0x154e10 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000961d0 : add eax, 0x155d0b ; mov qword ptr [rax], rdx ; ret
0x0000000000095233 : add eax, 0x157074 ; ret
0x000000000009520d : add eax, 0x15707e ; ret
0x00000000000951e4 : add eax, 0x15709f ; ret
0x00000000000951c4 : add eax, 0x1570b7 ; ret
0x0000000000094eaa : add eax, 0x157439 ; ret
0x0000000000094e93 : add eax, 0x157448 ; ret
0x0000000000094e3a : add eax, 0x157459 ; ret
0x0000000000094e2a : add eax, 0x157471 ; ret
0x0000000000095277 : add eax, 0x159c24 ; ret
0x0000000000095249 : add eax, 0x159c3e ; ret
0x0000000000093836 : add eax, 0x159d65 ; ret
0x0000000000093941 : add eax, 0x15ae7e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000094728 : add eax, 0x15cd5f ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000d424e : add eax, 0x16d ; ret
0x000000000004263f : add eax, 0x17a11c ; por xmm0, xmm1 ; ret
0x00000000000420f0 : add eax, 0x17abfb ; ret
0x0000000000042455 : add eax, 0x17af36 ; ret
0x000000000004240a : add eax, 0x17af79 ; ret
0x00000000000423e5 : add eax, 0x17afa2 ; ret
0x00000000000328c2 : add eax, 0x181ab6 ; ret
0x0000000000042b96 : add eax, 0x18c48348 ; ret
0x00000000000241a6 : add eax, 0x18fcf3 ; ret
0x00000000000241b6 : add eax, 0x191abc ; ret
0x00000000000529fa : add eax, 0x19bc61 ; mov byte ptr [rax + rdx], 0 ; ret
0x00000000000440f4 : add eax, 0x1a80af ; mov eax, edx ; ret
0x00000000000440a5 : add eax, 0x1a80fe ; ret
0x0000000000044095 : add eax, 0x1a8112 ; ret
0x0000000000047f86 : add eax, 0x1a937b ; add rsp, 8 ; ret
0x00000000000a030b : add eax, 0x1b0e0 ; cmove rax, rdx ; ret
0x0000000000033d12 : add eax, 0x1b80d1 ; mov qword ptr [rax], rdx ; ret
0x00000000000a05ab : add eax, 0x1b950 ; cmovne rax, rdx ; ret
0x000000000002f5a6 : add eax, 0x1be3bd ; ret
0x000000000009faf8 : add eax, 0x1bef3 ; cmovne rax, rdx ; ret
0x000000000009f838 : add eax, 0x1c103 ; cmovne rax, rdx ; ret
0x000000000009f248 : add eax, 0x1c643 ; cmovne rax, rdx ; ret
0x0000000000026f59 : add eax, 0x1c69f6 ; test eax, eax ; je 0x26f68 ; ret
0x0000000000025ab6 : add eax, 0x1cb6ed ; ret
0x0000000000025aa6 : add eax, 0x1cb70d ; ret
0x0000000000023a51 : add eax, 0x1cd8d2 ; ret
0x000000000018473a : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x000000000003454a : add eax, 0x200 ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000197277 : add eax, 0x27418 ; ret
0x0000000000047444 : add eax, 0x28c48348 ; ret
0x0000000000178634 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000a8be2 : add eax, 0x3819 ; cmove rax, rdx ; ret
0x000000000013666d : add eax, 0x38c48348 ; ret
0x000000000002a5a9 : add eax, 0x39480000 ; ret
0x0000000000162145 : add eax, 0x3d54e800 ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x000000000015d232 : add eax, 0x3f98366 ; jbe 0x15d240 ; ret
0x000000000018475a : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x000000000012cf90 : add eax, 0x41000000 ; pop rsp ; pop rbp ; ret
0x000000000012d957 : add eax, 0x480005dd ; cmove eax, edx ; ret
0x000000000017ab68 : add eax, 0x48054289 ; lea eax, [rdx + 8] ; ret
0x0000000000176818 : add eax, 0x48054289 ; mov eax, edi ; ret
0x00000000000b6f26 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000155c97 : add eax, 0x48c48348 ; ret
0x000000000017abe9 : add eax, 0x5428948 ; lea rax, [rdx + 0xc] ; ret
0x0000000000176859 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x0000000000198899 : add eax, 0x553de ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000198bce : add eax, 0x56559 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000198d07 : add eax, 0x57160 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000198aa4 : add eax, 0x5b050f00 ; ret
0x0000000000134870 : add eax, 0x5bf08948 ; ret
0x0000000000106fb8 : add eax, 0x5d000000 ; pop r12 ; ret
0x0000000000198dd4 : add eax, 0x5d050f00 ; ret
0x0000000000153f41 : add eax, 0x5d5b0000 ; pop r12 ; pop r13 ; ret
0x000000000012dae0 : add eax, 0x5e06b ; cmove rax, rdx ; ret
0x0000000000184b93 : add eax, 0x60 ; add rax, rdi ; ret
0x000000000018477a : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x00000000000c9fd6 : add eax, 0x74db8500 ; sbb al, 0x39 ; ret
0x00000000000c9ee1 : add eax, 0x74db8500 ; sbb dword ptr [rcx], edi ; ret
0x00000000001539e6 : add eax, 0x78c48348 ; ret
0x00000000000f2ade : add eax, 0x7b8b4828 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000b774e : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x000000000006f620 : add eax, 0x83480000 ; ret
0x000000000017ab6b : add eax, 0x8428d48 ; ret
0x00000000000d44e5 : add eax, 0x89480000 ; ret
0x00000000000c9476 : add eax, 0x89490000 ; ret
0x000000000015c5b4 : add eax, 0x894c0000 ; loopne 0x15c5fc ; pop rsp ; ret
0x00000000001984e2 : add eax, 0x8b486400 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e2eca : add eax, 0x8c48348 ; ret
0x00000000000319bb : add eax, 0x90660000 ; ret
0x0000000000120dc4 : add eax, 0x918b7 ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000b8e32 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x0000000000153271 : add eax, 0x9dba6 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000a1c82 : add eax, 0xa569 ; cmove rax, rdx ; ret
0x0000000000146faa : add eax, 0xa9bcd ; add rsp, 8 ; ret
0x0000000000146f95 : add eax, 0xa9be2 ; test eax, eax ; je 0x146fa0 ; ret
0x00000000001463b4 : add eax, 0xaa747 ; ret
0x0000000000146388 : add eax, 0xaa773 ; add rsp, 8 ; ret
0x00000000001411f6 : add eax, 0xaadf5 ; mov rax, qword ptr fs:[rax] ; ret
0x0000000000140cb9 : add eax, 0xafb06 ; test eax, eax ; je 0x140cc8 ; ret
0x0000000000138524 : add eax, 0xb53b7 ; add rsp, 8 ; ret
0x00000000000a0402 : add eax, 0xbab9 ; cmove rax, rdx ; ret
0x0000000000120a2c : add eax, 0xbd000800 ; add eax, 0xeb000000 ; ret
0x000000000018e5aa : add eax, 0xc0310000 ; ret
0x000000000012d01d : add eax, 0xc2e56 ; pop rbp ; ret
0x000000000017abed : add eax, 0xc428d48 ; ret
0x00000000000b85ad : add eax, 0xc478d48 ; ret
0x00000000001228b6 : add eax, 0xc95a5 ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000121ca1 : add eax, 0xca6b6 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000121c78 : add eax, 0xca6df ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000121c47 : add eax, 0xca710 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000121c21 : add eax, 0xca736 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000b940d : add eax, 0xd478d48 ; ret
0x00000000001191d4 : add eax, 0xd66e7 ; add rsp, 0x18 ; ret
0x0000000000119184 : add eax, 0xd6777 ; pop r12 ; pop r13 ; ret
0x0000000000118c8c : add eax, 0xd6bdf ; add rsp, 8 ; ret
0x00000000001176ef : add eax, 0xd809c ; add rsp, 8 ; ret
0x000000000011764e : add eax, 0xd813d ; mov rax, r8 ; ret
0x0000000000115b9d : add eax, 0xd9ad6 ; add rsp, 8 ; ret
0x00000000001989e8 : add eax, 0xdb854800 ; jne 0x1989d0 ; pop rbx ; ret
0x0000000000120a31 : add eax, 0xeb000000 ; ret
0x00000000000a0590 : add eax, 0xeb5cb ; cmove rax, rdx ; ret
0x000000000016dd23 : add eax, 0xf7f0ff3 ; ret
0x00000000000a1cc2 : add eax, 0xf9e9 ; cmove rax, rdx ; ret
0x0000000000052acb : add eax, 0xfd8ee800 ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000012dafb : add eax, 0xfff8e3f0 ; cmovne rax, rdx ; ret
0x00000000000d0fea : add eax, 0xfffffee1 ; ret
0x00000000000d0fda : add eax, 0xfffffef1 ; add rsp, 0x58 ; ret
0x00000000000d0eca : add eax, 0xfffffef1 ; ret
0x00000000000d0eba : add eax, 0xffffff01 ; add rsp, 0x58 ; ret
0x000000000010d258 : add eax, 0xffffff43 ; cmove rax, rdx ; ret
0x0000000000121f71 : add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x0000000000121fb2 : add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00000000000a06bf : add eax, 1 ; ret
0x00000000000cfae8 : add eax, 2 ; ret
0x00000000000cfb01 : add eax, 3 ; ret
0x00000000000bcc33 : add eax, 4 ; test edx, edx ; jne 0xbcc28 ; xor eax, eax ; ret
0x000000000002440d : add eax, dword ptr [0] ; ret
0x000000000006680d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x7d] ; ret
0x000000000012187a : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000dcff8 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00000000000cfb43 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000051ec4 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000002c0ee : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000023d29 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000ff805 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; dec dword ptr [rbp - 0x77] ; ret
0x000000000012d8ba : add eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000000bc119 : add eax, dword ptr [rax] ; ret
0x0000000000088041 : add eax, dword ptr [rbx + rcx*4] ; mov eax, r8d ; ret
0x00000000001785f9 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x000000000005503f : add eax, dword ptr [rcx + 0x52] ; ret
0x0000000000123369 : add eax, dword ptr [rcx + rdx] ; ret
0x0000000000123111 : add eax, dword ptr [rdx + rcx] ; ret
0x00000000001786f9 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x000000000005ea38 : add eax, eax ; mov eax, r8d ; ret
0x00000000000ee328 : add eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000184c61 : add eax, eax ; vzeroupper ; ret
0x000000000013febe : add eax, ebp ; lodsb al, byte ptr [rsi] ; hlt ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x000000000012db6b : add eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f839 : add eax, ecx ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x0000000000188388 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x000000000013c9b3 : add eax, ecx ; cmovs eax, edx ; ret
0x00000000000abf49 : add eax, ecx ; ret
0x00000000001838c6 : add eax, ecx ; sub rax, rdi ; ret
0x000000000018872d : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x00000000001461be : add eax, ecx ; sub rdx, 1 ; jne 0x146148 ; ret
0x00000000001845b6 : add eax, ecx ; vzeroupper ; ret
0x0000000000184c5e : add eax, edi ; add rax, r8 ; vzeroupper ; ret
0x00000000000abf46 : add eax, edi ; add rax, rcx ; ret
0x00000000001845b3 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x00000000000ac77a : add eax, edi ; add rax, rsi ; ret
0x00000000000a220f : add eax, edi ; dec dword ptr [rax + 0x29] ; ret
0x00000000000a8979 : add eax, edi ; ret
0x00000000001887e5 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x000000000018472a : add eax, edi ; vzeroupper ; ret
0x00000000000b1d56 : add eax, edx ; sub rax, rdi ; ret
0x00000000000cf84b : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x00000000000ac77d : add eax, esi ; ret
0x00000000000da9f0 : add ebp, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015fe06 : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000009e9b6 : add ebx, dword ptr [rbx + 0x44] ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000009d10e : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000095181 : add ebx, dword ptr [rbx + 0x5d] ; ret
0x0000000000041240 : add ebx, dword ptr [rdi + 0x20] ; mov rax, r11 ; ret
0x0000000000121fdd : add ebx, eax ; nop ; ret
0x0000000000055bf1 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000184e1b : add ebx, eax ; nop dword ptr [rax] ; ret
0x000000000016dee3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000000bc02b : add ecx, 0x40 ; cmp rdx, rcx ; jne 0xbc017 ; repz ret
0x00000000000b3a6a : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000095a5c : add ecx, dword ptr [rax + 0x29] ; ret
0x0000000000198b12 : add ecx, dword ptr [rax - 0x73] ; insb byte ptr [rdi], dx ; ret
0x0000000000136d0e : add ecx, dword ptr [rax - 0x75] ; push rdi ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000b3a6e : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x00000000000e8645 : add ecx, dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret
0x00000000000288ea : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x39], 1 ; ret
0x0000000000064303 : add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a70c1 : add ecx, dword ptr [rbp + 0x39] ; ret
0x00000000000469a7 : add ecx, dword ptr [rbp + rcx*4 + 0x64] ; ret
0x000000000016dc52 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000b6ec4 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000000b3a6b : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x00000000001532f7 : add ecx, dword ptr [rcx - 0x77] ; ror byte ptr [rcx + rcx*4 - 0x40], 0x5b ; ret
0x0000000000053213 : add ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000000db9e7 : add ecx, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f1d42 : add ecx, dword ptr [rdi] ; test byte ptr [rdi], bl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000b7710 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00000000000c974e : add ecx, dword ptr [rdi] ; xchg bh, cl ; add eax, 0x89490000 ; ret
0x00000000000c9472 : add ecx, dword ptr [rdi] ; xchg dl, bh ; add eax, 0x89490000 ; ret
0x000000000002a5a5 : add ecx, dword ptr [rdi] ; xchg dword ptr [rax + 0x39480000], esp ; ret
0x00000000000db682 : add ecx, dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000119644 : add ecx, ebx ; ret
0x00000000000e81de : add edi, 1 ; test al, al ; jne 0xe8191 ; xor eax, eax ; ret
0x0000000000117999 : add edi, dword ptr [rsi - 1] ; inc dword ptr [rbp - 0x7cc08b40] ; ret
0x00000000000482f2 : add edi, eax ; cmp rdi, r8 ; jb 0x482d5 ; xor eax, eax ; ret
0x000000000011f891 : add edi, ebp ; xor eax, eax ; ret
0x000000000013c508 : add edi, edx ; mov qword ptr [r9], rdi ; ret
0x0000000000093552 : add edx, 0x60 ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000013c45e : add edx, 2 ; mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x00000000000ac688 : add edx, eax ; jl 0xac6f0 ; add rax, rdi ; ret
0x00000000000ac698 : add edx, eax ; jl 0xac6f0 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000ac6b8 : add edx, eax ; jl 0xac6f0 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000ac6d8 : add edx, eax ; jl 0xac6f0 ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000056af2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00000000000bafc9 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x000000000015d21c : add esi, dword ptr [rdi + 0x11] ; cmp dx, cx ; sete al ; ret
0x000000000014874f : add esi, dword ptr [rsi + 0xe] ; mov eax, 2 ; ret
0x000000000015d236 : add esi, dword ptr [rsi + 7] ; ret
0x000000000015751a : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; mov rax, r8 ; ret
0x000000000016de03 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000bbb5e : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000015f247 : add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000989d3 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbp ; ret
0x0000000000043aed : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x000000000018f9ac : add esi, edi ; fadd st(3) ; ret
0x00000000000bc21a : add esi, edi ; int1 ; mov eax, eax ; ret
0x00000000000ee3e4 : add esi, esi ; ret
0x000000000009d4e3 : add esp, 0x10 ; mov eax, r12d ; pop r12 ; ret
0x0000000000152386 : add esp, 0x10 ; mov eax, r8d ; pop r12 ; ret
0x000000000015cbd3 : add esp, 0x10 ; mov eax, r8d ; pop rbp ; ret
0x00000000000995a0 : add esp, 0x10 ; mov rax, r8 ; pop rbp ; ret
0x00000000000993a9 : add esp, 0x10 ; mov rax, r8 ; pop rbx ; ret
0x000000000008dfda : add esp, 0x10 ; movzx eax, al ; pop rbx ; neg eax ; ret
0x00000000001449c0 : add esp, 0x10 ; pop r12 ; ret
0x000000000002ff08 : add esp, 0x10 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000960c1 : add esp, 0x10 ; pop rbp ; ret
0x0000000000062566 : add esp, 0x10 ; pop rbx ; pop r12 ; pop r13 ; ret
0x0000000000081125 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000042895 : add esp, 0x10 ; pop rbx ; ret
0x00000000000bb92d : add esp, 0x100 ; sub rax, rdx ; ret
0x0000000000062846 : add esp, 0x1010 ; pop rbp ; ret
0x0000000000043022 : add esp, 0x118 ; ret
0x000000000010f308 : add esp, 0x130 ; pop rbp ; ret
0x0000000000042ef2 : add esp, 0x148 ; ret
0x00000000001470f6 : add esp, 0x18 ; mov eax, r12d ; pop rbx ; pop r12 ; ret
0x0000000000046e6c : add esp, 0x18 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x000000000009cf7b : add esp, 0x18 ; mov rax, r8 ; pop rbx ; pop r12 ; ret
0x0000000000062e2a : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x00000000000476c2 : add esp, 0x18 ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x000000000007a3f8 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000429f6 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000349eb : add esp, 0x18 ; ret
0x00000000000947f8 : add esp, 0x20 ; and eax, 0xc ; pop rbx ; ret
0x0000000000137f47 : add esp, 0x20 ; mov eax, r8d ; pop rbp ; ret
0x00000000000dfdff : add esp, 0x20 ; mov eax, r8d ; pop rbx ; ret
0x0000000000042ab1 : add esp, 0x20 ; movdqa xmm0, xmm2 ; pop rbp ; ret
0x0000000000042b42 : add esp, 0x20 ; pop rbp ; ret
0x000000000002f82d : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ca0b6 : add esp, 0x20 ; pop rbx ; ret
0x00000000000d42e9 : add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000152c89 : add esp, 0x28 ; mov eax, r12d ; pop rbp ; pop r12 ; ret
0x0000000000081878 : add esp, 0x28 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x000000000008ab9e : add esp, 0x28 ; mov rax, r12 ; pop rbp ; pop r12 ; ret
0x000000000006272b : add esp, 0x28 ; mov rax, r12 ; pop rbx ; pop r12 ; ret
0x00000000001524c5 : add esp, 0x28 ; pop rbx ; pop r12 ; ret
0x00000000000426d3 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005b05d : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000047446 : add esp, 0x28 ; ret
0x0000000000197078 : add esp, 0x30 ; mov rax, r12 ; pop r12 ; ret
0x000000000011305d : add esp, 0x30 ; pop rbp ; ret
0x0000000000091259 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000196c5f : add esp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x000000000010e60e : add esp, 0x30 ; pop rbx ; ret
0x0000000000025b96 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002448c : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000005b878 : add esp, 0x38 ; ret
0x0000000000112a58 : add esp, 0x40 ; pop r12 ; ret
0x0000000000099202 : add esp, 0x40 ; pop rbp ; ret
0x0000000000043999 : add esp, 0x40 ; pop rbx ; ret
0x000000000012297c : add esp, 0x40 ; ret
0x000000000011bfce : add esp, 0x418 ; ret
0x000000000005b5b6 : add esp, 0x450 ; pop rbp ; ret
0x0000000000083e3f : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000151f94 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000008dbdb : add esp, 0x48 ; ret
0x000000000014e89f : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005520d : add esp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013de86 : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000d0ea4 : add esp, 0x58 ; ret
0x000000000011390f : add esp, 0x60 ; mov eax, r11d ; pop rbx ; ret
0x0000000000113e88 : add esp, 0x60 ; mov rax, r12 ; pop r12 ; ret
0x0000000000115098 : add esp, 0x60 ; pop rbp ; ret
0x000000000010dd5c : add esp, 0x68 ; pop rbp ; pop r12 ; ret
0x00000000000bcf7e : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001010ed : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000010e4cd : add esp, 0x68 ; ret
0x00000000000bd0d3 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010ded7 : add esp, 0x78 ; ret
0x000000000011cb1d : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000157b1c : add esp, 0x90 ; pop rbx ; ret
0x00000000000436c4 : add esp, 0x98 ; pop rbp ; pop r12 ; ret
0x0000000000024243 : add esp, 0x98 ; ret
0x0000000000120e80 : add esp, 0xa0 ; pop rbx ; ret
0x00000000000de746 : add esp, 0xa8 ; pop rbp ; pop r12 ; ret
0x0000000000044425 : add esp, 0xa8 ; ret
0x00000000000e49bb : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x0000000000052c08 : add esp, 0xd8 ; ret
0x00000000000ddc58 : add esp, 0xe0 ; pop rbx ; ret
0x00000000000ee325 : add esp, 8 ; add eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013c3f1 : add esp, 8 ; lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x0000000000089dfb : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000014ddea : add esp, 8 ; mov eax, r12d ; pop rbp ; pop r12 ; ret
0x000000000005b931 : add esp, 8 ; mov eax, r12d ; pop rbx ; pop r12 ; ret
0x0000000000082404 : add esp, 8 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x000000000011737f : add esp, 8 ; mov eax, r8d ; ret
0x0000000000102819 : add esp, 8 ; mov eax, r9d ; ret
0x000000000004779f : add esp, 8 ; mov rax, r12 ; pop rbp ; pop r12 ; ret
0x00000000000a0a41 : add esp, 8 ; mov rax, r12 ; pop rbx ; pop r12 ; ret
0x00000000000831b2 : add esp, 8 ; mov rax, r8 ; pop rbx ; pop rbp ; ret
0x000000000014de23 : add esp, 8 ; movzx eax, al ; add eax, 1 ; ret
0x00000000000246d9 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000148c10 : add esp, 8 ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x000000000014a0d7 : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000522b6 : add esp, 8 ; movzx eax, al ; ret
0x000000000014120e : add esp, 8 ; movzx eax, ax ; ret
0x0000000000157d06 : add esp, 8 ; not eax ; shr eax, 0x1f ; ret
0x000000000008541a : add esp, 8 ; pop rbp ; pop r12 ; ret
0x000000000008b4e7 : add esp, 8 ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x0000000000055688 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000024e09 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000026f79 : add esp, 8 ; ret
0x0000000000162da5 : add esp, 8 ; sar eax, 0x1f ; ret
0x000000000012b99c : add esp, 8 ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000935e3 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000048d0a : add qword ptr [r8 - 0x7d], rcx ; ret
0x00000000000a45c6 : add qword ptr [rax], r8 ; add byte ptr [rcx - 9], al ; ret
0x000000000012dcea : add qword ptr [rcx + rcx*8 - 0x76b7578b], rax ; clc ; ret
0x00000000001785ad : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x000000000004123f : add r11, qword ptr [rdi + 0x20] ; mov rax, r11 ; ret
0x000000000016dee2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000016de72 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000016de02 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000000a7ac1 : add r8b, byte ptr [r8] ; add bh, dh ; ret
0x0000000000189177 : add r8b, byte ptr [r8] ; vzeroupper ; ret
0x000000000005ea37 : add r8d, eax ; mov eax, r8d ; ret
0x000000000002c0f3 : add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000178633 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000cfaf0 : add rax, 1 ; ret
0x00000000000cfae7 : add rax, 2 ; ret
0x00000000000cfb00 : add rax, 3 ; ret
0x000000000002440c : add rax, qword ptr [0] ; ret
0x000000000002440b : add rax, qword ptr fs:[0] ; ret
0x0000000000184c60 : add rax, r8 ; vzeroupper ; ret
0x000000000012db6a : add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000188387 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x00000000000abf48 : add rax, rcx ; ret
0x00000000001838c5 : add rax, rcx ; sub rax, rdi ; ret
0x000000000018872c : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x00000000001845b5 : add rax, rcx ; vzeroupper ; ret
0x0000000000184c5d : add rax, rdi ; add rax, r8 ; vzeroupper ; ret
0x00000000000abf45 : add rax, rdi ; add rax, rcx ; ret
0x00000000001845b2 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x00000000000ac779 : add rax, rdi ; add rax, rsi ; ret
0x00000000000a8978 : add rax, rdi ; ret
0x00000000001887e4 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000184729 : add rax, rdi ; vzeroupper ; ret
0x00000000000b1d55 : add rax, rdx ; sub rax, rdi ; ret
0x00000000000ac77c : add rax, rsi ; ret
0x000000000013c507 : add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x0000000000056af1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000000ac687 : add rdx, rax ; jl 0xac6f0 ; add rax, rdi ; ret
0x000000000009d4e2 : add rsp, 0x10 ; mov eax, r12d ; pop r12 ; ret
0x0000000000152385 : add rsp, 0x10 ; mov eax, r8d ; pop r12 ; ret
0x000000000015cbd2 : add rsp, 0x10 ; mov eax, r8d ; pop rbp ; ret
0x000000000009959f : add rsp, 0x10 ; mov rax, r8 ; pop rbp ; ret
0x00000000000993a8 : add rsp, 0x10 ; mov rax, r8 ; pop rbx ; ret
0x00000000001449bf : add rsp, 0x10 ; pop r12 ; ret
0x000000000002ff07 : add rsp, 0x10 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000960c0 : add rsp, 0x10 ; pop rbp ; ret
0x0000000000062565 : add rsp, 0x10 ; pop rbx ; pop r12 ; pop r13 ; ret
0x0000000000081124 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000042894 : add rsp, 0x10 ; pop rbx ; ret
0x0000000000062845 : add rsp, 0x1010 ; pop rbp ; ret
0x0000000000043021 : add rsp, 0x118 ; ret
0x000000000010f307 : add rsp, 0x130 ; pop rbp ; ret
0x0000000000042ef1 : add rsp, 0x148 ; ret
0x0000000000046e6b : add rsp, 0x18 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x0000000000062e29 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x00000000000429f5 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000349ea : add rsp, 0x18 ; ret
0x00000000000947f7 : add rsp, 0x20 ; and eax, 0xc ; pop rbx ; ret
0x0000000000137f46 : add rsp, 0x20 ; mov eax, r8d ; pop rbp ; ret
0x00000000000dfdfe : add rsp, 0x20 ; mov eax, r8d ; pop rbx ; ret
0x0000000000042ab0 : add rsp, 0x20 ; movdqa xmm0, xmm2 ; pop rbp ; ret
0x0000000000042b41 : add rsp, 0x20 ; pop rbp ; ret
0x000000000002f82c : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ca0b5 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000d42e8 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000081877 : add rsp, 0x28 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x00000000001524c4 : add rsp, 0x28 ; pop rbx ; pop r12 ; ret
0x000000000005b05c : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000047445 : add rsp, 0x28 ; ret
0x0000000000197077 : add rsp, 0x30 ; mov rax, r12 ; pop r12 ; ret
0x000000000011305c : add rsp, 0x30 ; pop rbp ; ret
0x0000000000091258 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000196c5e : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x000000000010e60d : add rsp, 0x30 ; pop rbx ; ret
0x000000000002448b : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000005b877 : add rsp, 0x38 ; ret
0x0000000000112a57 : add rsp, 0x40 ; pop r12 ; ret
0x0000000000099201 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000043998 : add rsp, 0x40 ; pop rbx ; ret
0x000000000012297b : add rsp, 0x40 ; ret
0x000000000011bfcd : add rsp, 0x418 ; ret
0x000000000005b5b5 : add rsp, 0x450 ; pop rbp ; ret
0x0000000000151f93 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000008dbda : add rsp, 0x48 ; ret
0x000000000014e89e : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013de85 : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000d0ea3 : add rsp, 0x58 ; ret
0x000000000011390e : add rsp, 0x60 ; mov eax, r11d ; pop rbx ; ret
0x0000000000113e87 : add rsp, 0x60 ; mov rax, r12 ; pop r12 ; ret
0x0000000000115097 : add rsp, 0x60 ; pop rbp ; ret
0x000000000010dd5b : add rsp, 0x68 ; pop rbp ; pop r12 ; ret
0x00000000001010ec : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000010e4cc : add rsp, 0x68 ; ret
0x00000000000bd0d2 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010ded6 : add rsp, 0x78 ; ret
0x000000000011cb1c : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000157b1b : add rsp, 0x90 ; pop rbx ; ret
0x0000000000024242 : add rsp, 0x98 ; ret
0x0000000000120e7f : add rsp, 0xa0 ; pop rbx ; ret
0x0000000000044424 : add rsp, 0xa8 ; ret
0x00000000000e49ba : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x0000000000052c07 : add rsp, 0xd8 ; ret
0x00000000000ddc57 : add rsp, 0xe0 ; pop rbx ; ret
0x00000000000ee324 : add rsp, 8 ; add eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013c3f0 : add rsp, 8 ; lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x0000000000089dfa : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000082403 : add rsp, 8 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x000000000011737e : add rsp, 8 ; mov eax, r8d ; ret
0x0000000000102818 : add rsp, 8 ; mov eax, r9d ; ret
0x00000000000831b1 : add rsp, 8 ; mov rax, r8 ; pop rbx ; pop rbp ; ret
0x00000000000246d8 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000014a0d6 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000522b5 : add rsp, 8 ; movzx eax, al ; ret
0x000000000014120d : add rsp, 8 ; movzx eax, ax ; ret
0x0000000000157d05 : add rsp, 8 ; not eax ; shr eax, 0x1f ; ret
0x0000000000085419 : add rsp, 8 ; pop rbp ; pop r12 ; ret
0x000000000008b4e6 : add rsp, 8 ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x0000000000024e08 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000026f78 : add rsp, 8 ; ret
0x0000000000162da4 : add rsp, 8 ; sar eax, 0x1f ; ret
0x000000000012b99b : add rsp, 8 ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000935e2 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000121fcb : add word ptr [rax], 1 ; ret
0x0000000000121d05 : add word ptr [rdx + rax*2], 1 ; ret
0x000000000004217b : addps xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x00000000000421ef : addps xmm0, xmm0 ; ret
0x0000000000042101 : addps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x000000000004217a : addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x00000000000421ee : addsd xmm0, xmm0 ; ret
0x0000000000042100 : addsd xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000042460 : addss xmm0, xmm0 ; ret
0x00000000000a5dce : and al, 0 ; add bh, dh ; ret
0x00000000000b4221 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000a2074 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001156ce : and al, 0 ; mov rax, r12 ; pop r12 ; ret
0x000000000003007f : and al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000128561 : and al, 0x10 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e2c95 : and al, 0x10 ; add rsp, 0x28 ; ret
0x0000000000041bab : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x00000000000a8a4b : and al, 0x10 ; mov qword ptr [rax], rdx ; ret
0x00000000000a8a05 : and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x0000000000113256 : and al, 0x18 ; add rsp, 0x28 ; ret
0x00000000000a8973 : and al, 0x18 ; mov qword ptr [rdi], rdx ; add rax, rdi ; ret
0x00000000000f69eb : and al, 0x30 ; adc al, 0x83 ; ret
0x00000000000a1f74 : and al, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000429f4 : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010e9d8 : and al, 0x48 ; add esp, 0x18 ; ret
0x0000000000120372 : and al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000113fb0 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010c1c6 : and al, 0x48 ; add esp, 0x28 ; ret
0x0000000000120438 : and al, 0x48 ; add esp, 0x30 ; pop rbp ; ret
0x0000000000196cc2 : and al, 0x48 ; add esp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x0000000000122919 : and al, 0x48 ; add esp, 0x38 ; ret
0x000000000012297a : and al, 0x48 ; add esp, 0x40 ; ret
0x000000000012530c : and al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000a2c0b : and al, 0x5d ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001091b1 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000005f4d8 : and al, 0x83 ; ret
0x0000000000053be5 : and al, 0x87 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000be4a4 : and al, 0x89 ; ret
0x00000000001097fc : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000531ab : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000001383ab : and al, 0xa8 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000e2e75 : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000e2d4f : and al, 0xc ; add rsp, 0x28 ; ret
0x0000000000114fe1 : and al, 0xc ; add rsp, 0x38 ; ret
0x00000000000a89e4 : and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a04e8 : and al, 0xda ; or al, 0 ; cmovne rax, rdx ; ret
0x00000000000a8ac2 : and al, 0xe ; mov byte ptr [rax + 6], dl ; ret
0x0000000000041cdc : and al, 0xe8 ; fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x000000000005b125 : and al, 0xe8 ; pinsrw xmm0, eax, 6 ; ret
0x00000000000301a7 : and al, 0xe8 ; ret
0x00000000000a8aa9 : and al, 0xec ; mov word ptr [rax + 4], dx ; ret
0x000000000013fe51 : and al, 0xee ; dec dword ptr [rax - 0x77] ; ret
0x0000000000199163 : and al, 0xf ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000041d9b : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000041c18 : and al, 0xf0 ; fstp xword ptr [rdi] ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000d029a : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000d02a0 : and al, 0xf0 ; ret
0x00000000000a8a91 : and al, 0xf4 ; mov byte ptr [rax + 4], dl ; ret
0x00000000000a89cc : and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a8a73 : and al, 0xfa ; mov byte ptr [rax + 2], dl ; ret
0x00000000000a89ae : and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000be38e : and al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000046ad9 : and al, 1 ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000011f2ab : and al, 4 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000120bfe : and al, 4 ; add rsp, 0x28 ; ret
0x0000000000047865 : and al, 4 ; jne 0x478ba ; add rsp, 0x18 ; ret
0x00000000000b7858 : and al, 7 ; add byte ptr [rax], al ; ret
0x00000000000349e8 : and al, 8 ; add rsp, 0x18 ; ret
0x0000000000048277 : and al, 8 ; add rsp, 0x28 ; ret
0x000000000011305a : and al, 8 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000120fd3 : and al, 8 ; add rsp, 0x38 ; ret
0x0000000000041dd2 : and al, 8 ; fadd st(0) ; ret
0x0000000000041d2e : and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000041c94 : and al, 8 ; fsubrp st(1) ; ret
0x000000000013c889 : and al, 8 ; jne 0x13c8a4 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000013cad5 : and al, 8 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000041baf : and al, 8 ; ret
0x0000000000042b3d : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000041e64 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000014def7 : and al, ch ; ret
0x00000000000341a6 : and ax, 0x100 ; movzx eax, ax ; ret
0x00000000000341c6 : and ax, 0x1000 ; movzx eax, ax ; ret
0x0000000000034106 : and ax, 0x200 ; movzx eax, ax ; ret
0x0000000000034186 : and ax, 0x2000 ; movzx eax, ax ; ret
0x00000000000340a6 : and ax, 0x400 ; movzx eax, ax ; ret
0x0000000000034146 : and ax, 0x4000 ; movzx eax, ax ; ret
0x00000000000340e6 : and ax, 0x800 ; movzx eax, ax ; ret
0x0000000000034126 : and ax, 0x8000 ; movzx eax, ax ; ret
0x00000000000b7e37 : and bl, al ; nop dword ptr [rax] ; ret
0x00000000000d128c : and byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x00000000000896d7 : and byte ptr [r8 + 1], r9b ; ret
0x00000000000bb2e6 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000011ef01 : and byte ptr [rax + 0x21], cl ; clc ; or rax, rsi ; ret
0x00000000001507d5 : and byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm3 ; ret
0x000000000018473c : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x00000000000896d8 : and byte ptr [rax + 1], cl ; ret
0x000000000004732e : and byte ptr [rax + 9], cl ; clc ; ret
0x00000000000250e4 : and byte ptr [rax - 0x77], cl ; ret
0x00000000000dd4b9 : and byte ptr [rax - 0x7d], cl ; ret
0x000000000008e662 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000006e408 : and byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e506d : and byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000e513b : and byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000bc1db : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000b8fac : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000000bb2e7 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000001663b5 : and byte ptr [rbp + rcx*4 + 0x1d], cl ; ret
0x000000000018c31d : and byte ptr [rbp - 0x27], dh ; vzeroupper ; ret
0x00000000000d1a07 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d128d : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000002f82f : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000015cb33 : and byte ptr [rbx + 9], cl ; add byte ptr [rcx], al ; add rsp, 8 ; ret
0x000000000005f08c : and byte ptr [rcx + 9], cl ; ret
0x00000000000df3a3 : and byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000082cab : and byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000041242 : and byte ptr [rcx + rcx*4 - 0x28], cl ; ret
0x0000000000137f49 : and byte ptr [rcx + rcx*4 - 0x40], al ; pop rbp ; ret
0x00000000000dfe01 : and byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x0000000000053cb3 : and byte ptr [rcx - 0x7d], cl ; ret
0x0000000000091977 : and byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000010c304 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], eax ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x00000000000bbdd5 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000034189 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000000b7b29 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x000000000013f865 : and byte ptr [rdi], cl ; xchg esp, eax ; ret
0x000000000015c5b3 : and byte ptr [rip - 0x76b40000], al ; loopne 0x15c5fc ; pop rsp ; ret
0x000000000012bdc1 : and byte ptr [rsp + rcx + 0x5b], dh ; ret
0x00000000000cfae2 : and ch, 0xf ; je 0xcfb00 ; add rax, 2 ; ret
0x00000000000bc198 : and ch, 0xf0 ; pop rbx ; cmovne rax, rdx ; ret
0x00000000001849d3 : and ch, al ; std ; xlatb ; ret
0x00000000000cfacd : and cl, 0xf ; je 0xcfaf0 ; ret
0x00000000000fbda8 : and cl, bpl ; ret
0x000000000011cc2a : and cl, byte ptr [rax + 0x39] ; ret
0x000000000009c1ed : and cl, byte ptr [rax - 0x73] ; clc ; ret
0x00000000000a0b7e : and cl, byte ptr [rcx + rcx*4 - 0x28] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000099f51 : and cl, byte ptr [rdi + 0x15] ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000000fbda9 : and cl, ch ; ret
0x00000000000e5a8a : and dl, byte ptr [rdi - 0x6f990005] ; xor eax, eax ; ret
0x0000000000087d20 : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000087d7c : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ac8ae : and dword ptr [rcx - 0x77], ecx ; ret
0x0000000000094d2d : and dword ptr [rdi + 8], 0xfffffffe ; xor eax, eax ; ret
0x0000000000160a9a : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x000000000008dee4 : and dword ptr [rdi], 0xffffffcf ; ret
0x0000000000043be4 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000088537 : and dword ptr [rsi + 0x48], 0xf ; outsb dx, byte ptr [rsi] ; ret
0x00000000000b795b : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x000000000002440f : and eax, 0 ; ret
0x0000000000094c48 : and eax, 0x10 ; ret
0x00000000001136a7 : and eax, 0x100f ; ret
0x000000000002fd60 : and eax, 0x1f0fffff ; add byte ptr [rax], r8b ; ret
0x0000000000041dee : and eax, 0x200 ; ret
0x00000000000bc116 : and eax, 0x3fc00 ; ret
0x00000000000bc216 : and eax, 0x3fffc00 ; div ecx ; mov eax, eax ; ret
0x00000000000bc161 : and eax, 0x3fffc00 ; ret
0x000000000012da17 : and eax, 0x480005dc ; cmove eax, edx ; ret
0x00000000000a0627 : and eax, 0x48000eb0 ; cmove eax, edx ; ret
0x0000000000113a8e : and eax, 0x48c88944 ; add esp, 0x38 ; ret
0x000000000008757a : and eax, 0x6e0f4866 ; ret
0x00000000000342b6 : and eax, 0x7f ; ret
0x00000000000bc1ff : and eax, 0x7ff80000 ; div ecx ; mov eax, eax ; ret
0x00000000000bc1b7 : and eax, 0x7ff80000 ; ret
0x00000000000421b8 : and eax, 0x80 ; ret
0x000000000008cd56 : and eax, 0x804 ; ret
0x000000000009466b : and eax, 0xc ; cmp eax, 4 ; je 0x94674 ; ret
0x00000000000947fb : and eax, 0xc ; pop rbx ; ret
0x0000000000102a94 : and eax, 0xf ; ret
0x000000000011ee8a : and eax, 0xfffff000 ; or eax, edx ; ret
0x000000000012fb0a : and eax, 0xffffff ; ret
0x000000000013b3e7 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x0000000000094d90 : and eax, 0xfffffffd ; mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x000000000009c201 : and eax, 1 ; cmovne rax, rdx ; ret
0x0000000000094d17 : and eax, 1 ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000122c40 : and eax, 1 ; mov eax, r8d ; ret
0x0000000000034246 : and eax, 1 ; ret
0x00000000000340c6 : and eax, 2 ; movzx eax, ax ; ret
0x0000000000055bec : and eax, 2 ; sub eax, 1 ; ret
0x000000000011f8d3 : and eax, 3 ; ret
0x0000000000034166 : and eax, 4 ; movzx eax, ax ; ret
0x0000000000034086 : and eax, 8 ; movzx eax, ax ; ret
0x00000000000424e8 : and eax, 8 ; ret
0x00000000000c79e0 : and eax, dword ptr [rax] ; add dh, dh ; ret
0x00000000001786d9 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000041b23 : and eax, ecx ; ret
0x000000000011ef03 : and eax, edi ; or rax, rsi ; ret
0x0000000000041ea3 : and eax, edx ; ret
0x0000000000041ee4 : and eax, edx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x0000000000034491 : and eax, esi ; ret
0x0000000000087d21 : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000087d7d : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000094606 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x94610 ; ret
0x00000000000ee45f : and ebx, 8 ; je 0xee3f7 ; pop rbx ; ret
0x0000000000085914 : and ebx, dword ptr [rbx + 0x4c] ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000141a5d : and ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000047d76 : and ecx, 0x3ff ; xor eax, ecx ; ret
0x00000000000ee40e : and ecx, 0x80 ; cmovne eax, edx ; pop rbx ; ret
0x000000000018eb85 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000018e2b8 : and ecx, 0xffff ; sub eax, ecx ; ret
0x00000000000d002c : and ecx, dword ptr [rcx + rcx*4 - 0x20] ; pop r12 ; ret
0x00000000000957d5 : and ecx, dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116ed4 : and ecx, dword ptr [rcx + rcx*4 - 0x40] ; mov byte ptr [rsi - 1], 0 ; ret
0x000000000018a337 : and ecx, ebp ; ret
0x00000000000342c6 : and edi, 0xffffff80 ; sete al ; ret
0x00000000000c4072 : and edi, ecx ; dec dword ptr [rax - 0x7d] ; ret
0x000000000008ad43 : and edx, 1 ; mov eax, edx ; ret
0x0000000000041fcb : and edx, eax ; mov qword ptr [rdi], rdx ; ret
0x0000000000041f5c : and edx, eax ; movq xmm0, rdx ; ret
0x0000000000042330 : and esi, 0x80000000 ; mov dword ptr [rdi], esi ; ret
0x0000000000160a99 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000043be3 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000122c3f : and r8d, 1 ; mov eax, r8d ; ret
0x000000000011ef02 : and rax, rdi ; or rax, rsi ; ret
0x0000000000041fca : and rdx, rax ; mov qword ptr [rdi], rdx ; ret
0x0000000000041f5b : and rdx, rax ; movq xmm0, rdx ; ret
0x00000000000422bf : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x00000000000422bc : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x0000000000134bd3 : bnd call ptr [rax + 0x4c] ; mov eax, esp ; pop rdx ; pop r12 ; ret
0x0000000000041d0a : bnd je 0x41c58 ; ret
0x00000000000a8819 : bnd je 0xa8810 ; ret
0x00000000000bdfb8 : bnd je 0xbdfbf ; test edx, edx ; jne 0xbdfb0 ; ret
0x00000000000ac25a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x00000000000ac170 : bsf eax, eax ; add rax, rdi ; ret
0x00000000001847a1 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x00000000000ac180 : bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x00000000000ac190 : bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x00000000000ac160 : bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x00000000000ac0bf : bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000b16f7 : bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x00000000000a06b9 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x00000000000b1bfa : bsf eax, edx ; ret
0x00000000000cf737 : bsf eax, edx ; shr rax, 2 ; ret
0x00000000000b1d52 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x00000000000b1810 : bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x00000000000b1c42 : bsf rax, rdx ; ret
0x00000000000cf736 : bsf rax, rdx ; shr rax, 2 ; ret
0x0000000000184b90 : bsr eax, eax ; add eax, 0x60 ; add rax, rdi ; ret
0x00000000000ac776 : bsr eax, eax ; add rax, rdi ; add rax, rsi ; ret
0x00000000000ac5a6 : bsr eax, eax ; add rax, rdi ; ret
0x0000000000184a7f : bsr eax, eax ; add rax, rdi ; vzeroupper ; ret
0x00000000000ac650 : bsr eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x00000000000ac660 : bsr eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x00000000000ac670 : bsr eax, eax ; lea rax, [rax + rdi + 0x30] ; ret
0x00000000000b1bab : bsr eax, esi ; add rax, rdi ; ret
0x00000000000b1ab9 : bsr esi, esi ; lea rax, [rcx + rsi] ; ret
0x00000000000b19b5 : bsr esi, esi ; lea rax, [rdi + rsi] ; ret
0x00000000000b191a : bsr rax, rax ; add rax, rdi ; ret
0x00000000000b1baa : bsr rax, rsi ; add rax, rdi ; ret
0x00000000000b1ab8 : bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x00000000000b19b4 : bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x000000000015083d : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000012fac6 : bswap eax ; ret
0x000000000009552c : cdq ; adc eax, 0x48a77600 ; add esp, 8 ; ret
0x0000000000045feb : cdq ; add byte ptr [rax], al ; add al, ch ; pop rsp ; ret
0x00000000000bca03 : cdq ; add dword ptr es:[rax], eax ; cmove rax, rdx ; ret
0x0000000000047348 : cdq ; idiv rsi ; ret
0x0000000000048243 : cdq ; ret
0x000000000018c35f : cdq ; vzeroupper ; ret
0x00000000000472f6 : cdq ; xor eax, edx ; sub eax, edx ; ret
0x0000000000047308 : cdq ; xor rax, rdx ; sub rax, rdx ; ret
0x0000000000094d04 : cdqe ; mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000006fd9c : clc ; add al, byte ptr [rcx - 9] ; ret
0x000000000013a77c : clc ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x000000000010d04d : clc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], edi ; ret
0x000000000008959c : clc ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000085c6e : clc ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000000cf8d2 : clc ; add cl, byte ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], cl ; ret
0x0000000000117c11 : clc ; add dword ptr [rdi + 1], edi ; ret
0x00000000000a2223 : clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013b3e9 : clc ; add eax, 0x10 ; ret
0x000000000014874e : clc ; add esi, dword ptr [rsi + 0xe] ; mov eax, 2 ; ret
0x0000000000184c5f : clc ; add rax, r8 ; vzeroupper ; ret
0x00000000000abf47 : clc ; add rax, rcx ; ret
0x00000000001845b4 : clc ; add rax, rcx ; vzeroupper ; ret
0x00000000000ac77b : clc ; add rax, rsi ; ret
0x00000000000342b5 : clc ; and eax, 0x7f ; ret
0x000000000012fb09 : clc ; and eax, 0xffffff ; ret
0x0000000000094d58 : clc ; and eax, 1 ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000012fac5 : clc ; bswap eax ; ret
0x00000000000472f5 : clc ; cdq ; xor eax, edx ; sub eax, edx ; ret
0x0000000000055c41 : clc ; clc ; jne 0x55c30 ; mov rax, rdx ; ret
0x000000000013b3c9 : clc ; cmc ; je 0x13b3c0 ; pop rbx ; ret
0x000000000018eb29 : clc ; cmp rcx, rax ; jne 0x18eb53 ; xor eax, eax ; ret
0x000000000018f969 : clc ; cmp rcx, rax ; jne 0x18f993 ; xor eax, eax ; ret
0x0000000000047346 : clc ; cqo ; idiv rsi ; ret
0x0000000000047306 : clc ; cqo ; xor rax, rdx ; sub rax, rdx ; ret
0x00000000000a2210 : clc ; dec dword ptr [rax + 0x29] ; ret
0x0000000000075cca : clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000cb73b : clc ; dec dword ptr [rax - 0x7d] ; ret
0x000000000007b9af : clc ; idiv bh ; dec dword ptr [rbp + 0x63] ; ret
0x000000000018b39d : clc ; ja 0x18b363 ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x000000000013b90d : clc ; jae 0x13b923 ; mov eax, 0xffffffff ; ret
0x000000000005b39f : clc ; jae 0x5b350 ; mov rax, r10 ; pop rbx ; ret
0x000000000010d8a8 : clc ; je 0x10d8b0 ; mov eax, r9d ; ret
0x000000000011f7b9 : clc ; je 0x11f7f4 ; mov eax, r8d ; ret
0x00000000000bc202 : clc ; jg 0xbc1fc ; int1 ; mov eax, eax ; ret
0x0000000000192ada : clc ; jne 0x192be0 ; ret
0x0000000000055c42 : clc ; jne 0x55c30 ; mov rax, rdx ; ret
0x000000000018b32f : clc ; lea rax, [rdi + r8] ; vzeroupper ; ret
0x00000000000e366b : clc ; leave ; ret
0x0000000000189a4f : clc ; mov byte ptr [rdi + r8], 0 ; vzeroupper ; ret
0x0000000000116e55 : clc ; mov byte ptr [rsi - 1], 0 ; mov rax, r8 ; ret
0x0000000000167907 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000168277 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016d1f7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000168477 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016d167 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000168677 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016d0d7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000167923 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000bc052 : clc ; mov qword ptr [rdi], rcx ; ret
0x000000000018bc51 : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x000000000018fb30 : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000bbc1e : clc ; mov qword ptr [rdi], rsi ; ret
0x000000000005b6ab : clc ; or dword ptr [rdi - 0x2f], esi ; mov rax, r8 ; ret
0x000000000012fb23 : clc ; or eax, esi ; bswap eax ; ret
0x000000000011ef04 : clc ; or rax, rsi ; ret
0x0000000000095652 : clc ; pop rbx ; pop rbp ; mov rax, r8 ; pop r12 ; ret
0x00000000000a8eee : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000062f0f : clc ; push qword ptr [rbp + rcx + 0x44] ; mov eax, eax ; ret
0x00000000000e4f46 : clc ; push rbx ; pop rax ; jne 0xe4f50 ; ret
0x0000000000047331 : clc ; ret
0x000000000012fad5 : clc ; rol ax, 8 ; ret
0x000000000012f9ef : clc ; sar rax, 6 ; ret
0x00000000000e9ec5 : clc ; sbb byte ptr [rcx], bh ; ret
0x00000000000d0029 : clc ; sbb dword ptr [rdi + 0x23], edi ; mov rax, r12 ; pop r12 ; ret
0x00000000000563ca : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000012fb99 : clc ; shr eax, 0x18 ; ret
0x00000000000cf84f : clc ; shr rax, 2 ; ret
0x000000000002fdab : clc ; std ; je 0x2fdc8 ; pop rbx ; ret
0x00000000001887e6 : clc ; sub rax, rdx ; vzeroupper ; ret
0x000000000018472b : clc ; vzeroupper ; ret
0x00000000000e501a : cld ; add byte ptr [rax], al ; ret
0x00000000000bc118 : cld ; add eax, dword ptr [rax] ; ret
0x0000000000192bd2 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x192be0 ; xor eax, eax ; ret
0x00000000001113d7 : cld ; dec dword ptr [rax - 0x77] ; ret
0x000000000005b15e : cld ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000041d2b : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x00000000000bc218 : cld ; inc dword ptr [rbx] ; div ecx ; mov eax, eax ; ret
0x00000000000bc163 : cld ; inc dword ptr [rbx] ; ret
0x000000000018f776 : cld ; jne 0x18f9a6 ; xor eax, eax ; ret
0x0000000000192af5 : cld ; jne 0x192be0 ; ret
0x0000000000192bd5 : cld ; jne 0x192be0 ; xor eax, eax ; ret
0x000000000018b30d : cld ; lea rax, [rdi + r8] ; vzeroupper ; ret
0x0000000000189a2d : cld ; mov byte ptr [rdi + r8], 0 ; vzeroupper ; ret
0x0000000000168092 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000168295 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000168495 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000168695 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000bc05a : cld ; mov dword ptr [rdi], ecx ; ret
0x000000000018bc5c : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000018fb42 : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000bbc2c : cld ; mov dword ptr [rdi], esi ; ret
0x00000000000bbc26 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000157559 : cld ; mov qword ptr [rdi + 0x18], rax ; mov eax, r8d ; ret
0x0000000000167cc6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016d386 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000167ea6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016d306 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000168086 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016d286 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000167ae6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016d406 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000a1b36 : cld ; or byte ptr [rax + 0xf], cl ; ret
0x00000000000d2f6b : cld ; push qword ptr [rcx] ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000bbb6f : cld ; ret
0x00000000000241a8 : cld ; sbb byte ptr [rax], al ; ret
0x000000000018a5dd : cld ; vzeroupper ; ret
0x00000000000a4f88 : cld ; xor al, 0 ; add byte ptr [rcx - 9], al ; ret
0x0000000000141062 : cli ; adc ebp, esi ; dec dword ptr [rax + 0x39] ; ret
0x00000000000bce02 : cli ; add al, 0x4c ; cmovne eax, eax ; mov rax, r8 ; ret
0x00000000000ea372 : cli ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000bc045 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0xbc04d ; mov byte ptr [rdi], cl ; ret
0x0000000000157913 : cli ; add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000019022f : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000018fb60 : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000c9475 : cli ; add eax, 0x89490000 ; ret
0x00000000000dd05b : cli ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x000000000013f864 : cli ; and byte ptr [rdi], cl ; xchg esp, eax ; ret
0x000000000008dee3 : cli ; and dword ptr [rdi], 0xffffffcf ; ret
0x00000000000e518b : cli ; cmc ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; setne al ; ret
0x00000000000dcfa3 : cli ; cmp esi, 1 ; je 0xdcfb0 ; xor eax, eax ; ret
0x0000000000091e83 : cli ; cmp qword ptr [rdi + 0x38], 0 ; je 0x91e90 ; ret
0x0000000000079cfc : cli ; dec dword ptr [rcx - 0x77] ; ret
0x000000000007ea61 : cli ; emms ; jrcxz 0x7ea4f ; ret
0x00000000000bc137 : cli ; inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; ret
0x0000000000081ec1 : cli ; inc dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000018b75d : cli ; jg 0x18b767 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000018bc46 : cli ; jg 0x18bc50 ; vzeroupper ; ret
0x000000000018fb1b : cli ; jg 0x18fb25 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000001901fa : cli ; jg 0x190204 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000190505 : cli ; jg 0x19050f ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000190b1c : cli ; jg 0x190b26 ; vzeroupper ; ret
0x00000000000241a3 : cli ; lea rax, [rip + 0x18fcf3] ; ret
0x00000000000241b3 : cli ; lea rax, [rip + 0x191abc] ; ret
0x00000000000a8a74 : cli ; mov byte ptr [rax + 2], dl ; ret
0x00000000000a8b3c : cli ; mov byte ptr [rdi + 2], al ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000a89af : cli ; mov byte ptr [rdi + 2], dl ; ret
0x000000000010c793 : cli ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x0000000000168498 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000479f3 : cli ; mov eax, 0xffffffff ; ret
0x0000000000146253 : cli ; mov eax, 1 ; ret
0x0000000000148a83 : cli ; mov eax, 2 ; ret
0x0000000000093563 : cli ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000157923 : cli ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000010c783 : cli ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000001136a3 : cli ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000008cd83 : cli ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000008cd53 : cli ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000094da3 : cli ; mov eax, dword ptr [rdi] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000de2e3 : cli ; mov eax, dword ptr [rdi] ; ret
0x000000000008def3 : cli ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x000000000008df03 : cli ; mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x00000000000440a3 : cli ; mov eax, dword ptr [rip + 0x1a80fe] ; ret
0x0000000000044093 : cli ; mov eax, dword ptr [rip + 0x1a8112] ; ret
0x00000000000342b3 : cli ; mov eax, edi ; and eax, 0x7f ; ret
0x000000000012fac3 : cli ; mov eax, edi ; bswap eax ; ret
0x00000000000472f3 : cli ; mov eax, edi ; cdq ; xor eax, edx ; sub eax, edx ; ret
0x000000000012fad3 : cli ; mov eax, edi ; rol ax, 8 ; ret
0x00000000000928f3 : cli ; mov rax, 0xffffffffffffffff ; ret
0x00000000001574a3 : cli ; mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000de293 : cli ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000093853 : cli ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000093833 : cli ; mov rax, qword ptr [rip + 0x159d65] ; ret
0x000000000002f5a3 : cli ; mov rax, qword ptr [rip + 0x1be3bd] ; ret
0x0000000000025ab3 : cli ; mov rax, qword ptr [rip + 0x1cb6ed] ; ret
0x0000000000025aa3 : cli ; mov rax, qword ptr [rip + 0x1cb70d] ; ret
0x0000000000047343 : cli ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x0000000000093863 : cli ; mov rax, rdi ; ret
0x0000000000042a23 : cli ; movmskps eax, xmm0 ; and eax, 8 ; ret
0x000000000010c753 : cli ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000ac8c9 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000424e3 : cli ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x000000000005b45e : cli ; pop rbx ; cmovb r10, rdi ; mov rax, r10 ; ret
0x00000000000e51a7 : cli ; push rsp ; push rbx ; setne al ; ret
0x00000000000bbf66 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000023ef3 : cli ; ret
0x0000000000094193 : cli ; setae al ; ret
0x00000000000d4236 : cli ; sub byte ptr [rdi + rcx*4 + 2], bl ; jbe 0xd4240 ; ret
0x00000000000bbf53 : cli ; test rdx, rdx ; jne 0xbbf5d ; mov rax, rdi ; ret
0x00000000000b1d63 : cli ; test rsi, rsi ; jne 0xb1d6d ; xor rax, rax ; ret
0x00000000000cf693 : cli ; test rsi, rsi ; jne 0xcf69d ; xor rax, rax ; ret
0x00000000000342c3 : cli ; xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x0000000000094c63 : cli ; xor eax, eax ; cmp rdi, rsi ; sete al ; ret
0x0000000000092873 : cli ; xor eax, eax ; ret
0x000000000008cd63 : cli ; xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x000000000008cd73 : cli ; xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000908a3 : cli ; xor eax, eax ; test rdx, rdx ; jne 0x908b0 ; ret
0x00000000000e766a : cmc ; dec dword ptr [rax - 0x77] ; ret
0x000000000013b3ca : cmc ; je 0x13b3c0 ; pop rbx ; ret
0x00000000000e518c : cmc ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; setne al ; ret
0x00000000001411f7 : cmc ; lodsd eax, dword ptr [rsi] ; or al, byte ptr [rax] ; mov rax, qword ptr fs:[rax] ; ret
0x000000000016d30a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000167d1e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001920e3 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000011fa77 : cmc ; ret
0x00000000001920e7 : cmc ; sub eax, edx ; ret
0x0000000000112afc : cmova eax, edx ; ret
0x0000000000093e9d : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000093e9c : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000120e10 : cmovb eax, edx ; ret
0x000000000005b461 : cmovb edx, edi ; mov rax, r10 ; ret
0x000000000005b460 : cmovb r10, rdi ; mov rax, r10 ; ret
0x0000000000120e0f : cmovb rax, rdx ; ret
0x000000000009f35d : cmovbe eax, edx ; ret
0x00000000000cf8d8 : cmove eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011570e : cmove eax, ebx ; pop rbx ; ret
0x00000000000bc13d : cmove eax, ecx ; ret
0x00000000000a06bc : cmove eax, edx ; add eax, 1 ; ret
0x00000000000d0ea0 : cmove eax, edx ; add rsp, 0x58 ; ret
0x000000000009cb97 : cmove eax, edx ; add rsp, 8 ; ret
0x0000000000033c3f : cmove eax, edx ; ret
0x000000000011570d : cmove rax, rbx ; pop rbx ; ret
0x00000000000bc13c : cmove rax, rcx ; ret
0x00000000000a06dd : cmove rax, rdx ; add eax, 1 ; ret
0x00000000000d0e9f : cmove rax, rdx ; add rsp, 0x58 ; ret
0x000000000009cb96 : cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000033c3e : cmove rax, rdx ; ret
0x0000000000086e1b : cmovg eax, ecx ; test rdx, rdx ; jne 0x86e10 ; ret
0x00000000000916e3 : cmovg eax, ecx ; test rdx, rdx ; jne 0x916d8 ; ret
0x00000000000cf196 : cmovg ecx, eax ; mov eax, r9d ; ret
0x00000000000cf195 : cmovg r9d, eax ; mov eax, r9d ; ret
0x0000000000086e1a : cmovg rax, rcx ; test rdx, rdx ; jne 0x86e10 ; ret
0x00000000000916e2 : cmovg rax, rcx ; test rdx, rdx ; jne 0x916d8 ; ret
0x000000000012eae0 : cmovl ecx, dword ptr [rcx + 0x415d5be0] ; pop rsp ; ret
0x00000000000cf174 : cmovl ecx, eax ; mov eax, r9d ; ret
0x00000000000cf173 : cmovl r9d, eax ; mov eax, r9d ; ret
0x00000000000a289b : cmovne eax, eax ; mov rax, r8 ; ret
0x000000000008a724 : cmovne eax, ecx ; ret
0x00000000000a1ff7 : cmovne eax, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a2c3e : cmovne eax, edi ; ret
0x000000000015c60a : cmovne eax, edx ; add rsp, 8 ; ret
0x00000000000ee414 : cmovne eax, edx ; pop rbx ; ret
0x000000000009c205 : cmovne eax, edx ; ret
0x0000000000188164 : cmovne eax, edx ; vzeroupper ; ret
0x00000000001294b3 : cmovne eax, esi ; ret
0x000000000008ce60 : cmovne edx, ecx ; mov dword ptr [rdi], edx ; ret
0x00000000000a289a : cmovne r8, rax ; mov rax, r8 ; ret
0x000000000008a723 : cmovne rax, rcx ; ret
0x00000000000a2c3d : cmovne rax, rdi ; ret
0x000000000015c609 : cmovne rax, rdx ; add rsp, 8 ; ret
0x000000000009c204 : cmovne rax, rdx ; ret
0x0000000000188163 : cmovne rax, rdx ; vzeroupper ; ret
0x0000000000127ae1 : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000e5c6d : cmovns eax, dword ptr [rbx + 0x394810c1] ; ret
0x0000000000078bbe : cmovns eax, dword ptr [rbx - 0x76b20f20] ; ret
0x00000000001141bc : cmovns eax, edx ; ret
0x0000000000127ae0 : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000007f320 : cmovs eax, dword ptr [rbx + 0x149f0e0] ; ret
0x0000000000147538 : cmovs eax, dword ptr [rbx - 0x3fcef73c] ; pop rbx ; pop rbp ; ret
0x00000000001041a1 : cmovs eax, dword ptr [rbx - 0x76b70f20] ; ret
0x0000000000027200 : cmovs eax, edx ; ret
0x0000000000096965 : cmovs ecx, dword ptr [rbx - 0x173ef7be] ; add al, 0x39 ; ret
0x0000000000092a18 : cmovs edi, dword ptr [rcx] ; int1 ; ja 0x92a10 ; lea eax, [rdx + rdi] ; ret
0x0000000000183db8 : cmp ah, byte ptr [rax] ; sub eax, edx ; vzeroupper ; ret
0x0000000000183b3f : cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000e81a3 : cmp al, 0x3f ; jne 0xe81d9 ; mov eax, 1 ; ret
0x00000000000e81c4 : cmp al, 0x3f ; jne 0xe81f9 ; mov eax, 1 ; ret
0x0000000000116c38 : cmp al, 0x48 ; add esp, 0x38 ; ret
0x00000000001946c6 : cmp al, 0xf ; mov gs, word ptr [rdi - 0x72000006] ; ret
0x000000000018f753 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000b7a40 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x000000000018b1f2 : cmp al, byte ptr [rdx] ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000001925a6 : cmp al, byte ptr [rsi - 1] ; jne 0x1925c5 ; xor eax, eax ; ret
0x00000000000ac166 : cmp al, dh ; ret
0x00000000000ac165 : cmp al, r14b ; ret
0x0000000000041b7a : cmp bh, 0xff ; inc eax ; shr eax, 0x1f ; ret
0x000000000012943a : cmp bh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000001294b1 : cmp bh, cl ; cmovne eax, esi ; ret
0x0000000000091f07 : cmp byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000000cf066 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x00000000000926c0 : cmp byte ptr [r13 + 0x41], r11b ; pop rsp ; ret
0x0000000000127787 : cmp byte ptr [r8 + 0x39], r9b ; ret
0x0000000000128321 : cmp byte ptr [r8 - 0x7d], cl ; ret
0x00000000000fed68 : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007e829 : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000054334 : cmp byte ptr [rax + 1], 0 ; jne 0x54330 ; pop rbx ; ret
0x00000000000ac1a7 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x000000000009268d : cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000128322 : cmp byte ptr [rax - 0x7d], cl ; ret
0x0000000000054309 : cmp byte ptr [rax - 1], 0x2f ; jne 0x54300 ; pop rbx ; ret
0x0000000000116d56 : cmp byte ptr [rax - 1], bh ; ret
0x000000000017c6e8 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000000ac196 : cmp byte ptr [rax], ah ; ret
0x0000000000091e87 : cmp byte ptr [rax], al ; je 0x91e90 ; ret
0x00000000000fed69 : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b14d4 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x00000000000ac676 : cmp byte ptr [rax], dh ; ret
0x00000000000ac186 : cmp byte ptr [rax], dl ; ret
0x00000000000ac185 : cmp byte ptr [rax], r10b ; ret
0x00000000000ac195 : cmp byte ptr [rax], r12b ; ret
0x00000000000ac675 : cmp byte ptr [rax], r14b ; ret
0x00000000000b14d3 : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000cf06a : cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000cf069 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x00000000000926c1 : cmp byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000011cd82 : cmp byte ptr [rbp - 0x3dbbf040], al ; ret
0x0000000000025b98 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000091f08 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000002448e : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000000cf067 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000086406 : cmp byte ptr [rcx + rcx*4 - 0x38], al ; ret
0x000000000008af98 : cmp byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000feca0 : cmp byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x0000000000091e61 : cmp byte ptr [rcx - 0x3b7cb7fd], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000139a65 : cmp byte ptr [rcx - 0xa], al ; ret
0x000000000012126a : cmp byte ptr [rcx], 0 ; je 0x121270 ; ret
0x000000000017c6e9 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x00000000000b8e94 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x0000000000127970 : cmp byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000009685e : cmp byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 0x46 ; or byte ptr [rax - 0x77], cl ; ret
0x000000000004736c : cmp byte ptr [rdi], 0 ; jne 0x47378 ; pop rbx ; ret
0x00000000000f07ce : cmp byte ptr [rdi], cl ; mov dh, 0x14 ; cmp ch, cl ; ret
0x000000000018dffd : cmp byte ptr [rdi], dl ; ret
0x00000000000f07cd : cmp byte ptr [rdi], r9b ; mov dh, 0x14 ; cmp ch, cl ; ret
0x00000000001379fb : cmp byte ptr [rdx + 0x4401000b], cl ; mov eax, eax ; pop rbp ; ret
0x00000000001984e1 : cmp byte ptr [rip - 0x74b79c00], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000328ad : cmp byte ptr [rsi + 0x17], dh ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000115f86 : cmp byte ptr [rsi], 0 ; lea rdx, [rsi + 1] ; jne 0x115f60 ; ret
0x00000000000ee47a : cmp byte ptr [rsi], cl ; je 0xee3bd ; ret
0x0000000000127922 : cmp ch, byte ptr [rbx - 0x76b70011] ; ret
0x0000000000183b42 : cmp ch, byte ptr [rcx] ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000f07d2 : cmp ch, cl ; ret
0x00000000000646c1 : cmp cl, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x000000000013e56b : cmp cl, byte ptr [rax - 0x77] ; ret
0x000000000013e52c : cmp cl, byte ptr [rax - 0x7d] ; ret
0x000000000005448c : cmp cl, byte ptr [rdi] ; xchg esp, eax ; ret
0x000000000015d233 : cmp cx, 3 ; jbe 0x15d240 ; ret
0x0000000000129477 : cmp dh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000188161 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x0000000000190afe : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000001294e8 : cmp dh, cl ; cmovne eax, edx ; ret
0x00000000000f7e1c : cmp dh, dh ; ret
0x0000000000129439 : cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000001294b0 : cmp dil, cl ; cmovne eax, esi ; ret
0x00000000000bc044 : cmp dl, 1 ; ja 0xbc05e ; jb 0xbc04d ; mov byte ptr [rdi], cl ; ret
0x000000000018fb5f : cmp dl, 1 ; jb 0x18fb68 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000019022e : cmp dl, 1 ; jb 0x190235 ; mov byte ptr [rdi], cl ; ret
0x000000000009f320 : cmp dl, 3 ; je 0x9f330 ; movsx eax, dl ; ret
0x000000000009c26d : cmp dl, al ; jne 0x9c258 ; sub rax, 0x10 ; ret
0x000000000009c26c : cmp dl, r8b ; jne 0x9c258 ; sub rax, 0x10 ; ret
0x00000000000bcccb : cmp dword ptr [r9], edx ; jne 0xbcc65 ; test edx, edx ; jne 0xbccb0 ; ret
0x000000000008749c : cmp dword ptr [rax + 0x30], 0 ; je 0x874a8 ; ret
0x000000000012ce5a : cmp dword ptr [rax + 8], edi ; jne 0x12ce50 ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000012126b : cmp dword ptr [rax], eax ; je 0x121270 ; ret
0x000000000015376d : cmp dword ptr [rax], ebx ; je 0x153780 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000094eab : cmp dword ptr [rbp + rdx], esi ; ret
0x0000000000099f4e : cmp dword ptr [rbx + 0x154f222d], eax ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000000949f6 : cmp dword ptr [rbx + 0x159e022d], eax ; add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000098843 : cmp dword ptr [rbx + 0x15], eax ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000085620 : cmp dword ptr [rbx + 0x44], ebx ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000011c02f : cmp dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000000a2053 : cmp dword ptr [rbx], 0 ; je 0xa2068 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bcccc : cmp dword ptr [rcx], edx ; jne 0xbcc65 ; test edx, edx ; jne 0xbccb0 ; ret
0x0000000000091e85 : cmp dword ptr [rdi + 0x38], 0 ; je 0x91e90 ; ret
0x000000000009ef1f : cmp dword ptr [rdi + 8], esi ; jb 0x9ef30 ; mov qword ptr [rdi], rsi ; ret
0x000000000012cedc : cmp dword ptr [rdi], 0 ; je 0x12cef0 ; ret
0x000000000008a721 : cmp dword ptr [rdx + 0x48], eax ; cmovne eax, ecx ; ret
0x0000000000023a6f : cmp dword ptr [rdx + 0xd8], eax ; jne 0x23a3b ; ret
0x000000000009e1f5 : cmp dword ptr [rip + 0x150d14], 0 ; je 0x9e200 ; ret
0x00000000001196f1 : cmp dword ptr [rsi], 0 ; mov rbx, rsi ; je 0x119700 ; pop rbx ; ret
0x0000000000102a0e : cmp dx, 2 ; je 0x102a18 ; ret
0x000000000015d21f : cmp dx, cx ; sete al ; ret
0x0000000000112d2d : cmp eax, -0x5f ; je 0x112d38 ; neg eax ; ret
0x0000000000112f7d : cmp eax, -0x5f ; je 0x112f88 ; neg eax ; ret
0x000000000013b3c8 : cmp eax, -0xb ; je 0x13b3c0 ; pop rbx ; ret
0x0000000000062f0e : cmp eax, -1 ; je 0x62f20 ; mov eax, r8d ; ret
0x0000000000160b12 : cmp eax, -1 ; sete dl ; mov dword ptr [rbx], edx ; pop rbx ; ret
0x000000000002fdaa : cmp eax, -3 ; je 0x2fdc8 ; pop rbx ; ret
0x0000000000055c40 : cmp eax, -8 ; jne 0x55c30 ; mov rax, rdx ; ret
0x0000000000083f3e : cmp eax, 0x10016a8 ; ret
0x00000000000951f8 : cmp eax, 0x2000000 ; jbe 0x95200 ; ret
0x000000000010d8a7 : cmp eax, 0x26 ; je 0x10d8b0 ; mov eax, r9d ; ret
0x000000000011f7b8 : cmp eax, 0x26 ; je 0x11f7f4 ; mov eax, r8d ; ret
0x000000000015fd7e : cmp eax, 0x38c48348 ; ret
0x0000000000094e48 : cmp eax, 0x408 ; jbe 0x94e50 ; ret
0x000000000011764f : cmp eax, 0x4c000d81 ; mov eax, eax ; ret
0x0000000000098daf : cmp eax, 0x50f0015 ; pop rbp ; ret
0x00000000000e4f45 : cmp eax, 0x58465342 ; jne 0xe4f50 ; ret
0x00000000000c3f71 : cmp eax, 0x850f0c00 ; ret
0x000000000015066d : cmp eax, 0x89480006 ; ret
0x0000000000162149 : cmp eax, 0x8948ffee ; ret
0x00000000000ee2dd : cmp eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x000000000015dee5 : cmp eax, 0x8e546 ; test edi, edi ; jns 0x15def0 ; ret
0x0000000000095258 : cmp eax, 0xa0 ; jbe 0x95260 ; ret
0x000000000011870f : cmp eax, 0xd3c34 ; ret
0x0000000000094e88 : cmp eax, 0xffff ; jbe 0x94e90 ; ret
0x000000000010c16b : cmp eax, 0xfffff000 ; ja 0x10c1d0 ; ret
0x000000000010c21b : cmp eax, 0xfffff000 ; ja 0x10c280 ; ret
0x000000000010d4bb : cmp eax, 0xfffff000 ; ja 0x10d4c8 ; ret
0x000000000010d51a : cmp eax, 0xfffff000 ; ja 0x10d528 ; ret
0x000000000010d57b : cmp eax, 0xfffff000 ; ja 0x10d588 ; ret
0x000000000010d903 : cmp eax, 0xfffff000 ; ja 0x10d910 ; ret
0x000000000010d966 : cmp eax, 0xfffff000 ; ja 0x10d970 ; ret
0x000000000010d9c0 : cmp eax, 0xfffff000 ; ja 0x10d9d0 ; ret
0x000000000010dbf9 : cmp eax, 0xfffff000 ; ja 0x10dc08 ; ret
0x000000000010dfd3 : cmp eax, 0xfffff000 ; ja 0x10e030 ; ret
0x000000000010e078 : cmp eax, 0xfffff000 ; ja 0x10e0d0 ; ret
0x000000000010e10c : cmp eax, 0xfffff000 ; ja 0x10e118 ; ret
0x000000000010e13c : cmp eax, 0xfffff000 ; ja 0x10e148 ; ret
0x000000000010e818 : cmp eax, 0xfffff000 ; ja 0x10e860 ; ret
0x000000000010e998 : cmp eax, 0xfffff000 ; ja 0x10e9e0 ; ret
0x0000000000112968 : cmp eax, 0xfffff000 ; ja 0x1129c0 ; ret
0x0000000000112feb : cmp eax, 0xfffff000 ; ja 0x113068 ; ret
0x00000000001130af : cmp eax, 0xfffff000 ; ja 0x1130c0 ; ret
0x00000000001130f4 : cmp eax, 0xfffff000 ; ja 0x113100 ; ret
0x00000000001131fb : cmp eax, 0xfffff000 ; ja 0x113260 ; ret
0x00000000001132ab : cmp eax, 0xfffff000 ; ja 0x113310 ; ret
0x000000000011334c : cmp eax, 0xfffff000 ; ja 0x113358 ; ret
0x0000000000113609 : cmp eax, 0xfffff000 ; ja 0x113618 ; ret
0x000000000011363f : cmp eax, 0xfffff000 ; ja 0x113650 ; ret
0x000000000011367c : cmp eax, 0xfffff000 ; ja 0x113688 ; ret
0x0000000000113b62 : cmp eax, 0xfffff000 ; ja 0x113bb8 ; ret
0x0000000000113d75 : cmp eax, 0xfffff000 ; ja 0x113d80 ; ret
0x0000000000113db6 : cmp eax, 0xfffff000 ; ja 0x113dc0 ; ret
0x00000000001143e8 : cmp eax, 0xfffff000 ; ja 0x114440 ; ret
0x0000000000114488 : cmp eax, 0xfffff000 ; ja 0x1144e0 ; ret
0x000000000011452e : cmp eax, 0xfffff000 ; ja 0x114598 ; ret
0x00000000001145ee : cmp eax, 0xfffff000 ; ja 0x114658 ; ret
0x0000000000114f7b : cmp eax, 0xfffff000 ; ja 0x114ff0 ; ret
0x00000000001151a8 : cmp eax, 0xfffff000 ; ja 0x1151f0 ; ret
0x0000000000115268 : cmp eax, 0xfffff000 ; ja 0x1152b0 ; ret
0x0000000000115328 : cmp eax, 0xfffff000 ; ja 0x115330 ; ret
0x0000000000116aac : cmp eax, 0xfffff000 ; ja 0x116ab8 ; ret
0x0000000000116c91 : cmp eax, 0xfffff000 ; ja 0x116ca0 ; ret
0x0000000000116ccc : cmp eax, 0xfffff000 ; ja 0x116cd8 ; ret
0x0000000000116cfc : cmp eax, 0xfffff000 ; ja 0x116d08 ; ret
0x00000000001188e7 : cmp eax, 0xfffff000 ; ja 0x118950 ; pop rbx ; pop rbp ; ret
0x00000000001189e8 : cmp eax, 0xfffff000 ; ja 0x118a40 ; ret
0x000000000011c4c3 : cmp eax, 0xfffff000 ; ja 0x11c4d0 ; ret
0x000000000011f19c : cmp eax, 0xfffff000 ; ja 0x11f1a8 ; ret
0x000000000011f241 : cmp eax, 0xfffff000 ; ja 0x11f2b8 ; ret
0x000000000011f2f4 : cmp eax, 0xfffff000 ; ja 0x11f300 ; ret
0x000000000011f42b : cmp eax, 0xfffff000 ; ja 0x11f490 ; ret
0x000000000011f4db : cmp eax, 0xfffff000 ; ja 0x11f540 ; ret
0x000000000011f58b : cmp eax, 0xfffff000 ; ja 0x11f5f0 ; ret
0x000000000011f63b : cmp eax, 0xfffff000 ; ja 0x11f6b8 ; ret
0x000000000011f708 : cmp eax, 0xfffff000 ; ja 0x11f760 ; ret
0x000000000011f834 : cmp eax, 0xfffff000 ; ja 0x11f840 ; ret
0x00000000001200d8 : cmp eax, 0xfffff000 ; ja 0x120130 ; ret
0x00000000001201a8 : cmp eax, 0xfffff000 ; ja 0x120200 ; ret
0x0000000000120311 : cmp eax, 0xfffff000 ; ja 0x120380 ; ret
0x00000000001203cb : cmp eax, 0xfffff000 ; ja 0x120440 ; ret
0x0000000000120488 : cmp eax, 0xfffff000 ; ja 0x1204e0 ; ret
0x0000000000120531 : cmp eax, 0xfffff000 ; ja 0x1205a0 ; ret
0x00000000001205e8 : cmp eax, 0xfffff000 ; ja 0x120640 ; ret
0x000000000012068b : cmp eax, 0xfffff000 ; ja 0x120708 ; ret
0x0000000000120aeb : cmp eax, 0xfffff000 ; ja 0x120b50 ; ret
0x0000000000120b9b : cmp eax, 0xfffff000 ; ja 0x120c08 ; ret
0x0000000000120c4b : cmp eax, 0xfffff000 ; ja 0x120cb0 ; ret
0x0000000000120ebb : cmp eax, 0xfffff000 ; ja 0x120f20 ; ret
0x0000000000120f6b : cmp eax, 0xfffff000 ; ja 0x120fe0 ; ret
0x000000000012101c : cmp eax, 0xfffff000 ; ja 0x121028 ; ret
0x000000000012104c : cmp eax, 0xfffff000 ; ja 0x121058 ; ret
0x000000000012108c : cmp eax, 0xfffff000 ; ja 0x121098 ; ret
0x000000000012115f : cmp eax, 0xfffff000 ; ja 0x121170 ; ret
0x000000000012119c : cmp eax, 0xfffff000 ; ja 0x1211a8 ; ret
0x00000000001211cc : cmp eax, 0xfffff000 ; ja 0x1211d8 ; ret
0x00000000001211ff : cmp eax, 0xfffff000 ; ja 0x121210 ; ret
0x000000000012123c : cmp eax, 0xfffff000 ; ja 0x121248 ; ret
0x000000000012e7ae : cmp eax, 0xfffff000 ; ja 0x12e7c0 ; ret
0x0000000000043411 : cmp eax, 0xfffff000 ; ja 0x43420 ; ret
0x000000000004345d : cmp eax, 0xfffff000 ; ja 0x434b0 ; ret
0x0000000000048228 : cmp eax, 0xfffff000 ; ja 0x48280 ; ret
0x0000000000062e8c : cmp eax, 0xfffff000 ; ja 0x62e98 ; ret
0x0000000000062ebf : cmp eax, 0xfffff000 ; ja 0x62ed0 ; ret
0x00000000000d0dcc : cmp eax, 0xfffff000 ; ja 0xd0dd8 ; ret
0x00000000000d0ee1 : cmp eax, 0xfffff000 ; ja 0xd0ef0 ; ret
0x00000000000d1081 : cmp eax, 0xfffff000 ; ja 0xd1090 ; ret
0x00000000000dd126 : cmp eax, 0xfffff000 ; ja 0xdd130 ; ret
0x00000000000de2bc : cmp eax, 0xfffff000 ; ja 0xde2c8 ; ret
0x00000000000e2c3b : cmp eax, 0xfffff000 ; ja 0xe2ca0 ; ret
0x00000000000e2cee : cmp eax, 0xfffff000 ; ja 0xe2d60 ; ret
0x00000000000e2e48 : cmp eax, 0xfffff000 ; ja 0xe2e80 ; ret
0x000000000010265c : cmp eax, 0xfffff001 ; jae 0x102664 ; ret
0x000000000010268c : cmp eax, 0xfffff001 ; jae 0x102694 ; ret
0x00000000001026bc : cmp eax, 0xfffff001 ; jae 0x1026c4 ; ret
0x00000000001026ec : cmp eax, 0xfffff001 ; jae 0x1026f4 ; ret
0x000000000010271c : cmp eax, 0xfffff001 ; jae 0x102724 ; ret
0x000000000010274c : cmp eax, 0xfffff001 ; jae 0x102754 ; ret
0x000000000010277c : cmp eax, 0xfffff001 ; jae 0x102784 ; ret
0x00000000001027ac : cmp eax, 0xfffff001 ; jae 0x1027b4 ; ret
0x000000000010d3dc : cmp eax, 0xfffff001 ; jae 0x10d3e4 ; ret
0x000000000010da0c : cmp eax, 0xfffff001 ; jae 0x10da14 ; ret
0x000000000010da3c : cmp eax, 0xfffff001 ; jae 0x10da44 ; ret
0x000000000010db6c : cmp eax, 0xfffff001 ; jae 0x10db74 ; ret
0x000000000010db9c : cmp eax, 0xfffff001 ; jae 0x10dba4 ; ret
0x000000000010dc5c : cmp eax, 0xfffff001 ; jae 0x10dc64 ; ret
0x000000000010dc8c : cmp eax, 0xfffff001 ; jae 0x10dc94 ; ret
0x000000000010e57c : cmp eax, 0xfffff001 ; jae 0x10e584 ; ret
0x000000000010e89c : cmp eax, 0xfffff001 ; jae 0x10e8a4 ; ret
0x000000000010e8cc : cmp eax, 0xfffff001 ; jae 0x10e8d4 ; ret
0x000000000010e8fc : cmp eax, 0xfffff001 ; jae 0x10e904 ; ret
0x000000000010e92c : cmp eax, 0xfffff001 ; jae 0x10e934 ; ret
0x000000000010e95c : cmp eax, 0xfffff001 ; jae 0x10e964 ; ret
0x000000000010ea1c : cmp eax, 0xfffff001 ; jae 0x10ea24 ; ret
0x000000000010ea4c : cmp eax, 0xfffff001 ; jae 0x10ea54 ; ret
0x000000000010f36c : cmp eax, 0xfffff001 ; jae 0x10f374 ; ret
0x000000000010f39c : cmp eax, 0xfffff001 ; jae 0x10f3a4 ; ret
0x000000000010f3cc : cmp eax, 0xfffff001 ; jae 0x10f3d4 ; ret
0x000000000010f3ff : cmp eax, 0xfffff001 ; jae 0x10f407 ; ret
0x000000000010fbbc : cmp eax, 0xfffff001 ; jae 0x10fbc4 ; ret
0x000000000010fbef : cmp eax, 0xfffff001 ; jae 0x10fbf7 ; ret
0x000000000010fc1c : cmp eax, 0xfffff001 ; jae 0x10fc24 ; ret
0x000000000010fc4c : cmp eax, 0xfffff001 ; jae 0x10fc54 ; ret
0x000000000010fc7c : cmp eax, 0xfffff001 ; jae 0x10fc84 ; ret
0x000000000010fcaf : cmp eax, 0xfffff001 ; jae 0x10fcb7 ; ret
0x000000000010fcdc : cmp eax, 0xfffff001 ; jae 0x10fce4 ; ret
0x000000000010fd0c : cmp eax, 0xfffff001 ; jae 0x10fd14 ; ret
0x000000000010fd3c : cmp eax, 0xfffff001 ; jae 0x10fd44 ; ret
0x0000000000112faf : cmp eax, 0xfffff001 ; jae 0x112fb7 ; ret
0x0000000000113dec : cmp eax, 0xfffff001 ; jae 0x113df4 ; ret
0x00000000001141ec : cmp eax, 0xfffff001 ; jae 0x1141f4 ; ret
0x00000000001143ac : cmp eax, 0xfffff001 ; jae 0x1143b4 ; ret
0x0000000000114dec : cmp eax, 0xfffff001 ; jae 0x114df4 ; ret
0x0000000000114f3c : cmp eax, 0xfffff001 ; jae 0x114f44 ; ret
0x000000000011513c : cmp eax, 0xfffff001 ; jae 0x115144 ; ret
0x000000000011516c : cmp eax, 0xfffff001 ; jae 0x115174 ; ret
0x000000000011522c : cmp eax, 0xfffff001 ; jae 0x115234 ; ret
0x00000000001152ec : cmp eax, 0xfffff001 ; jae 0x1152f4 ; ret
0x000000000011562c : cmp eax, 0xfffff001 ; jae 0x115634 ; ret
0x000000000011565c : cmp eax, 0xfffff001 ; jae 0x115664 ; ret
0x000000000011568c : cmp eax, 0xfffff001 ; jae 0x115694 ; ret
0x000000000011873e : cmp eax, 0xfffff001 ; jae 0x118746 ; ret
0x000000000011897c : cmp eax, 0xfffff001 ; jae 0x118984 ; ret
0x00000000001189ac : cmp eax, 0xfffff001 ; jae 0x1189b4 ; ret
0x0000000000118a7c : cmp eax, 0xfffff001 ; jae 0x118a84 ; ret
0x0000000000118aac : cmp eax, 0xfffff001 ; jae 0x118ab4 ; ret
0x0000000000118adf : cmp eax, 0xfffff001 ; jae 0x118ae7 ; ret
0x0000000000118b0c : cmp eax, 0xfffff001 ; jae 0x118b14 ; ret
0x0000000000118b3c : cmp eax, 0xfffff001 ; jae 0x118b44 ; ret
0x0000000000118b6c : cmp eax, 0xfffff001 ; jae 0x118b74 ; ret
0x0000000000118b9c : cmp eax, 0xfffff001 ; jae 0x118ba4 ; ret
0x000000000011cd9f : cmp eax, 0xfffff001 ; jae 0x11cda7 ; ret
0x000000000011cdcc : cmp eax, 0xfffff001 ; jae 0x11cdd4 ; ret
0x000000000011cdfc : cmp eax, 0xfffff001 ; jae 0x11ce04 ; ret
0x000000000011ce2f : cmp eax, 0xfffff001 ; jae 0x11ce37 ; ret
0x000000000011ce5f : cmp eax, 0xfffff001 ; jae 0x11ce67 ; ret
0x000000000011ce8c : cmp eax, 0xfffff001 ; jae 0x11ce94 ; ret
0x000000000011cebf : cmp eax, 0xfffff001 ; jae 0x11cec7 ; ret
0x000000000011ceec : cmp eax, 0xfffff001 ; jae 0x11cef4 ; ret
0x000000000011cf1c : cmp eax, 0xfffff001 ; jae 0x11cf24 ; ret
0x000000000011cf4f : cmp eax, 0xfffff001 ; jae 0x11cf57 ; ret
0x000000000011cf7c : cmp eax, 0xfffff001 ; jae 0x11cf84 ; ret
0x000000000011cfaf : cmp eax, 0xfffff001 ; jae 0x11cfb7 ; ret
0x000000000011efec : cmp eax, 0xfffff001 ; jae 0x11eff4 ; ret
0x000000000011f01c : cmp eax, 0xfffff001 ; jae 0x11f024 ; ret
0x000000000011f16c : cmp eax, 0xfffff001 ; jae 0x11f174 ; ret
0x000000000011f1cc : cmp eax, 0xfffff001 ; jae 0x11f1d4 ; ret
0x000000000011f1fc : cmp eax, 0xfffff001 ; jae 0x11f204 ; ret
0x000000000011f32c : cmp eax, 0xfffff001 ; jae 0x11f334 ; ret
0x000000000011f3bf : cmp eax, 0xfffff001 ; jae 0x11f3c7 ; ret
0x000000000011f3ec : cmp eax, 0xfffff001 ; jae 0x11f3f4 ; ret
0x000000000011f90c : cmp eax, 0xfffff001 ; jae 0x11f914 ; ret
0x000000000011f93c : cmp eax, 0xfffff001 ; jae 0x11f944 ; ret
0x000000000011f97f : cmp eax, 0xfffff001 ; jae 0x11f987 ; ret
0x000000000011f9ac : cmp eax, 0xfffff001 ; jae 0x11f9b4 ; ret
0x000000000011f9dc : cmp eax, 0xfffff001 ; jae 0x11f9e4 ; ret
0x000000000011fa0c : cmp eax, 0xfffff001 ; jae 0x11fa14 ; ret
0x000000000011fa3c : cmp eax, 0xfffff001 ; jae 0x11fa44 ; ret
0x000000000011fa6c : cmp eax, 0xfffff001 ; jae 0x11fa74 ; ret
0x000000000011fa9c : cmp eax, 0xfffff001 ; jae 0x11faa4 ; ret
0x000000000011facc : cmp eax, 0xfffff001 ; jae 0x11fad4 ; ret
0x000000000011faff : cmp eax, 0xfffff001 ; jae 0x11fb07 ; ret
0x000000000011fb2c : cmp eax, 0xfffff001 ; jae 0x11fb34 ; ret
0x000000000011fb5f : cmp eax, 0xfffff001 ; jae 0x11fb67 ; ret
0x000000000011fb8c : cmp eax, 0xfffff001 ; jae 0x11fb94 ; ret
0x000000000011fbbc : cmp eax, 0xfffff001 ; jae 0x11fbc4 ; ret
0x000000000011fbec : cmp eax, 0xfffff001 ; jae 0x11fbf4 ; ret
0x000000000011fc1c : cmp eax, 0xfffff001 ; jae 0x11fc24 ; ret
0x000000000011fc4c : cmp eax, 0xfffff001 ; jae 0x11fc54 ; ret
0x000000000011fc7f : cmp eax, 0xfffff001 ; jae 0x11fc87 ; ret
0x000000000011fcaf : cmp eax, 0xfffff001 ; jae 0x11fcb7 ; ret
0x000000000011fcdc : cmp eax, 0xfffff001 ; jae 0x11fce4 ; ret
0x000000000011fd0c : cmp eax, 0xfffff001 ; jae 0x11fd14 ; ret
0x000000000011fd3f : cmp eax, 0xfffff001 ; jae 0x11fd47 ; ret
0x000000000011fd6f : cmp eax, 0xfffff001 ; jae 0x11fd77 ; ret
0x000000000011fd9f : cmp eax, 0xfffff001 ; jae 0x11fda7 ; ret
0x000000000011fdcc : cmp eax, 0xfffff001 ; jae 0x11fdd4 ; ret
0x000000000011fdfc : cmp eax, 0xfffff001 ; jae 0x11fe04 ; ret
0x000000000011fe2c : cmp eax, 0xfffff001 ; jae 0x11fe34 ; ret
0x000000000011fe5c : cmp eax, 0xfffff001 ; jae 0x11fe64 ; ret
0x000000000011fe8f : cmp eax, 0xfffff001 ; jae 0x11fe97 ; ret
0x000000000011febc : cmp eax, 0xfffff001 ; jae 0x11fec4 ; ret
0x000000000011feec : cmp eax, 0xfffff001 ; jae 0x11fef4 ; ret
0x000000000011ff1f : cmp eax, 0xfffff001 ; jae 0x11ff27 ; ret
0x000000000011ff4c : cmp eax, 0xfffff001 ; jae 0x11ff54 ; ret
0x000000000011ff7f : cmp eax, 0xfffff001 ; jae 0x11ff87 ; ret
0x000000000011ffaf : cmp eax, 0xfffff001 ; jae 0x11ffb7 ; ret
0x000000000011ffdc : cmp eax, 0xfffff001 ; jae 0x11ffe4 ; ret
0x000000000012000c : cmp eax, 0xfffff001 ; jae 0x120014 ; ret
0x000000000012003c : cmp eax, 0xfffff001 ; jae 0x120044 ; ret
0x000000000012007c : cmp eax, 0xfffff001 ; jae 0x120084 ; ret
0x000000000012016c : cmp eax, 0xfffff001 ; jae 0x120174 ; ret
0x000000000012023c : cmp eax, 0xfffff001 ; jae 0x120244 ; ret
0x000000000012026c : cmp eax, 0xfffff001 ; jae 0x120274 ; ret
0x000000000012029f : cmp eax, 0xfffff001 ; jae 0x1202a7 ; ret
0x00000000001202cc : cmp eax, 0xfffff001 ; jae 0x1202d4 ; ret
0x000000000012074f : cmp eax, 0xfffff001 ; jae 0x120757 ; ret
0x000000000012077c : cmp eax, 0xfffff001 ; jae 0x120784 ; ret
0x00000000001207ac : cmp eax, 0xfffff001 ; jae 0x1207b4 ; ret
0x00000000001207df : cmp eax, 0xfffff001 ; jae 0x1207e7 ; ret
0x00000000000433dc : cmp eax, 0xfffff001 ; jae 0x433e4 ; ret
0x00000000000439cc : cmp eax, 0xfffff001 ; jae 0x439d4 ; ret
0x0000000000054f02 : cmp eax, 0xfffff001 ; jae 0x54f0c ; xor eax, eax ; ret
0x00000000000d41bc : cmp eax, 0xfffff001 ; jae 0xd41c4 ; ret
0x00000000000d41ec : cmp eax, 0xfffff001 ; jae 0xd41f4 ; ret
0x00000000000e2b4c : cmp eax, 0xfffff001 ; jae 0xe2b54 ; ret
0x00000000000e2d9c : cmp eax, 0xfffff001 ; jae 0xe2da4 ; ret
0x00000000000e317c : cmp eax, 0xfffff001 ; jae 0xe3184 ; ret
0x00000000000e412c : cmp eax, 0xfffff001 ; jae 0xe4134 ; ret
0x00000000000e437c : cmp eax, 0xfffff001 ; jae 0xe4384 ; ret
0x00000000000e43ac : cmp eax, 0xfffff001 ; jae 0xe43b4 ; ret
0x00000000000e440c : cmp eax, 0xfffff001 ; jae 0xe4414 ; ret
0x00000000000e443c : cmp eax, 0xfffff001 ; jae 0xe4444 ; ret
0x00000000000e446c : cmp eax, 0xfffff001 ; jae 0xe4474 ; ret
0x00000000000e449c : cmp eax, 0xfffff001 ; jae 0xe44a4 ; ret
0x00000000000a2222 : cmp eax, 1 ; ja 0xa2200 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117c10 : cmp eax, 1 ; jg 0x117c16 ; ret
0x00000000000bc6f6 : cmp eax, 2 ; je 0xbc708 ; xor eax, eax ; ret
0x0000000000155df5 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000000f1f92 : cmp eax, 3 ; je 0xf1ff0 ; xor eax, eax ; pop rbp ; ret
0x000000000009466e : cmp eax, 4 ; je 0x94674 ; ret
0x000000000005b6aa : cmp eax, 9 ; ja 0x5b680 ; mov rax, r8 ; ret
0x00000000000a2054 : cmp eax, dword ptr [rax] ; je 0xa2068 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001138e4 : cmp eax, dword ptr [rcx - 0x77] ; ret
0x00000000000cef8e : cmp eax, dword ptr [rsi + 0x10] ; jne 0xcf080 ; ret
0x00000000000cefa3 : cmp eax, dword ptr [rsi + 0x14] ; jne 0xcf080 ; ret
0x00000000000cefb8 : cmp eax, dword ptr [rsi + 0x18] ; jne 0xcf080 ; ret
0x00000000000cefd3 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0xcf080 ; ret
0x00000000000cefee : cmp eax, dword ptr [rsi + 0x20] ; jne 0xcf080 ; ret
0x00000000000cf003 : cmp eax, dword ptr [rsi + 0x24] ; jne 0xcf080 ; ret
0x00000000000cf018 : cmp eax, dword ptr [rsi + 0x28] ; jne 0xcf080 ; ret
0x00000000000cf023 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0xcf080 ; ret
0x00000000000cf03e : cmp eax, dword ptr [rsi + 0x30] ; jne 0xcf080 ; ret
0x00000000000cf053 : cmp eax, dword ptr [rsi + 0x34] ; jne 0xcf080 ; ret
0x00000000000cf068 : cmp eax, dword ptr [rsi + 0x38] ; jne 0xcf080 ; ret
0x00000000000cf073 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0xcf080 ; ret
0x00000000000cef73 : cmp eax, dword ptr [rsi + 0xc] ; jne 0xcf080 ; ret
0x00000000000cef43 : cmp eax, dword ptr [rsi + 4] ; jne 0xcf080 ; ret
0x00000000000cef58 : cmp eax, dword ptr [rsi + 8] ; jne 0xcf080 ; ret
0x0000000000192aaa : cmp eax, dword ptr [rsi - 0x10] ; jne 0x192be0 ; ret
0x0000000000192ac3 : cmp eax, dword ptr [rsi - 0xc] ; jne 0x192be0 ; ret
0x0000000000192af3 : cmp eax, dword ptr [rsi - 4] ; jne 0x192be0 ; ret
0x0000000000192bd3 : cmp eax, dword ptr [rsi - 4] ; jne 0x192be0 ; xor eax, eax ; ret
0x0000000000192ad8 : cmp eax, dword ptr [rsi - 8] ; jne 0x192be0 ; ret
0x00000000000cef2d : cmp eax, dword ptr [rsi] ; jne 0xcf080 ; ret
0x00000000000e4f57 : cmp eax, eax ; jne 0xe4fcd ; mov eax, 0x7d00 ; ret
0x00000000000a88a2 : cmp eax, ecx ; je 0xa8888 ; mov rax, r8 ; ret
0x00000000000cf158 : cmp eax, ecx ; jne 0xcf160 ; mov eax, r9d ; ret
0x00000000001925c3 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000013b90c : cmp eax, edi ; jae 0x13b923 ; mov eax, 0xffffffff ; ret
0x000000000005b39e : cmp eax, edi ; jae 0x5b350 ; mov rax, r10 ; pop rbx ; ret
0x000000000009397f : cmp eax, edx ; jae 0x939a8 ; movzx eax, byte ptr [rax] ; ret
0x000000000013b94a : cmp eax, edx ; jne 0x13b920 ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000a87b1 : cmp eax, edx ; jne 0xa87a0 ; mov rax, r8 ; ret
0x0000000000087dea : cmp eax, esi ; ja 0x87de0 ; lea eax, [rdx + rdi] ; ret
0x000000000012765d : cmp eax, esi ; jb 0x127670 ; mov eax, 1 ; ret
0x00000000000a877d : cmp eax, esi ; jne 0xa8770 ; mov rax, r8 ; ret
0x000000000006d067 : cmp ebp, eax ; ret
0x000000000015193a : cmp ebp, ebx ; ret
0x000000000013e887 : cmp ebp, esi ; dec dword ptr [rax - 0x77] ; ret
0x000000000009460a : cmp ebx, 0xa ; je 0x94610 ; ret
0x000000000009517e : cmp ebx, eax ; je 0x95185 ; pop rbx ; pop rbp ; ret
0x000000000010c55c : cmp ebx, eax ; pop rbx ; setl al ; ret
0x0000000000099eac : cmp ebx, ebp ; jne 0x99e90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013f07d : cmp ebx, ecx ; jg 0x13f036 ; mov byte ptr [r10], 0 ; ret
0x00000000000dd815 : cmp ebx, esp ; jne 0xdd800 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000056524 : cmp ecx, -1 ; jne 0x56518 ; mov rax, rdx ; ret
0x00000000000a15f5 : cmp ecx, 0xd ; je 0xa15fe ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x000000000015d234 : cmp ecx, 3 ; jbe 0x15d240 ; ret
0x0000000000024d88 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000102a3c : cmp ecx, dword ptr [rax - 0xc] ; jne 0x102a30 ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000018c31a : cmp ecx, dword ptr [rsi + rdx + 0x20] ; jne 0x18c2f9 ; vzeroupper ; ret
0x000000000018c33a : cmp ecx, dword ptr [rsi + rdx + 0x40] ; jne 0x18c2f9 ; vzeroupper ; ret
0x000000000018c35a : cmp ecx, dword ptr [rsi + rdx + 0x60] ; jne 0x18c2f9 ; vzeroupper ; ret
0x000000000018c796 : cmp ecx, dword ptr [rsi + rdx] ; jne 0x18c769 ; vzeroupper ; ret
0x000000000018eb2b : cmp ecx, eax ; jne 0x18eb53 ; xor eax, eax ; ret
0x000000000018f96b : cmp ecx, eax ; jne 0x18f993 ; xor eax, eax ; ret
0x000000000018f99f : cmp ecx, eax ; jne 0x18f9a6 ; xor eax, eax ; ret
0x00000000000a8850 : cmp ecx, edx ; je 0xa8848 ; cmp ecx, esi ; je 0xa8848 ; ret
0x000000000010fd84 : cmp ecx, edx ; seta al ; sbb eax, 0 ; ret
0x0000000000092a1a : cmp ecx, esi ; ja 0x92a10 ; lea eax, [rdx + rdi] ; ret
0x00000000000a8854 : cmp ecx, esi ; je 0xa8848 ; ret
0x00000000000a88d0 : cmp ecx, esi ; jne 0xa88c0 ; ret
0x000000000011429e : cmp edi, eax ; ja 0x1142c8 ; xor eax, eax ; ret
0x00000000000482f5 : cmp edi, eax ; jb 0x482d5 ; xor eax, eax ; ret
0x000000000005b333 : cmp edi, eax ; jbe 0x5b32a ; mov rax, r10 ; ret
0x000000000005ea21 : cmp edi, ecx ; ja 0x5ea08 ; mov eax, r8d ; ret
0x00000000000bbb5b : cmp edi, edx ; jb 0xbbb62 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000011d006 : cmp edi, edx ; jne 0x11cff8 ; mov rax, qword ptr [rax + 8] ; ret
0x000000000010d1c9 : cmp edi, esi ; ja 0x10d1b8 ; mov eax, r8d ; ret
0x0000000000094c67 : cmp edi, esi ; sete al ; ret
0x00000000000e51be : cmp edx, 0x1badface ; setne al ; ret
0x00000000000e51d9 : cmp edx, 0x1cd1 ; setne al ; ret
0x00000000000d4235 : cmp edx, 0x28f5c28 ; jbe 0xd4240 ; ret
0x00000000000e51a6 : cmp edx, 0x5346544e ; setne al ; ret
0x000000000012faf9 : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x00000000000e518a : cmp edx, 0xadf5 ; setne al ; ret
0x0000000000102a0f : cmp edx, 2 ; je 0x102a18 ; ret
0x000000000018bda4 : cmp edx, dword ptr [rsi] ; jne 0x18bd8c ; ret
0x000000000013b88a : cmp edx, eax ; sbb eax, eax ; ret
0x0000000000148c93 : cmp edx, ebp ; add byte ptr [rax], al ; mov rax, r12 ; pop r12 ; ret
0x000000000005b626 : cmp edx, ecx ; jae 0x5b60c ; mov rax, r8 ; ret
0x000000000018388a : cmp edx, ecx ; jle 0x1838a4 ; movsxd rax, ecx ; ret
0x0000000000183b0c : cmp edx, ecx ; jle 0x183bb0 ; ret
0x000000000018bc16 : cmp edx, ecx ; jne 0x18bbfb ; vzeroupper ; ret
0x0000000000190ad9 : cmp edx, ecx ; jne 0x190ab6 ; vzeroupper ; ret
0x00000000000bc02f : cmp edx, ecx ; jne 0xbc017 ; repz ret
0x000000000015d220 : cmp edx, ecx ; sete al ; ret
0x0000000000094192 : cmp edx, edi ; setae al ; ret
0x00000000000a8818 : cmp edx, esi ; je 0xa8810 ; ret
0x00000000000bdfb7 : cmp edx, esi ; je 0xbdfbf ; test edx, edx ; jne 0xbdfb0 ; ret
0x000000000013c572 : cmp esi, 0x80 ; cmovb eax, edx ; ret
0x00000000000dcfa4 : cmp esi, 1 ; je 0xdcfb0 ; xor eax, eax ; ret
0x000000000008ce5d : cmp esi, 2 ; cmovne edx, ecx ; mov dword ptr [rdi], edx ; ret
0x000000000002fd88 : cmp esi, 3 ; je 0x2fd90 ; ret
0x000000000018cca0 : cmp esi, dword ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x00000000001492a2 : cmp esi, dword ptr [rdx + 0x28] ; ja 0x149290 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000018b749 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000013c430 : cmp esi, eax ; ja 0x13c41c ; mov eax, 0xffffffff ; ret
0x000000000008749b : cmp qword ptr [rax + 0x30], 0 ; je 0x874a8 ; ret
0x000000000015376c : cmp qword ptr [rax], rbx ; je 0x153780 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000091e84 : cmp qword ptr [rdi + 0x38], 0 ; je 0x91e90 ; ret
0x000000000009ef1e : cmp qword ptr [rdi + 8], rsi ; jb 0x9ef30 ; mov qword ptr [rdi], rsi ; ret
0x000000000012cedb : cmp qword ptr [rdi], 0 ; je 0x12cef0 ; ret
0x000000000008a720 : cmp qword ptr [rdx + 0x48], r8 ; cmovne eax, ecx ; ret
0x0000000000023a6e : cmp qword ptr [rdx + 0xd8], rax ; jne 0x23a3b ; ret
0x0000000000094609 : cmp r11d, 0xa ; je 0x94610 ; ret
0x000000000013f07c : cmp r11d, r9d ; jg 0x13f036 ; mov byte ptr [r10], 0 ; ret
0x0000000000055c3f : cmp r8, -8 ; jne 0x55c30 ; mov rax, rdx ; ret
0x00000000000e4f44 : cmp r8, 0x58465342 ; jne 0xe4f50 ; ret
0x000000000010c16a : cmp rax, -0x1000 ; ja 0x10c1d0 ; ret
0x000000000010c21a : cmp rax, -0x1000 ; ja 0x10c280 ; ret
0x000000000010d4ba : cmp rax, -0x1000 ; ja 0x10d4c8 ; ret
0x000000000010d519 : cmp rax, -0x1000 ; ja 0x10d528 ; ret
0x000000000010d57a : cmp rax, -0x1000 ; ja 0x10d588 ; ret
0x000000000010d902 : cmp rax, -0x1000 ; ja 0x10d910 ; ret
0x000000000010d965 : cmp rax, -0x1000 ; ja 0x10d970 ; ret
0x000000000010d9bf : cmp rax, -0x1000 ; ja 0x10d9d0 ; ret
0x000000000010dbf8 : cmp rax, -0x1000 ; ja 0x10dc08 ; ret
0x000000000010dfd2 : cmp rax, -0x1000 ; ja 0x10e030 ; ret
0x000000000010e077 : cmp rax, -0x1000 ; ja 0x10e0d0 ; ret
0x000000000010e10b : cmp rax, -0x1000 ; ja 0x10e118 ; ret
0x000000000010e13b : cmp rax, -0x1000 ; ja 0x10e148 ; ret
0x000000000010e817 : cmp rax, -0x1000 ; ja 0x10e860 ; ret
0x000000000010e997 : cmp rax, -0x1000 ; ja 0x10e9e0 ; ret
0x0000000000112967 : cmp rax, -0x1000 ; ja 0x1129c0 ; ret
0x0000000000112fea : cmp rax, -0x1000 ; ja 0x113068 ; ret
0x00000000001130ae : cmp rax, -0x1000 ; ja 0x1130c0 ; ret
0x00000000001130f3 : cmp rax, -0x1000 ; ja 0x113100 ; ret
0x00000000001131fa : cmp rax, -0x1000 ; ja 0x113260 ; ret
0x00000000001132aa : cmp rax, -0x1000 ; ja 0x113310 ; ret
0x000000000011334b : cmp rax, -0x1000 ; ja 0x113358 ; ret
0x0000000000113608 : cmp rax, -0x1000 ; ja 0x113618 ; ret
0x000000000011363e : cmp rax, -0x1000 ; ja 0x113650 ; ret
0x000000000011367b : cmp rax, -0x1000 ; ja 0x113688 ; ret
0x0000000000113b61 : cmp rax, -0x1000 ; ja 0x113bb8 ; ret
0x0000000000113d74 : cmp rax, -0x1000 ; ja 0x113d80 ; ret
0x0000000000113db5 : cmp rax, -0x1000 ; ja 0x113dc0 ; ret
0x00000000001143e7 : cmp rax, -0x1000 ; ja 0x114440 ; ret
0x0000000000114487 : cmp rax, -0x1000 ; ja 0x1144e0 ; ret
0x000000000011452d : cmp rax, -0x1000 ; ja 0x114598 ; ret
0x00000000001145ed : cmp rax, -0x1000 ; ja 0x114658 ; ret
0x0000000000114f7a : cmp rax, -0x1000 ; ja 0x114ff0 ; ret
0x00000000001151a7 : cmp rax, -0x1000 ; ja 0x1151f0 ; ret
0x0000000000115267 : cmp rax, -0x1000 ; ja 0x1152b0 ; ret
0x0000000000115327 : cmp rax, -0x1000 ; ja 0x115330 ; ret
0x0000000000116aab : cmp rax, -0x1000 ; ja 0x116ab8 ; ret
0x0000000000116c90 : cmp rax, -0x1000 ; ja 0x116ca0 ; ret
0x0000000000116ccb : cmp rax, -0x1000 ; ja 0x116cd8 ; ret
0x0000000000116cfb : cmp rax, -0x1000 ; ja 0x116d08 ; ret
0x00000000001189e7 : cmp rax, -0x1000 ; ja 0x118a40 ; ret
0x000000000011c4c2 : cmp rax, -0x1000 ; ja 0x11c4d0 ; ret
0x000000000011f19b : cmp rax, -0x1000 ; ja 0x11f1a8 ; ret
0x000000000011f240 : cmp rax, -0x1000 ; ja 0x11f2b8 ; ret
0x000000000011f2f3 : cmp rax, -0x1000 ; ja 0x11f300 ; ret
0x000000000011f42a : cmp rax, -0x1000 ; ja 0x11f490 ; ret
0x000000000011f4da : cmp rax, -0x1000 ; ja 0x11f540 ; ret
0x000000000011f58a : cmp rax, -0x1000 ; ja 0x11f5f0 ; ret
0x000000000011f63a : cmp rax, -0x1000 ; ja 0x11f6b8 ; ret
0x000000000011f707 : cmp rax, -0x1000 ; ja 0x11f760 ; ret
0x000000000011f833 : cmp rax, -0x1000 ; ja 0x11f840 ; ret
0x00000000001200d7 : cmp rax, -0x1000 ; ja 0x120130 ; ret
0x00000000001201a7 : cmp rax, -0x1000 ; ja 0x120200 ; ret
0x0000000000120310 : cmp rax, -0x1000 ; ja 0x120380 ; ret
0x00000000001203ca : cmp rax, -0x1000 ; ja 0x120440 ; ret
0x0000000000120487 : cmp rax, -0x1000 ; ja 0x1204e0 ; ret
0x0000000000120530 : cmp rax, -0x1000 ; ja 0x1205a0 ; ret
0x00000000001205e7 : cmp rax, -0x1000 ; ja 0x120640 ; ret
0x000000000012068a : cmp rax, -0x1000 ; ja 0x120708 ; ret
0x0000000000120aea : cmp rax, -0x1000 ; ja 0x120b50 ; ret
0x0000000000120b9a : cmp rax, -0x1000 ; ja 0x120c08 ; ret
0x0000000000120c4a : cmp rax, -0x1000 ; ja 0x120cb0 ; ret
0x0000000000120eba : cmp rax, -0x1000 ; ja 0x120f20 ; ret
0x0000000000120f6a : cmp rax, -0x1000 ; ja 0x120fe0 ; ret
0x000000000012101b : cmp rax, -0x1000 ; ja 0x121028 ; ret
0x000000000012104b : cmp rax, -0x1000 ; ja 0x121058 ; ret
0x000000000012108b : cmp rax, -0x1000 ; ja 0x121098 ; ret
0x000000000012115e : cmp rax, -0x1000 ; ja 0x121170 ; ret
0x000000000012119b : cmp rax, -0x1000 ; ja 0x1211a8 ; ret
0x00000000001211cb : cmp rax, -0x1000 ; ja 0x1211d8 ; ret
0x00000000001211fe : cmp rax, -0x1000 ; ja 0x121210 ; ret
0x000000000012123b : cmp rax, -0x1000 ; ja 0x121248 ; ret
0x000000000012e7ad : cmp rax, -0x1000 ; ja 0x12e7c0 ; ret
0x0000000000043410 : cmp rax, -0x1000 ; ja 0x43420 ; ret
0x000000000004345c : cmp rax, -0x1000 ; ja 0x434b0 ; ret
0x0000000000048227 : cmp rax, -0x1000 ; ja 0x48280 ; ret
0x0000000000062e8b : cmp rax, -0x1000 ; ja 0x62e98 ; ret
0x0000000000062ebe : cmp rax, -0x1000 ; ja 0x62ed0 ; ret
0x00000000000d0dcb : cmp rax, -0x1000 ; ja 0xd0dd8 ; ret
0x00000000000d0ee0 : cmp rax, -0x1000 ; ja 0xd0ef0 ; ret
0x00000000000d1080 : cmp rax, -0x1000 ; ja 0xd1090 ; ret
0x00000000000dd125 : cmp rax, -0x1000 ; ja 0xdd130 ; ret
0x00000000000de2bb : cmp rax, -0x1000 ; ja 0xde2c8 ; ret
0x00000000000e2c3a : cmp rax, -0x1000 ; ja 0xe2ca0 ; ret
0x00000000000e2ced : cmp rax, -0x1000 ; ja 0xe2d60 ; ret
0x00000000000e2e47 : cmp rax, -0x1000 ; ja 0xe2e80 ; ret
0x000000000010265b : cmp rax, -0xfff ; jae 0x102664 ; ret
0x000000000010268b : cmp rax, -0xfff ; jae 0x102694 ; ret
0x00000000001026bb : cmp rax, -0xfff ; jae 0x1026c4 ; ret
0x00000000001026eb : cmp rax, -0xfff ; jae 0x1026f4 ; ret
0x000000000010271b : cmp rax, -0xfff ; jae 0x102724 ; ret
0x000000000010274b : cmp rax, -0xfff ; jae 0x102754 ; ret
0x000000000010277b : cmp rax, -0xfff ; jae 0x102784 ; ret
0x00000000001027ab : cmp rax, -0xfff ; jae 0x1027b4 ; ret
0x000000000010d3db : cmp rax, -0xfff ; jae 0x10d3e4 ; ret
0x000000000010da0b : cmp rax, -0xfff ; jae 0x10da14 ; ret
0x000000000010da3b : cmp rax, -0xfff ; jae 0x10da44 ; ret
0x000000000010db6b : cmp rax, -0xfff ; jae 0x10db74 ; ret
0x000000000010db9b : cmp rax, -0xfff ; jae 0x10dba4 ; ret
0x000000000010dc5b : cmp rax, -0xfff ; jae 0x10dc64 ; ret
0x000000000010dc8b : cmp rax, -0xfff ; jae 0x10dc94 ; ret
0x000000000010e57b : cmp rax, -0xfff ; jae 0x10e584 ; ret
0x000000000010e89b : cmp rax, -0xfff ; jae 0x10e8a4 ; ret
0x000000000010e8cb : cmp rax, -0xfff ; jae 0x10e8d4 ; ret
0x000000000010e8fb : cmp rax, -0xfff ; jae 0x10e904 ; ret
0x000000000010e92b : cmp rax, -0xfff ; jae 0x10e934 ; ret
0x000000000010e95b : cmp rax, -0xfff ; jae 0x10e964 ; ret
0x000000000010ea1b : cmp rax, -0xfff ; jae 0x10ea24 ; ret
0x000000000010ea4b : cmp rax, -0xfff ; jae 0x10ea54 ; ret
0x000000000010f36b : cmp rax, -0xfff ; jae 0x10f374 ; ret
0x000000000010f39b : cmp rax, -0xfff ; jae 0x10f3a4 ; ret
0x000000000010f3cb : cmp rax, -0xfff ; jae 0x10f3d4 ; ret
0x000000000010f3fe : cmp rax, -0xfff ; jae 0x10f407 ; ret
0x000000000010fbbb : cmp rax, -0xfff ; jae 0x10fbc4 ; ret
0x000000000010fbee : cmp rax, -0xfff ; jae 0x10fbf7 ; ret
0x000000000010fc1b : cmp rax, -0xfff ; jae 0x10fc24 ; ret
0x000000000010fc4b : cmp rax, -0xfff ; jae 0x10fc54 ; ret
0x000000000010fc7b : cmp rax, -0xfff ; jae 0x10fc84 ; ret
0x000000000010fcae : cmp rax, -0xfff ; jae 0x10fcb7 ; ret
0x000000000010fcdb : cmp rax, -0xfff ; jae 0x10fce4 ; ret
0x000000000010fd0b : cmp rax, -0xfff ; jae 0x10fd14 ; ret
0x000000000010fd3b : cmp rax, -0xfff ; jae 0x10fd44 ; ret
0x0000000000112fae : cmp rax, -0xfff ; jae 0x112fb7 ; ret
0x0000000000113deb : cmp rax, -0xfff ; jae 0x113df4 ; ret
0x00000000001141eb : cmp rax, -0xfff ; jae 0x1141f4 ; ret
0x00000000001143ab : cmp rax, -0xfff ; jae 0x1143b4 ; ret
0x0000000000114deb : cmp rax, -0xfff ; jae 0x114df4 ; ret
0x0000000000114f3b : cmp rax, -0xfff ; jae 0x114f44 ; ret
0x000000000011513b : cmp rax, -0xfff ; jae 0x115144 ; ret
0x000000000011516b : cmp rax, -0xfff ; jae 0x115174 ; ret
0x000000000011522b : cmp rax, -0xfff ; jae 0x115234 ; ret
0x00000000001152eb : cmp rax, -0xfff ; jae 0x1152f4 ; ret
0x000000000011562b : cmp rax, -0xfff ; jae 0x115634 ; ret
0x000000000011565b : cmp rax, -0xfff ; jae 0x115664 ; ret
0x000000000011568b : cmp rax, -0xfff ; jae 0x115694 ; ret
0x000000000011873d : cmp rax, -0xfff ; jae 0x118746 ; ret
0x000000000011897b : cmp rax, -0xfff ; jae 0x118984 ; ret
0x00000000001189ab : cmp rax, -0xfff ; jae 0x1189b4 ; ret
0x0000000000118a7b : cmp rax, -0xfff ; jae 0x118a84 ; ret
0x0000000000118aab : cmp rax, -0xfff ; jae 0x118ab4 ; ret
0x0000000000118ade : cmp rax, -0xfff ; jae 0x118ae7 ; ret
0x0000000000118b0b : cmp rax, -0xfff ; jae 0x118b14 ; ret
0x0000000000118b3b : cmp rax, -0xfff ; jae 0x118b44 ; ret
0x0000000000118b6b : cmp rax, -0xfff ; jae 0x118b74 ; ret
0x0000000000118b9b : cmp rax, -0xfff ; jae 0x118ba4 ; ret
0x000000000011cd9e : cmp rax, -0xfff ; jae 0x11cda7 ; ret
0x000000000011cdcb : cmp rax, -0xfff ; jae 0x11cdd4 ; ret
0x000000000011cdfb : cmp rax, -0xfff ; jae 0x11ce04 ; ret
0x000000000011ce2e : cmp rax, -0xfff ; jae 0x11ce37 ; ret
0x000000000011ce5e : cmp rax, -0xfff ; jae 0x11ce67 ; ret
0x000000000011ce8b : cmp rax, -0xfff ; jae 0x11ce94 ; ret
0x000000000011cebe : cmp rax, -0xfff ; jae 0x11cec7 ; ret
0x000000000011ceeb : cmp rax, -0xfff ; jae 0x11cef4 ; ret
0x000000000011cf1b : cmp rax, -0xfff ; jae 0x11cf24 ; ret
0x000000000011cf4e : cmp rax, -0xfff ; jae 0x11cf57 ; ret
0x000000000011cf7b : cmp rax, -0xfff ; jae 0x11cf84 ; ret
0x000000000011cfae : cmp rax, -0xfff ; jae 0x11cfb7 ; ret
0x000000000011efeb : cmp rax, -0xfff ; jae 0x11eff4 ; ret
0x000000000011f01b : cmp rax, -0xfff ; jae 0x11f024 ; ret
0x000000000011f16b : cmp rax, -0xfff ; jae 0x11f174 ; ret
0x000000000011f1cb : cmp rax, -0xfff ; jae 0x11f1d4 ; ret
0x000000000011f1fb : cmp rax, -0xfff ; jae 0x11f204 ; ret
0x000000000011f32b : cmp rax, -0xfff ; jae 0x11f334 ; ret
0x000000000011f3be : cmp rax, -0xfff ; jae 0x11f3c7 ; ret
0x000000000011f3eb : cmp rax, -0xfff ; jae 0x11f3f4 ; ret
0x000000000011f90b : cmp rax, -0xfff ; jae 0x11f914 ; ret
0x000000000011f93b : cmp rax, -0xfff ; jae 0x11f944 ; ret
0x000000000011f97e : cmp rax, -0xfff ; jae 0x11f987 ; ret
0x000000000011f9ab : cmp rax, -0xfff ; jae 0x11f9b4 ; ret
0x000000000011f9db : cmp rax, -0xfff ; jae 0x11f9e4 ; ret
0x000000000011fa0b : cmp rax, -0xfff ; jae 0x11fa14 ; ret
0x000000000011fa3b : cmp rax, -0xfff ; jae 0x11fa44 ; ret
0x000000000011fa6b : cmp rax, -0xfff ; jae 0x11fa74 ; ret
0x000000000011fa9b : cmp rax, -0xfff ; jae 0x11faa4 ; ret
0x000000000011facb : cmp rax, -0xfff ; jae 0x11fad4 ; ret
0x000000000011fafe : cmp rax, -0xfff ; jae 0x11fb07 ; ret
0x000000000011fb2b : cmp rax, -0xfff ; jae 0x11fb34 ; ret
0x000000000011fb5e : cmp rax, -0xfff ; jae 0x11fb67 ; ret
0x000000000011fb8b : cmp rax, -0xfff ; jae 0x11fb94 ; ret
0x000000000011fbbb : cmp rax, -0xfff ; jae 0x11fbc4 ; ret
0x000000000011fbeb : cmp rax, -0xfff ; jae 0x11fbf4 ; ret
0x000000000011fc1b : cmp rax, -0xfff ; jae 0x11fc24 ; ret
0x000000000011fc4b : cmp rax, -0xfff ; jae 0x11fc54 ; ret
0x000000000011fc7e : cmp rax, -0xfff ; jae 0x11fc87 ; ret
0x000000000011fcae : cmp rax, -0xfff ; jae 0x11fcb7 ; ret
0x000000000011fcdb : cmp rax, -0xfff ; jae 0x11fce4 ; ret
0x000000000011fd0b : cmp rax, -0xfff ; jae 0x11fd14 ; ret
0x000000000011fd3e : cmp rax, -0xfff ; jae 0x11fd47 ; ret
0x000000000011fd6e : cmp rax, -0xfff ; jae 0x11fd77 ; ret
0x000000000011fd9e : cmp rax, -0xfff ; jae 0x11fda7 ; ret
0x000000000011fdcb : cmp rax, -0xfff ; jae 0x11fdd4 ; ret
0x000000000011fdfb : cmp rax, -0xfff ; jae 0x11fe04 ; ret
0x000000000011fe2b : cmp rax, -0xfff ; jae 0x11fe34 ; ret
0x000000000011fe5b : cmp rax, -0xfff ; jae 0x11fe64 ; ret
0x000000000011fe8e : cmp rax, -0xfff ; jae 0x11fe97 ; ret
0x000000000011febb : cmp rax, -0xfff ; jae 0x11fec4 ; ret
0x000000000011feeb : cmp rax, -0xfff ; jae 0x11fef4 ; ret
0x000000000011ff1e : cmp rax, -0xfff ; jae 0x11ff27 ; ret
0x000000000011ff4b : cmp rax, -0xfff ; jae 0x11ff54 ; ret
0x000000000011ff7e : cmp rax, -0xfff ; jae 0x11ff87 ; ret
0x000000000011ffae : cmp rax, -0xfff ; jae 0x11ffb7 ; ret
0x000000000011ffdb : cmp rax, -0xfff ; jae 0x11ffe4 ; ret
0x000000000012000b : cmp rax, -0xfff ; jae 0x120014 ; ret
0x000000000012003b : cmp rax, -0xfff ; jae 0x120044 ; ret
0x000000000012007b : cmp rax, -0xfff ; jae 0x120084 ; ret
0x000000000012016b : cmp rax, -0xfff ; jae 0x120174 ; ret
0x000000000012023b : cmp rax, -0xfff ; jae 0x120244 ; ret
0x000000000012026b : cmp rax, -0xfff ; jae 0x120274 ; ret
0x000000000012029e : cmp rax, -0xfff ; jae 0x1202a7 ; ret
0x00000000001202cb : cmp rax, -0xfff ; jae 0x1202d4 ; ret
0x000000000012074e : cmp rax, -0xfff ; jae 0x120757 ; ret
0x000000000012077b : cmp rax, -0xfff ; jae 0x120784 ; ret
0x00000000001207ab : cmp rax, -0xfff ; jae 0x1207b4 ; ret
0x00000000001207de : cmp rax, -0xfff ; jae 0x1207e7 ; ret
0x00000000000433db : cmp rax, -0xfff ; jae 0x433e4 ; ret
0x00000000000439cb : cmp rax, -0xfff ; jae 0x439d4 ; ret
0x00000000000d41bb : cmp rax, -0xfff ; jae 0xd41c4 ; ret
0x00000000000d41eb : cmp rax, -0xfff ; jae 0xd41f4 ; ret
0x00000000000e2b4b : cmp rax, -0xfff ; jae 0xe2b54 ; ret
0x00000000000e2d9b : cmp rax, -0xfff ; jae 0xe2da4 ; ret
0x00000000000e317b : cmp rax, -0xfff ; jae 0xe3184 ; ret
0x00000000000e412b : cmp rax, -0xfff ; jae 0xe4134 ; ret
0x00000000000e437b : cmp rax, -0xfff ; jae 0xe4384 ; ret
0x00000000000e43ab : cmp rax, -0xfff ; jae 0xe43b4 ; ret
0x00000000000e440b : cmp rax, -0xfff ; jae 0xe4414 ; ret
0x00000000000e443b : cmp rax, -0xfff ; jae 0xe4444 ; ret
0x00000000000e446b : cmp rax, -0xfff ; jae 0xe4474 ; ret
0x00000000000e449b : cmp rax, -0xfff ; jae 0xe44a4 ; ret
0x00000000000951f7 : cmp rax, 0x2000000 ; jbe 0x95200 ; ret
0x0000000000094e47 : cmp rax, 0x408 ; jbe 0x94e50 ; ret
0x0000000000095257 : cmp rax, 0xa0 ; jbe 0x95260 ; ret
0x0000000000094e87 : cmp rax, 0xffff ; jbe 0x94e90 ; ret
0x000000000005b6a9 : cmp rax, 9 ; ja 0x5b680 ; mov rax, r8 ; ret
0x000000000005b39d : cmp rax, rdi ; jae 0x5b350 ; mov rax, r10 ; pop rbx ; ret
0x000000000009397e : cmp rax, rdx ; jae 0x939a8 ; movzx eax, byte ptr [rax] ; ret
0x0000000000087de9 : cmp rax, rsi ; ja 0x87de0 ; lea eax, [rdx + rdi] ; ret
0x00000000000dd814 : cmp rbx, r12 ; jne 0xdd800 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009517d : cmp rbx, rax ; je 0x95185 ; pop rbx ; pop rbp ; ret
0x000000000010c55b : cmp rbx, rax ; pop rbx ; setl al ; ret
0x0000000000099eab : cmp rbx, rbp ; jne 0x99e90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000056523 : cmp rcx, -1 ; jne 0x56518 ; mov rax, rdx ; ret
0x000000000018eb2a : cmp rcx, rax ; jne 0x18eb53 ; xor eax, eax ; ret
0x000000000018f96a : cmp rcx, rax ; jne 0x18f993 ; xor eax, eax ; ret
0x000000000010fd83 : cmp rcx, rdx ; seta al ; sbb eax, 0 ; ret
0x0000000000092a19 : cmp rcx, rsi ; ja 0x92a10 ; lea eax, [rdx + rdi] ; ret
0x00000000000482f4 : cmp rdi, r8 ; jb 0x482d5 ; xor eax, eax ; ret
0x000000000011429d : cmp rdi, rax ; ja 0x1142c8 ; xor eax, eax ; ret
0x000000000005b332 : cmp rdi, rax ; jbe 0x5b32a ; mov rax, r10 ; ret
0x00000000000bbb5a : cmp rdi, rdx ; jb 0xbbb62 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000011d005 : cmp rdi, rdx ; jne 0x11cff8 ; mov rax, qword ptr [rax + 8] ; ret
0x000000000010d1c8 : cmp rdi, rsi ; ja 0x10d1b8 ; mov eax, r8d ; ret
0x0000000000094c66 : cmp rdi, rsi ; sete al ; ret
0x000000000013b889 : cmp rdx, rax ; sbb eax, eax ; ret
0x000000000005b625 : cmp rdx, rcx ; jae 0x5b60c ; mov rax, r8 ; ret
0x000000000018bc15 : cmp rdx, rcx ; jne 0x18bbfb ; vzeroupper ; ret
0x0000000000190ad8 : cmp rdx, rcx ; jne 0x190ab6 ; vzeroupper ; ret
0x00000000000bc02e : cmp rdx, rcx ; jne 0xbc017 ; repz ret
0x0000000000094191 : cmp rdx, rdi ; setae al ; ret
0x0000000000129476 : cmp sil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000001294e7 : cmp sil, cl ; cmovne eax, edx ; ret
0x000000000018e5a9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000000d33a6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; lodsd eax, dword ptr [rsi] ; sti ; dec dword ptr [rax + 0x39] ; ret
0x0000000000121c7a : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000095530 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rsp, 8 ; ret
0x00000000000b4220 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000121c49 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000121c23 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000014638a : cmpsd dword ptr [rsi], dword ptr [rdi] ; or al, byte ptr [rax] ; add rsp, 8 ; ret
0x00000000001463b6 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or al, byte ptr [rax] ; ret
0x00000000000760b5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000000000121c22 : cmpsd dword ptr ss:[rsi], dword ptr [rdi] ; or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000047347 : cqo ; idiv rsi ; ret
0x0000000000047307 : cqo ; xor rax, rdx ; sub rax, rdx ; ret
0x0000000000153770 : cvtdq2ps xmm3, xmmword ptr [rbp + 0x41] ; pop rsp ; ret
0x00000000000436c6 : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000f1600 : cwde ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000094d05 : cwde ; mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000bce3b : cwde ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004c644 : cwde ; ret
0x00000000001905d1 : dec byte ptr [rax + 0x7f] ; jl 0x1905ed ; cld ; vzeroupper ; ret
0x0000000000098248 : dec byte ptr [rax - 0x73] ; ret
0x000000000003746d : dec byte ptr [rax - 0x77] ; ret
0x00000000000dc03c : dec byte ptr [rax - 0x7d] ; ret
0x0000000000119c88 : dec byte ptr [rbp - 0x75] ; pop rdx ; or byte ptr [rcx - 0xa], al ; ret
0x000000000018b2f1 : dec byte ptr [rdx - 0x73] ; add al, 7 ; vzeroupper ; ret
0x0000000000031761 : dec dword ptr [r15] ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000037e25 : dec dword ptr [rax + 0x29] ; ret
0x0000000000029e09 : dec dword ptr [rax + 0x3948074a] ; ret
0x00000000000408aa : dec dword ptr [rax + 0x39] ; ret
0x0000000000031268 : dec dword ptr [rax + 0x63] ; ret
0x00000000000b1ba9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000052449 : dec dword ptr [rax + 1] ; ret
0x0000000000043bdf : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000004f398 : dec dword ptr [rax - 0x39] ; ret
0x00000000000bce37 : dec dword ptr [rax - 0x73] ; add al, 0x98 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e842f : dec dword ptr [rax - 0x73] ; add bl, byte ptr [r11 + 0x5d] ; pop r12 ; ret
0x00000000000e832f : dec dword ptr [rax - 0x73] ; or byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000006e872 : dec dword ptr [rax - 0x73] ; or byte ptr [r8 - 0x77], cl ; ret
0x000000000010c1c2 : dec dword ptr [rax - 0x75] ; add al, 0x24 ; add rsp, 0x28 ; ret
0x000000000012b26f : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x000000000006d064 : dec dword ptr [rax - 0x75] ; cmp ebp, eax ; ret
0x0000000000049d2b : dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax - 0x39], cl ; ret
0x000000000009d10b : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000018b61f : dec dword ptr [rax - 0x77] ; clc ; vzeroupper ; ret
0x000000000004a171 : dec dword ptr [rax - 0x77] ; fadd dword ptr [rcx + 0xf] ; xchg esp, eax ; ret
0x000000000006d0fb : dec dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x77] ; ret
0x0000000000036181 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; push rsi ; ret
0x0000000000026843 : dec dword ptr [rax - 0x77] ; ret
0x00000000000471e2 : dec dword ptr [rax - 0x77] ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000000d2f6e : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret
0x000000000011cbe1 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rdi + 0x48], 0x39 ; ret
0x0000000000075cc7 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000003816a : dec dword ptr [rax - 0x7d] ; ret
0x000000000011c6f9 : dec dword ptr [rax - 0x7f] ; ret
0x000000000009533d : dec dword ptr [rax - 9] ; fisttp dword ptr [rax + 0x21] ; ret
0x00000000000a6cf5 : dec dword ptr [rbp + 0x39] ; ret
0x000000000007b9b2 : dec dword ptr [rbp + 0x63] ; ret
0x0000000000088533 : dec dword ptr [rbp + rcx*4 + 0x2c] ; and dword ptr [rsi + 0x48], 0xf ; outsb dx, byte ptr [rsi] ; ret
0x00000000000e34b9 : dec dword ptr [rbp - 0x77] ; ret
0x0000000000120bfb : dec dword ptr [rbx + 0x48042444] ; add esp, 0x28 ; ret
0x000000000011f74e : dec dword ptr [rbx + 0x48082444] ; add esp, 0x18 ; ret
0x00000000001129b2 : dec dword ptr [rbx + 0x48082444] ; add esp, 0x28 ; ret
0x00000000000e2e72 : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x18 ; ret
0x00000000000e2d4c : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x28 ; ret
0x0000000000114fde : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x00000000000e2c92 : dec dword ptr [rbx + 0x48102444] ; add esp, 0x28 ; ret
0x0000000000113253 : dec dword ptr [rbx + 0x48182444] ; add esp, 0x28 ; ret
0x00000000000e8029 : dec dword ptr [rbx - 0x4ef6b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000074f4b : dec dword ptr [rbx - 0x8ef7b] ; inc dword ptr [rcx] ; ret
0x00000000001952e5 : dec dword ptr [rcx + 0x21] ; ret
0x00000000000e35ab : dec dword ptr [rcx + 0x29] ; ret
0x000000000002c57c : dec dword ptr [rcx + 0x3948fc51] ; ret
0x00000000000c81eb : dec dword ptr [rcx + 1] ; ret
0x0000000000118cc7 : dec dword ptr [rcx + rcx*4 - 0x20] ; pop r12 ; ret
0x0000000000084402 : dec dword ptr [rcx + rcx*4 - 0x20] ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011432d : dec dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000649ff : dec dword ptr [rcx - 0x60f43] ; dec dword ptr [rax + 0x39] ; ret
0x000000000006661d : dec dword ptr [rcx - 0x77] ; fmul qword ptr [rax - 0x77] ; ret
0x000000000005b15f : dec dword ptr [rcx - 0x77] ; ret
0x000000000002d5f4 : dec dword ptr [rcx - 0x7d] ; ret
0x000000000013a96c : dec dword ptr [rcx - 0x8b7b] ; inc dword ptr [rbp - 0x77] ; ret
0x0000000000094f42 : dec dword ptr [rcx - 9] ; ret
0x0000000000082c03 : dec dword ptr [rcx] ; out dx, al ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012a2af : dec dword ptr [rcx] ; ret
0x0000000000122c57 : dec dword ptr [rcx] ; setbe r8b ; mov eax, r8d ; ret
0x0000000000123505 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x12348e ; loopne 0x12350e ; ret
0x00000000000342da : dec dword ptr [rdi] ; mov bh, 4 ; js 0x34263 ; loopne 0x342e3 ; ret
0x0000000000031762 : dec dword ptr [rdi] ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000005d7b6 : dec dword ptr [rdi] ; mov dh, 0x58 ; or al, 0x89 ; fdiv st(6) ; ret
0x000000000005c113 : dec dword ptr [rdi] ; mov dh, 0x58 ; or al, 0xf6 ; ret
0x0000000000104f64 : dec dword ptr [rdi] ; ret
0x00000000000a4f85 : dec dword ptr [rdi] ; test ah, bh ; xor al, 0 ; add byte ptr [rcx - 9], al ; ret
0x000000000006f61c : dec dword ptr [rdi] ; test byte ptr [rsi], cl ; add eax, 0x83480000 ; ret
0x00000000000a5dca : dec dword ptr [rdi] ; test byte ptr [rsp], dh ; add bh, dh ; ret
0x00000000001393a7 : dec dword ptr [rdi] ; test dl, bl ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x000000000013e362 : dec dword ptr [rdi] ; test dword ptr [rdi], eax ; add al, 0 ; add byte ptr [rcx - 0x7d], al ; ret
0x0000000000192450 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000006d15d : dec dword ptr [rdi] ; test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x0000000000105ec2 : dec dword ptr [rdi] ; xchg ebp, eax ; ret
0x00000000000a4783 : dec dword ptr [rdi] ; xchg ebx, eax ; ret
0x000000000006a480 : dec dword ptr [rdi] ; xchg esp, eax ; ret
0x0000000000029e08 : dec qword ptr [rax + 0x3948074a] ; ret
0x000000000002fd85 : div byte ptr [rax + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x2fd90 ; ret
0x0000000000094d2a : div byte ptr [rbp + 0x13] ; and dword ptr [rdi + 8], 0xfffffffe ; xor eax, eax ; ret
0x000000000011a763 : div byte ptr [rbp + 0xa] ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000042c39 : div byte ptr [rbp + 0xc] ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000000b1d66 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x00000000000a861e : div byte ptr [rbp - 0x11] ; mov qword ptr [rdx], rcx ; ret
0x000000000010d1ca : div dword ptr [rdi - 0x15] ; mov eax, r8d ; ret
0x000000000005ea35 : div ecx ; add r8d, eax ; mov eax, r8d ; ret
0x00000000000bc204 : div ecx ; mov eax, eax ; ret
0x0000000000197275 : divps xmm0, xmmword ptr [rip + 0x27418] ; ret
0x0000000000197274 : divss xmm0, dword ptr [rip + 0x27418] ; ret
0x000000000007ea62 : emms ; jrcxz 0x7ea4f ; ret
0x000000000008dee0 : endbr64 ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000010c790 : endbr64 ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000479f0 : endbr64 ; mov eax, 0xffffffff ; ret
0x0000000000146250 : endbr64 ; mov eax, 1 ; ret
0x0000000000148a80 : endbr64 ; mov eax, 2 ; ret
0x0000000000157920 : endbr64 ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000de2e0 : endbr64 ; mov eax, dword ptr [rdi] ; ret
0x00000000000342b0 : endbr64 ; mov eax, edi ; and eax, 0x7f ; ret
0x000000000012fac0 : endbr64 ; mov eax, edi ; bswap eax ; ret
0x00000000000de290 : endbr64 ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000093850 : endbr64 ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000093860 : endbr64 ; mov rax, rdi ; ret
0x0000000000023ef0 : endbr64 ; ret
0x0000000000092870 : endbr64 ; xor eax, eax ; ret
0x0000000000092a2a : enter -0x177d, 1 ; ret
0x00000000000a88a3 : enter -0x1d8c, 0x4c ; mov eax, eax ; ret
0x0000000000052947 : enter -0x1f3f, 0x1e ; or eax, edx ; ret
0x00000000000c6b4c : enter -0x3ca5, 0x45 ; xor ecx, ecx ; mov eax, r9d ; ret
0x0000000000046112 : enter -0x3fcf, -0x18 ; ret
0x00000000001925c4 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000183f10 : enter -0x73b, 0x77 ; ret
0x000000000004225e : enter -0x73f, 0x1f ; not eax ; and eax, edx ; ret
0x000000000005584a : enter -0x76b7, 4 ; leave ; xor eax, eax ; ret
0x0000000000041fb2 : enter -0x76b8, 7 ; subsd xmm0, xmm1 ; ret
0x00000000000cf176 : enter -0x76bc, -0x38 ; ret
0x0000000000061bc6 : enter -0x76f9, 2 ; mov eax, 1 ; ret
0x00000000001461bf : enter -0x7cb8, -0x16 ; add dword ptr [rbp - 0x7e], esi ; ret
0x00000000000dd07e : enter -0x7cb8, -0x3c ; or byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000184f04 : enter -2, -1 ; ret
0x00000000000d290f : enter 0x11, 1 ; add rsp, 8 ; ret
0x0000000000188389 : enter 0x148, -8 ; vzeroupper ; ret
0x0000000000042321 : enter 0x280f, -0x3f ; ret
0x0000000000057c16 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000018872e : enter 0x2948, -0x30 ; vzeroupper ; ret
0x00000000001838c7 : enter 0x2948, -8 ; ret
0x00000000000aa38d : enter 0x31c3, -0x40 ; ret
0x000000000008803f : enter 0x373, 0x44 ; mov eax, dword ptr [rax] ; mov eax, r8d ; ret
0x000000000007a0c8 : enter 0x415d, 0x5c ; pop r13 ; pop r14 ; ret
0x000000000015087b : enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x0000000000150783 : enter 0x4289, 0xc ; mov eax, 1 ; ret
0x00000000000cf159 : enter 0x475, 0x44 ; mov eax, ecx ; ret
0x000000000013c9b4 : enter 0x480f, -0x3e ; ret
0x0000000000117550 : enter 0x4866, 0xf ; outsb dx, byte ptr [rsi] ; ret
0x0000000000038c79 : enter 0x5d5b, 0x41 ; pop rsp ; ret
0x000000000005f684 : enter 0xf41, -0x6c ; ret
0x00000000000b1529 : enter 0xf66, -0x15 ; ret
0x000000000011d033 : enter 1, 0 ; ret
0x00000000000b9204 : enter 5, 0 ; ret
0x0000000000023a71 : fadd dword ptr [rax] ; add byte ptr [rax], al ; jne 0x23a3b ; ret
0x0000000000052c0a : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000010fd8a : fadd dword ptr [rax] ; ret
0x00000000000627a8 : fadd dword ptr [rbp - 0x7b] ; sal byte ptr [rbp + 2], 0x5b ; ret
0x0000000000158914 : fadd dword ptr [rbx + 0x14807e0] ; ret
0x000000000015a604 : fadd dword ptr [rbx - 0x76b7f820] ; ret
0x00000000000d6c68 : fadd dword ptr [rbx - 0x76b7f840] ; ret
0x00000000000ec7db : fadd dword ptr [rcx + 0x5c] ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c7e02 : fadd dword ptr [rcx + 0xf] ; xchg ebx, eax ; ret
0x000000000004a174 : fadd dword ptr [rcx + 0xf] ; xchg esp, eax ; ret
0x000000000007ea2b : fadd dword ptr [rcx - 0x77] ; ret
0x00000000000d44e4 : fadd dword ptr [rip - 0x76b80000] ; ret
0x00000000000445c0 : fadd qword ptr [rax + rax] ; add rsp, 8 ; ret
0x0000000000041e28 : fadd st(0) ; add rsp, 8 ; ret
0x0000000000041dd4 : fadd st(0) ; ret
0x0000000000192be8 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x000000000018f9ae : fadd st(3) ; ret
0x00000000000bc7a3 : fadd st(3), st(0) ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000bccd3 : fadd st(3), st(0) ; ret
0x0000000000121c79 : fbld tbyte ptr [rsi + 0xc] ; add byte ptr [rax], al ; ret
0x00000000000a892d : fcmovb st(0), st(3) ; nop ; ret
0x000000000018884b : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x0000000000023a53 : fcomp dword ptr [rax + rax] ; ret
0x00000000000a2c3b : fcomp dword ptr [rbx + 0x48] ; cmovne eax, edi ; ret
0x00000000000c9ffb : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c9f07 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000008d885 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000089dff : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000f4d02 : fdiv st(2) ; dec dword ptr [rax - 0x77] ; ret
0x000000000005d7bc : fdiv st(6) ; ret
0x000000000009f868 : fdivr st(6), st(0) ; adc al, 0 ; ret
0x00000000000a273e : fdivr st(7) ; dec dword ptr [rax - 0x77] ; ret
0x000000000012a2ad : fdivr st(7) ; dec dword ptr [rcx] ; ret
0x000000000017c6ed : fdivr st(7) ; ret
0x00000000000b661e : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000f0525 : fdivrp st(6) ; ret
0x00000000000a478e : fiadd dword ptr [rcx + 0xf] ; xchg ebx, eax ; ret
0x0000000000198503 : fiadd dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000018b252 : fiadd dword ptr [rcx] ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000000a3fe3 : fiadd dword ptr [rdi + rcx - 0x4a] ; add byte ptr [r9 + 0xf], 0x93 ; ret
0x00000000000c945d : fiadd word ptr [rcx + 0xf] ; xchg ebx, eax ; ret
0x000000000018a51e : fiadd word ptr [rcx] ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000054488 : fild dword ptr [rax + 0xf3a007d] ; xchg esp, eax ; ret
0x0000000000075ff8 : fild dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000dc5a9 : fild dword ptr [rcx + 0xf] ; ret
0x00000000000a4f2d : fild dword ptr [rcx - 0x7d] ; ret
0x000000000019469f : fild word ptr [rcx - 0x73] ; ret
0x00000000000a04e9 : fimul dword ptr [rax + rax] ; cmovne rax, rdx ; ret
0x000000000006d0fe : fimul dword ptr [rax - 0x77] ; ret
0x0000000000041689 : fimul dword ptr [rax - 0x7d] ; ret
0x000000000015cc79 : fimul dword ptr [rcx + 9] ; add byte ptr [rcx], al ; mov rax, r8 ; pop rbp ; ret
0x0000000000049dfa : fimul word ptr [rax + 0xf] ; mov esi, 0x83480143 ; ret
0x0000000000064825 : fimul word ptr [rax - 0x77] ; ret
0x0000000000066812 : fimul word ptr [rax - 0x7d] ; ret
0x00000000000a87f1 : fimul word ptr [rcx + rcx*4 - 0x40] ; ret
0x00000000000f0898 : fimul word ptr [rdi] ; mov cs, word ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000095340 : fisttp dword ptr [rax + 0x21] ; ret
0x000000000013b6b4 : fisttp dword ptr [rax + 1] ; ret
0x0000000000196c42 : fisttp dword ptr [rax + 9] ; ror dword ptr [rdi], cl ; xchg esp, eax ; ret
0x0000000000056a55 : fisttp dword ptr [rax - 0x77] ; ret
0x0000000000121af7 : fisttp dword ptr [rax - 0x77] ; sbb eax, 0xca861 ; pop rbx ; ret
0x0000000000121add : fisttp dword ptr [rax - 0x77] ; sbb eax, 0xca87b ; pop rbx ; ret
0x00000000000e65eb : fisttp dword ptr [rcx - 0x77] ; test byte ptr [rdi], -0x6c ; ret
0x000000000015f0fb : fisttp dword ptr [rcx] ; ret
0x000000000013b491 : fisttp dword ptr [rdi] ; test dword ptr [rax], esp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000121d02 : fisttp qword ptr [rax + rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000eb530 : fisttp qword ptr [rcx - 0x77] ; ret
0x00000000000eb4e6 : fisttp qword ptr [rcx - 0x7d] ; ret
0x000000000014e164 : fisttp qword ptr [rcx] ; add byte ptr [rbx + rax*4 + 0x38], ah ; add al, 0x75 ; ret
0x0000000000038e1a : fisttp word ptr [rax - 0x7d] ; ret
0x0000000000056aef : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000037ff1 : fisttp word ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000c8f0b : fisttp word ptr [rdi] ; xchg ebx, eax ; ret
0x000000000018cb11 : fisubr word ptr [rcx] ; enter -0x73b, 0x77 ; ret
0x00000000000c7e11 : fld dword ptr [rcx + 0xf] ; xchg ebx, eax ; ret
0x0000000000040fbe : fld st(3) ; ret
0x0000000000188582 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x00000000000d6c64 : fld xword ptr [rcx] ; ret
0x0000000000151639 : fld xword ptr [rip - 0x76b7fffa] ; ret
0x0000000000041dd0 : fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x0000000000041d2c : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000041c92 : fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x0000000000041bad : fld xword ptr [rsp + 8] ; ret
0x0000000000041c1c : fld xword ptr [rsp - 0x18] ; ret
0x00000000000ce289 : fldenv [rsi + 0xf] ; jbe 0xce2dd ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000ac0a9 : fldenv [rsi + 0xf] ; je 0xac0fd ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000ac397 : fldenv [rsi + 0xf] ; je 0xac3eb ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000abfa1 : fldenv [rsi + 0xf] ; xlatb ; ret
0x0000000000055bb4 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000004f6a8 : fmul dword ptr [rax - 0x39] ; ret
0x000000000008a25e : fmul dword ptr [rax - 0x77] ; ret
0x00000000000e8146 : fmul dword ptr [rax - 0x7d] ; ret
0x0000000000158911 : fmul dword ptr [rax - 9] ; fadd dword ptr [rbx + 0x14807e0] ; ret
0x000000000006bf01 : fmul dword ptr [rbx + 0xf660446] ; insb byte ptr [rdi], dx ; ret
0x000000000011cc4c : fmul dword ptr [rcx + rcx*4 - 0x40] ; pop rbx ; ret
0x00000000000a53d6 : fmul dword ptr [rdi] ; test dword ptr [rax + rbp*8 - 0x76b70001], esi ; ret
0x00000000000c856a : fmul dword ptr [rdi] ; xchg ebx, eax ; ret
0x0000000000066620 : fmul qword ptr [rax - 0x77] ; ret
0x00000000000de7d3 : fmul qword ptr [rax - 0x7d] ; ret
0x00000000000eb29f : fmul qword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000198b7e : fnsave dword ptr [rbp - 0x11] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000041dea : fnstsw ax ; fstp st(0) ; and eax, 0x200 ; ret
0x0000000000041d30 : fscale ; fstp st(1) ; ret
0x00000000000bd613 : fst dword ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000141b0e : fstp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a2226 : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000041dec : fstp st(0) ; and eax, 0x200 ; ret
0x0000000000041d32 : fstp st(1) ; ret
0x0000000000041c90 : fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x0000000000041cde : fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x0000000000041c1a : fstp xword ptr [rdi] ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000433ec : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000043428 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000041ded : fsub dword ptr [rip + 0x200] ; ret
0x0000000000063dbf : fsub dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret
0x00000000000b25c4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000000b164c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000198fcc : fsub st(3), st(0) ; mov cl, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001407b6 : fsubr dword ptr [rbp + 7] ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000026f73 : fsubr qword ptr [rcx + 0x1c] ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00000000001843e3 : fsubr qword ptr [rcx] ; enter -0x73b, 0x77 ; ret
0x0000000000041c96 : fsubrp st(1) ; ret
0x00000000000ef7c3 : fucomi st(1) ; ret
0x000000000011cd0d : fucomi st(3) ; or al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x0000000000036184 : fucompi st(0) ; push rsi ; ret
0x0000000000124717 : fucompi st(0) ; ret
0x000000000013fec1 : hlt ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a8853 : hlt ; cmp ecx, esi ; je 0xa8848 ; ret
0x00000000000d4418 : hlt ; dec dword ptr [rax - 0x77] ; ret
0x0000000000118cc6 : hlt ; dec dword ptr [rcx + rcx*4 - 0x20] ; pop r12 ; ret
0x0000000000102a3e : hlt ; jne 0x102a30 ; mov eax, dword ptr [rdx + 8] ; ret
0x0000000000192ac5 : hlt ; jne 0x192be0 ; ret
0x00000000000a8a92 : hlt ; mov byte ptr [rax + 4], dl ; ret
0x00000000000a8b6a : hlt ; mov byte ptr [rdi + 4], al ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000a89cd : hlt ; mov byte ptr [rdi + 4], dl ; ret
0x000000000016d28a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000167f0e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001920d3 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000000a881b : hlt ; ret
0x00000000001920d7 : hlt ; sub eax, edx ; ret
0x00000000000d3687 : idiv bh ; dec dword ptr [rax - 0x7d] ; ret
0x000000000007b9b0 : idiv bh ; dec dword ptr [rbp + 0x63] ; ret
0x00000000000bc91b : idiv bh ; pop rdx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000271fa : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x00000000000a8e30 : idiv edi ; add rsp, 8 ; ret
0x00000000000d8b15 : idiv edi ; dec dword ptr [rax + 1] ; ret
0x0000000000075cc5 : idiv edi ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000075341 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000074f72 : idiv edi ; inc dword ptr [rbp - 0x7b] ; in al, 0xf ; lahf ; ret
0x0000000000075b4d : idiv edi ; inc dword ptr [rcx - 1] ; push rsp ; ret
0x0000000000074f4f : idiv edi ; inc dword ptr [rcx] ; ret
0x000000000004734a : idiv esi ; ret
0x0000000000075b4c : idiv rdi ; inc dword ptr [rcx - 1] ; push rsp ; ret
0x0000000000047349 : idiv rsi ; ret
0x000000000015b2e7 : imul al ; ret
0x00000000000c059c : imul cl ; ret
0x00000000000ddaff : imul eax ; pop rbx ; hlt ; dec dword ptr [rax - 0x77] ; ret
0x0000000000125fda : imul eax ; push rax ; ret
0x0000000000031d37 : imul eax ; ret
0x00000000000f1b63 : imul eax ; xchg edi, eax ; ret
0x00000000000de195 : imul eax, dword ptr [rcx + rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000de23c : imul eax, dword ptr [rcx + rax], 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000d6b54 : imul eax, dword ptr [rdi], 0 ; add byte ptr [rdi], cl ; ret
0x0000000000192c66 : imul eax, edi ; shr rax, 0x38 ; ret
0x00000000001579a1 : imul ebp, dword ptr [rax], 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000026f5b : imul ebx, dword ptr [rax + rax], 0x674c085 ; ret
0x0000000000127a94 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008d4e6 : imul ebx, dword ptr [rax], 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001279f4 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000896d4 : imul ecx, dword ptr [rcx + 0x2b], 0x47 ; and byte ptr [rax + 1], cl ; ret
0x0000000000118c8e : imul ecx, dword ptr [rip - 0x3b7cb800], 8 ; ret
0x0000000000127905 : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000127a44 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006e624 : imul esi, edx, -1 ; inc dword ptr [rcx - 9] ; ret
0x0000000000093469 : imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x00000000000c4071 : imul esp, dword ptr [rbx], -7 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000192c65 : imul rax, rdi ; shr rax, 0x38 ; ret
0x0000000000192af8 : in al, 0 ; add byte ptr [rax], al ; ret
0x0000000000029a4f : in al, 0x29 ; ret
0x000000000013efd8 : in al, 0x44 ; mov eax, edx ; ret
0x00000000000d0072 : in al, 0x4c ; mov eax, esp ; pop r12 ; ret
0x000000000002ffb4 : in al, 0x4c ; mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010d22a : in al, 0x5b ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x0000000000034b45 : in al, 0x5b ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x00000000000a0396 : in al, 0x5d ; mov rax, r12 ; pop r12 ; pop r13 ; ret
0x0000000000155a73 : in al, 0x74 ; ret
0x000000000011c02d : in al, 0x75 ; cmp dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x0000000000074f77 : in al, 0xf ; lahf ; ret
0x000000000016d26a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000bc032 : in al, 0xf3 ; ret
0x00000000000b7898 : in al, 6 ; add byte ptr [rax], al ; ret
0x0000000000151ba9 : in al, dx ; add byte ptr [rcx + rcx*4 - 0x40], 0x5d ; ret
0x000000000015a51a : in al, dx ; dec dword ptr [rax - 0x77] ; ret
0x0000000000116ebb : in al, dx ; mov byte ptr [rsi - 1], 0 ; mov rax, r8 ; ret
0x0000000000167f0a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a8aaa : in al, dx ; mov word ptr [rax + 4], dx ; ret
0x000000000016d66a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000052a50 : in al, dx ; or al, ch ; or esi, edi ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000008e1a2 : in al, dx ; pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x00000000000a88d3 : in al, dx ; ret
0x000000000010dab9 : in al, dx ; sbb byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x000000000014e503 : in eax, 0x89 ; ret
0x000000000015f80a : in eax, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000005f3be : in eax, 0xdf ; loopne 0x5f34b ; ret
0x00000000000cfae3 : in eax, 0xf ; je 0xcfb00 ; add rax, 2 ; ret
0x00000000000bc199 : in eax, 0xf0 ; pop rbx ; cmovne rax, rdx ; ret
0x000000000016d2ea : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000005d9e2 : in eax, dx ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000119643 : in eax, dx ; add ecx, ebx ; ret
0x0000000000146cf8 : in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x00000000001986d5 : in eax, dx ; jne 0x1986c0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000472da : in eax, dx ; jne 0x472a0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000094aab : in eax, dx ; jne 0x94adc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bb702 : in eax, dx ; lea rax, [rcx - 1] ; ret
0x00000000000bb0c9 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000bb0df : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000bb101 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000bb11f : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000bb13f : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000bb165 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000bb181 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000bb1a1 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000bb1c1 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000bb1e7 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000bb209 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000bb227 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000bb247 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000bb263 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000bb283 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000bb2a3 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000bb2c3 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000bb2e9 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000bb339 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000bb00f : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000bb02d : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000bb04d : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000bb06f : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000bb08f : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000bb0af : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000baf45 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000baf57 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000baf6d : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000baf85 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000baf9b : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000bafad : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000bafcb : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000bafd7 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000bafed : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000baf31 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x0000000000167d1a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000e83d2 : in eax, dx ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016d6ea : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000086e22 : in eax, dx ; ret
0x00000000000bb852 : in eax, dx ; sub rax, 1 ; ret
0x000000000009e852 : in eax, dx ; xor eax, eax ; ret
0x000000000019022c : inc bl ; cmp dl, 1 ; jb 0x190235 ; mov byte ptr [rdi], cl ; ret
0x000000000002fd89 : inc byte ptr [rbx] ; je 0x2fd90 ; ret
0x00000000000bf99d : inc byte ptr [rcx + 0x29] ; ret
0x00000000000dcfa5 : inc byte ptr [rcx] ; je 0xdcfb0 ; xor eax, eax ; ret
0x000000000008ce5e : inc byte ptr [rdx] ; cmovne edx, ecx ; mov dword ptr [rdi], edx ; ret
0x00000000000a8629 : inc dword ptr [r8] ; mov qword ptr [rdx], rcx ; ret
0x0000000000035a22 : inc dword ptr [rax - 0x76b7bcc8] ; ret
0x00000000000e83e8 : inc dword ptr [rax - 0x76b7ffc8] ; ret
0x00000000000e556b : inc dword ptr [rax - 0x7af0f506] ; ret
0x0000000000075343 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013d073 : inc dword ptr [rax] ; add byte ptr [rax], al ; add dh, al ; ret
0x0000000000063c06 : inc dword ptr [rax] ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000000bc138 : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; ret
0x00000000000c6a99 : inc dword ptr [rax] ; add byte ptr [rax], al ; je 0xc6aa3 ; mov eax, r8d ; ret
0x00000000000e5149 : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000018eb87 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000094e8a : inc dword ptr [rax] ; add byte ptr [rsi + 1], dh ; ret
0x000000000012fb20 : inc dword ptr [rax] ; mov eax, edi ; or eax, esi ; bswap eax ; ret
0x00000000000a862a : inc dword ptr [rax] ; mov qword ptr [rdx], rcx ; ret
0x0000000000116e58 : inc dword ptr [rax] ; mov rax, r8 ; ret
0x0000000000116eda : inc dword ptr [rax] ; ret
0x00000000000ed9c5 : inc dword ptr [rbp + 0x31] ; shl byte ptr [rsi + 0xf], cl ; outsb dx, byte ptr [rsi] ; ret
0x00000000000e2ec6 : inc dword ptr [rbp + 0x480575c0] ; add esp, 8 ; ret
0x0000000000153954 : inc dword ptr [rbp + 0x5b0775db] ; pop rbp ; pop r12 ; ret
0x000000000010c5d7 : inc dword ptr [rbp - 0x74f38a40] ; push rbx ; add al, 0xeb ; ret
0x000000000013a972 : inc dword ptr [rbp - 0x77] ; ret
0x00000000000dc5a6 : inc dword ptr [rbp - 0x7b] ; fild dword ptr [rcx + 0xf] ; ret
0x0000000000074f74 : inc dword ptr [rbp - 0x7b] ; in al, 0xf ; lahf ; ret
0x000000000011799c : inc dword ptr [rbp - 0x7cc08b40] ; ret
0x0000000000071182 : inc dword ptr [rbx - 0x78f0d008] ; ret
0x000000000013b3c7 : inc dword ptr [rbx - 0xc8b0a08] ; pop rbx ; ret
0x0000000000047d78 : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, ecx ; ret
0x00000000000bc219 : inc dword ptr [rbx] ; div ecx ; mov eax, eax ; ret
0x00000000000bc164 : inc dword ptr [rbx] ; ret
0x00000000000d60b2 : inc dword ptr [rcx + 0xf] ; mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000014f449 : inc dword ptr [rcx + 0xfffb] ; add byte ptr [rdi], cl ; xchg edi, eax ; ret
0x00000000000e2fce : inc dword ptr [rcx + rcx*4 - 0x18] ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000081ec2 : inc dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c6b49 : inc dword ptr [rcx + rcx*4 - 0x38] ; pop rbx ; ret
0x0000000000085431 : inc dword ptr [rcx + rcx*4 - 0x40] ; pop rbp ; pop r12 ; ret
0x0000000000054db5 : inc dword ptr [rcx + rcx*4 - 0x40] ; ret
0x0000000000064822 : inc dword ptr [rcx - 0x77] ; fimul word ptr [rax - 0x77] ; ret
0x00000000000a46f9 : inc dword ptr [rcx - 0x7d] ; ret
0x000000000006d4c7 : inc dword ptr [rcx - 0xa] ; ret
0x0000000000075b4f : inc dword ptr [rcx - 1] ; push rsp ; ret
0x000000000006ced4 : inc dword ptr [rcx - 9] ; ret
0x000000000007d0c0 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000015a5ba : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000162bc3 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000074f51 : inc dword ptr [rcx] ; ret
0x0000000000041b7d : inc eax ; shr eax, 0x1f ; ret
0x0000000000160dc7 : inc ebx ; mov eax, 0xfffffffe ; ret
0x00000000001925c9 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000ee448 : inc ebx ; nop word ptr [rax + rax] ; ret
0x00000000000ee49a : inc ebx ; xor eax, eax ; pop rbx ; ret
0x00000000000da9ee : inc edi ; add ebp, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000db9e5 : inc edi ; add ecx, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000db680 : inc edi ; add ecx, dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000013d81d : inc esi ; ret
0x0000000000151ced : insb byte ptr [rdi], dx ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000041cdb : insb byte ptr [rdi], dx ; and al, 0xe8 ; fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x0000000000041c1d : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000041dd1 : insb byte ptr [rdi], dx ; and al, 8 ; fadd st(0) ; ret
0x0000000000041d2d : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000041c93 : insb byte ptr [rdi], dx ; and al, 8 ; fsubrp st(1) ; ret
0x0000000000041bae : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000014d0e8 : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x0000000000118c33 : insb byte ptr [rdi], dx ; or eax, 0x5c415d00 ; pop r13 ; ret
0x0000000000025803 : insb byte ptr [rdi], dx ; ret
0x0000000000047ce6 : insb byte ptr [rdi], dx ; rol dword ptr [rcx + rcx*4 - 0x40], 0xf ; adc dword ptr [rdi], eax ; ret
0x00000000001149b4 : insb byte ptr [rdi], dx ; ror dword ptr [rax - 0x75], 5 ; ret
0x000000000002717c : insb byte ptr [rdi], dx ; ror dword ptr [rdi], 0x11 ; ret
0x00000000000a4441 : insd dword ptr [rdi], dx ; adc dword ptr [rax], eax ; add byte ptr [rcx - 9], al ; ret
0x00000000000d123c : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add cl, al ; stc ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000000471df : insd dword ptr [rdi], dx ; mov bl, 0xfd ; dec dword ptr [rax - 0x77] ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000015c866 : insd dword ptr [rdi], dx ; sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000005ea36 : int1 ; add r8d, eax ; mov eax, r8d ; ret
0x0000000000102a3b : int1 ; cmp ecx, dword ptr [rax - 0xc] ; jne 0x102a30 ; mov eax, dword ptr [rdx + 8] ; ret
0x0000000000092a1b : int1 ; ja 0x92a10 ; lea eax, [rdx + rdi] ; ret
0x00000000000a8855 : int1 ; je 0xa8848 ; ret
0x00000000001901af : int1 ; jl 0x1901fa ; adc dword ptr [rsi - 1], edx ; ret
0x00000000001901d0 : int1 ; jl 0x19021b ; adc dword ptr [rsi - 1], edx ; ret
0x00000000001901e3 : int1 ; jl 0x19022e ; adc dword ptr [rsi - 1], edx ; ret
0x00000000001902b8 : int1 ; jl 0x190303 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000190310 : int1 ; jl 0x19035b ; adc dword ptr [rsi + 3], edx ; ret
0x00000000001903ad : int1 ; jl 0x1903f8 ; adc dword ptr [rsi + 7], edx ; ret
0x00000000000a88d1 : int1 ; jne 0xa88c0 ; ret
0x000000000018ac83 : int1 ; lea rax, [rdi + rdx] ; vzeroupper ; ret
0x00000000000bc205 : int1 ; mov eax, eax ; ret
0x000000000016d0db : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001684df : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000149280 : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000012ce5e : int1 ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000001920a3 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000005430e : int1 ; pop rbx ; ret
0x00000000001120c9 : int1 ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000bdfbe : int1 ; ret
0x00000000001920a7 : int1 ; sub eax, edx ; ret
0x00000000001891d3 : int1 ; vzeroupper ; ret
0x00000000001028cf : ja 0x1028d7 ; setne al ; movzx eax, al ; ret
0x000000000010c170 : ja 0x10c1d0 ; ret
0x000000000010c220 : ja 0x10c280 ; ret
0x000000000010c795 : ja 0x10c79b ; xor eax, eax ; ret
0x000000000010d1cb : ja 0x10d1b8 ; mov eax, r8d ; ret
0x000000000010d217 : ja 0x10d200 ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010d3b8 : ja 0x10d37a ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x000000000010d4c0 : ja 0x10d4c8 ; ret
0x000000000010d51f : ja 0x10d528 ; ret
0x000000000010d580 : ja 0x10d588 ; ret
0x000000000010d908 : ja 0x10d910 ; ret
0x000000000010d96b : ja 0x10d970 ; ret
0x000000000010d9c5 : ja 0x10d9d0 ; ret
0x000000000010dbfe : ja 0x10dc08 ; ret
0x000000000010dfd8 : ja 0x10e030 ; ret
0x000000000010e07d : ja 0x10e0d0 ; ret
0x000000000010e111 : ja 0x10e118 ; ret
0x000000000010e141 : ja 0x10e148 ; ret
0x000000000010e81d : ja 0x10e860 ; ret
0x000000000010e99d : ja 0x10e9e0 ; ret
0x00000000001127e7 : ja 0x1127f0 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x000000000011296d : ja 0x1129c0 ; ret
0x0000000000112ff0 : ja 0x113068 ; ret
0x00000000001130b4 : ja 0x1130c0 ; ret
0x00000000001130f9 : ja 0x113100 ; ret
0x0000000000113200 : ja 0x113260 ; ret
0x00000000001132b0 : ja 0x113310 ; ret
0x0000000000113351 : ja 0x113358 ; ret
0x000000000011360e : ja 0x113618 ; ret
0x0000000000113644 : ja 0x113650 ; ret
0x0000000000113681 : ja 0x113688 ; ret
0x00000000001136f7 : ja 0x113701 ; ret
0x0000000000113740 : ja 0x11374a ; ret
0x0000000000113b67 : ja 0x113bb8 ; ret
0x0000000000113d7a : ja 0x113d80 ; ret
0x0000000000113dbb : ja 0x113dc0 ; ret
0x00000000001142a0 : ja 0x1142c8 ; xor eax, eax ; ret
0x00000000001143ed : ja 0x114440 ; ret
0x000000000011448d : ja 0x1144e0 ; ret
0x0000000000114533 : ja 0x114598 ; ret
0x00000000001145f3 : ja 0x114658 ; ret
0x0000000000114f80 : ja 0x114ff0 ; ret
0x00000000001151ad : ja 0x1151f0 ; ret
0x000000000011526d : ja 0x1152b0 ; ret
0x000000000011532d : ja 0x115330 ; ret
0x0000000000116ab1 : ja 0x116ab8 ; ret
0x0000000000116c96 : ja 0x116ca0 ; ret
0x0000000000116cd1 : ja 0x116cd8 ; ret
0x0000000000116d01 : ja 0x116d08 ; ret
0x00000000001183e5 : ja 0x11845b ; or eax, 0x74db8500 ; or al, 0xf7 ; ret
0x00000000001188ec : ja 0x118950 ; pop rbx ; pop rbp ; ret
0x00000000001189ed : ja 0x118a40 ; ret
0x0000000000119185 : ja 0x1191ee ; or eax, 0x415c4100 ; pop rbp ; ret
0x000000000011c4c8 : ja 0x11c4d0 ; ret
0x000000000011f1a1 : ja 0x11f1a8 ; ret
0x000000000011f246 : ja 0x11f2b8 ; ret
0x000000000011f2f9 : ja 0x11f300 ; ret
0x000000000011f430 : ja 0x11f490 ; ret
0x000000000011f4e0 : ja 0x11f540 ; ret
0x000000000011f590 : ja 0x11f5f0 ; ret
0x000000000011f640 : ja 0x11f6b8 ; ret
0x000000000011f70d : ja 0x11f760 ; ret
0x000000000011f7d5 : ja 0x11f808 ; mov r8d, eax ; mov eax, r8d ; ret
0x000000000011f839 : ja 0x11f840 ; ret
0x00000000001200dd : ja 0x120130 ; ret
0x00000000001201ad : ja 0x120200 ; ret
0x0000000000120316 : ja 0x120380 ; ret
0x00000000001203d0 : ja 0x120440 ; ret
0x000000000012048d : ja 0x1204e0 ; ret
0x0000000000120536 : ja 0x1205a0 ; ret
0x00000000001205ed : ja 0x120640 ; ret
0x0000000000120690 : ja 0x120708 ; ret
0x0000000000120af0 : ja 0x120b50 ; ret
0x0000000000120ba0 : ja 0x120c08 ; ret
0x0000000000120c50 : ja 0x120cb0 ; ret
0x0000000000120ec0 : ja 0x120f20 ; ret
0x0000000000120f70 : ja 0x120fe0 ; ret
0x0000000000121021 : ja 0x121028 ; ret
0x0000000000121051 : ja 0x121058 ; ret
0x0000000000121091 : ja 0x121098 ; ret
0x0000000000121164 : ja 0x121170 ; ret
0x00000000001211a1 : ja 0x1211a8 ; ret
0x00000000001211d1 : ja 0x1211d8 ; ret
0x0000000000121204 : ja 0x121210 ; ret
0x0000000000121241 : ja 0x121248 ; ret
0x000000000012e7b3 : ja 0x12e7c0 ; ret
0x000000000012f9eb : ja 0x12f9f5 ; mov rax, rdi ; sar rax, 6 ; ret
0x000000000013c176 : ja 0x13c179 ; ret
0x000000000013c432 : ja 0x13c41c ; mov eax, 0xffffffff ; ret
0x000000000014746f : ja 0x1474b9 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001492a5 : ja 0x149290 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000001546ac : ja 0x1546b7 ; add byte ptr [rbx + rax*4 + 0x38], ah ; add al, 0x75 ; ret
0x00000000001574e6 : ja 0x157500 ; mov eax, r8d ; ret
0x000000000015751e : ja 0x157538 ; mov rax, r8 ; ret
0x000000000015d21d : ja 0x15d230 ; cmp dx, cx ; sete al ; ret
0x000000000018b39e : ja 0x18b363 ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x000000000018b748 : ja 0x18b785 ; jb 0x18b751 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000018bc35 : ja 0x18bc63 ; jb 0x18bc3b ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000018d489 : ja 0x18d44e ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000018ff87 : ja 0x18ff82 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000001904d8 : ja 0x19052d ; jb 0x1904e1 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000190afd : ja 0x190b39 ; jb 0x190b03 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000198d6b : ja 0x198d72 ; add byte ptr [rcx], al ; pop rbp ; ret
0x0000000000043416 : ja 0x43420 ; ret
0x0000000000043462 : ja 0x434b0 ; ret
0x000000000004822d : ja 0x48280 ; ret
0x000000000005b6ad : ja 0x5b680 ; mov rax, r8 ; ret
0x000000000005ea23 : ja 0x5ea08 ; mov eax, r8d ; ret
0x0000000000062e91 : ja 0x62e98 ; ret
0x0000000000062ec4 : ja 0x62ed0 ; ret
0x0000000000087dec : ja 0x87de0 ; lea eax, [rdx + rdi] ; ret
0x000000000008d881 : ja 0x8d890 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000092a1c : ja 0x92a10 ; lea eax, [rdx + rdi] ; ret
0x000000000009ef20 : ja 0x9ef2a ; jb 0x9ef30 ; mov qword ptr [rdi], rsi ; ret
0x00000000000a2225 : ja 0xa2200 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b6e87 : ja 0xb6e8b ; ret
0x00000000000b6ea3 : ja 0xb6ea9 ; mov dword ptr [rdi], ecx ; ret
0x00000000000b6ee4 : ja 0xb6eee ; mov qword ptr [rdi], rcx ; ret
0x00000000000b6f69 : ja 0xb6f7b ; ret
0x00000000000b6fbf : ja 0xb6fd5 ; ret
0x00000000000b7041 : ja 0xb705b ; ret
0x00000000000b84c7 : ja 0xb84cb ; lea rax, [rdi + 2] ; ret
0x00000000000b84e3 : ja 0xb84e9 ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000000b8534 : ja 0xb853e ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x00000000000b8619 : ja 0xb862b ; lea rax, [rdi + 0x10] ; ret
0x00000000000b868f : ja 0xb86a5 ; lea rax, [rdi + 0x14] ; ret
0x00000000000b8711 : ja 0xb872b ; lea rax, [rdi + 0x18] ; ret
0x00000000000ba197 : ja 0xba19b ; ret
0x00000000000ba1b3 : ja 0xba1b9 ; mov dword ptr [rdi], ecx ; ret
0x00000000000ba1f4 : ja 0xba1fe ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba279 : ja 0xba28b ; ret
0x00000000000ba2cf : ja 0xba2e5 ; ret
0x00000000000ba351 : ja 0xba36b ; ret
0x00000000000bac87 : ja 0xbac8b ; ret
0x00000000000baca3 : ja 0xbaca9 ; mov dword ptr [rdi], ecx ; ret
0x00000000000bace4 : ja 0xbacee ; mov qword ptr [rdi], rcx ; ret
0x00000000000bad69 : ja 0xbad7b ; ret
0x00000000000badbf : ja 0xbadd5 ; ret
0x00000000000bae41 : ja 0xbae5b ; ret
0x00000000000bbc08 : ja 0xbbc30 ; jb 0xbbc11 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000bc047 : ja 0xbc05e ; jb 0xbc04d ; mov byte ptr [rdi], cl ; ret
0x00000000000cf349 : ja 0xcf360 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000d0dd1 : ja 0xd0dd8 ; ret
0x00000000000d0ee6 : ja 0xd0ef0 ; ret
0x00000000000d1086 : ja 0xd1090 ; ret
0x00000000000dd07d : ja 0xdd047 ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x00000000000dd0fd : ja 0xdd0c7 ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x00000000000dd12b : ja 0xdd130 ; ret
0x00000000000de2c1 : ja 0xde2c8 ; ret
0x00000000000e2c40 : ja 0xe2ca0 ; ret
0x00000000000e2cf3 : ja 0xe2d60 ; ret
0x00000000000e2e4d : ja 0xe2e80 ; ret
0x0000000000102661 : jae 0x102664 ; ret
0x0000000000102691 : jae 0x102694 ; ret
0x00000000001026c1 : jae 0x1026c4 ; ret
0x00000000001026f1 : jae 0x1026f4 ; ret
0x0000000000102721 : jae 0x102724 ; ret
0x0000000000102751 : jae 0x102754 ; ret
0x0000000000102781 : jae 0x102784 ; ret
0x00000000001027b1 : jae 0x1027b4 ; ret
0x000000000010d3e1 : jae 0x10d3e4 ; ret
0x000000000010da11 : jae 0x10da14 ; ret
0x000000000010da41 : jae 0x10da44 ; ret
0x000000000010db71 : jae 0x10db74 ; ret
0x000000000010dba1 : jae 0x10dba4 ; ret
0x000000000010dc61 : jae 0x10dc64 ; ret
0x000000000010dc91 : jae 0x10dc94 ; ret
0x000000000010e581 : jae 0x10e584 ; ret
0x000000000010e8a1 : jae 0x10e8a4 ; ret
0x000000000010e8d1 : jae 0x10e8d4 ; ret
0x000000000010e901 : jae 0x10e904 ; ret
0x000000000010e931 : jae 0x10e934 ; ret
0x000000000010e961 : jae 0x10e964 ; ret
0x000000000010ea21 : jae 0x10ea24 ; ret
0x000000000010ea51 : jae 0x10ea54 ; ret
0x000000000010f371 : jae 0x10f374 ; ret
0x000000000010f3a1 : jae 0x10f3a4 ; ret
0x000000000010f3d1 : jae 0x10f3d4 ; ret
0x000000000010f404 : jae 0x10f407 ; ret
0x000000000010fbc1 : jae 0x10fbc4 ; ret
0x000000000010fbf4 : jae 0x10fbf7 ; ret
0x000000000010fc21 : jae 0x10fc24 ; ret
0x000000000010fc51 : jae 0x10fc54 ; ret
0x000000000010fc81 : jae 0x10fc84 ; ret
0x000000000010fcb4 : jae 0x10fcb7 ; ret
0x000000000010fce1 : jae 0x10fce4 ; ret
0x000000000010fd11 : jae 0x10fd14 ; ret
0x000000000010fd41 : jae 0x10fd44 ; ret
0x0000000000112fb4 : jae 0x112fb7 ; ret
0x0000000000113b29 : jae 0x113b33 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000113df1 : jae 0x113df4 ; ret
0x00000000001141f1 : jae 0x1141f4 ; ret
0x00000000001143b1 : jae 0x1143b4 ; ret
0x0000000000114df1 : jae 0x114df4 ; ret
0x0000000000114f41 : jae 0x114f44 ; ret
0x0000000000115141 : jae 0x115144 ; ret
0x0000000000115171 : jae 0x115174 ; ret
0x0000000000115231 : jae 0x115234 ; ret
0x00000000001152f1 : jae 0x1152f4 ; ret
0x0000000000115631 : jae 0x115634 ; ret
0x0000000000115661 : jae 0x115664 ; ret
0x0000000000115691 : jae 0x115694 ; ret
0x0000000000118743 : jae 0x118746 ; ret
0x0000000000118981 : jae 0x118984 ; ret
0x00000000001189b1 : jae 0x1189b4 ; ret
0x0000000000118a81 : jae 0x118a84 ; ret
0x0000000000118ab1 : jae 0x118ab4 ; ret
0x0000000000118ae4 : jae 0x118ae7 ; ret
0x0000000000118b11 : jae 0x118b14 ; ret
0x0000000000118b41 : jae 0x118b44 ; ret
0x0000000000118b71 : jae 0x118b74 ; ret
0x0000000000118ba1 : jae 0x118ba4 ; ret
0x000000000011cda4 : jae 0x11cda7 ; ret
0x000000000011cdd1 : jae 0x11cdd4 ; ret
0x000000000011ce01 : jae 0x11ce04 ; ret
0x000000000011ce34 : jae 0x11ce37 ; ret
0x000000000011ce64 : jae 0x11ce67 ; ret
0x000000000011ce91 : jae 0x11ce94 ; ret
0x000000000011cec4 : jae 0x11cec7 ; ret
0x000000000011cef1 : jae 0x11cef4 ; ret
0x000000000011cf21 : jae 0x11cf24 ; ret
0x000000000011cf54 : jae 0x11cf57 ; ret
0x000000000011cf81 : jae 0x11cf84 ; ret
0x000000000011cfb4 : jae 0x11cfb7 ; ret
0x000000000011eff1 : jae 0x11eff4 ; ret
0x000000000011f021 : jae 0x11f024 ; ret
0x000000000011f171 : jae 0x11f174 ; ret
0x000000000011f1d1 : jae 0x11f1d4 ; ret
0x000000000011f201 : jae 0x11f204 ; ret
0x000000000011f331 : jae 0x11f334 ; ret
0x000000000011f3c4 : jae 0x11f3c7 ; ret
0x000000000011f3f1 : jae 0x11f3f4 ; ret
0x000000000011f911 : jae 0x11f914 ; ret
0x000000000011f941 : jae 0x11f944 ; ret
0x000000000011f984 : jae 0x11f987 ; ret
0x000000000011f9b1 : jae 0x11f9b4 ; ret
0x000000000011f9e1 : jae 0x11f9e4 ; ret
0x000000000011fa11 : jae 0x11fa14 ; ret
0x000000000011fa41 : jae 0x11fa44 ; ret
0x000000000011fa71 : jae 0x11fa74 ; ret
0x000000000011faa1 : jae 0x11faa4 ; ret
0x000000000011fad1 : jae 0x11fad4 ; ret
0x000000000011fb04 : jae 0x11fb07 ; ret
0x000000000011fb31 : jae 0x11fb34 ; ret
0x000000000011fb64 : jae 0x11fb67 ; ret
0x000000000011fb91 : jae 0x11fb94 ; ret
0x000000000011fbc1 : jae 0x11fbc4 ; ret
0x000000000011fbf1 : jae 0x11fbf4 ; ret
0x000000000011fc21 : jae 0x11fc24 ; ret
0x000000000011fc51 : jae 0x11fc54 ; ret
0x000000000011fc84 : jae 0x11fc87 ; ret
0x000000000011fcb4 : jae 0x11fcb7 ; ret
0x000000000011fce1 : jae 0x11fce4 ; ret
0x000000000011fd11 : jae 0x11fd14 ; ret
0x000000000011fd44 : jae 0x11fd47 ; ret
0x000000000011fd74 : jae 0x11fd77 ; ret
0x000000000011fda4 : jae 0x11fda7 ; ret
0x000000000011fdd1 : jae 0x11fdd4 ; ret
0x000000000011fe01 : jae 0x11fe04 ; ret
0x000000000011fe31 : jae 0x11fe34 ; ret
0x000000000011fe61 : jae 0x11fe64 ; ret
0x000000000011fe94 : jae 0x11fe97 ; ret
0x000000000011fec1 : jae 0x11fec4 ; ret
0x000000000011fef1 : jae 0x11fef4 ; ret
0x000000000011ff24 : jae 0x11ff27 ; ret
0x000000000011ff51 : jae 0x11ff54 ; ret
0x000000000011ff84 : jae 0x11ff87 ; ret
0x000000000011ffb4 : jae 0x11ffb7 ; ret
0x000000000011ffe1 : jae 0x11ffe4 ; ret
0x0000000000120011 : jae 0x120014 ; ret
0x0000000000120041 : jae 0x120044 ; ret
0x0000000000120081 : jae 0x120084 ; ret
0x0000000000120171 : jae 0x120174 ; ret
0x0000000000120241 : jae 0x120244 ; ret
0x0000000000120271 : jae 0x120274 ; ret
0x00000000001202a4 : jae 0x1202a7 ; ret
0x00000000001202d1 : jae 0x1202d4 ; ret
0x0000000000120754 : jae 0x120757 ; ret
0x0000000000120781 : jae 0x120784 ; ret
0x00000000001207b1 : jae 0x1207b4 ; ret
0x00000000001207e4 : jae 0x1207e7 ; ret
0x000000000013b90e : jae 0x13b923 ; mov eax, 0xffffffff ; ret
0x0000000000146389 : jae 0x146332 ; or al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000149dc9 : jae 0x149deb ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000151a76 : jae 0x151ac0 ; add esp, 0x10 ; pop r12 ; ret
0x0000000000157639 : jae 0x157648 ; xor r8d, r8d ; mov eax, r8d ; ret
0x000000000015f809 : jae 0x15f7f0 ; mov eax, 1 ; ret
0x0000000000042c3d : jae 0x42c7f ; xor eax, eax ; pop rbx ; ret
0x0000000000042c60 : jae 0x42ca2 ; pop rbx ; ret
0x00000000000433e1 : jae 0x433e4 ; ret
0x00000000000439d1 : jae 0x439d4 ; ret
0x0000000000054f07 : jae 0x54f0c ; xor eax, eax ; ret
0x0000000000056432 : jae 0x5647d ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000005b15d : jae 0x5b15b ; dec dword ptr [rcx - 0x77] ; ret
0x000000000005b3a0 : jae 0x5b350 ; mov rax, r10 ; pop rbx ; ret
0x000000000005b628 : jae 0x5b60c ; mov rax, r8 ; ret
0x0000000000088040 : jae 0x88045 ; mov r8d, dword ptr [rax] ; mov eax, r8d ; ret
0x0000000000093981 : jae 0x939a8 ; movzx eax, byte ptr [rax] ; ret
0x000000000009c1ec : jae 0x9c210 ; lea rax, [rax - 8] ; ret
0x00000000000d41c1 : jae 0xd41c4 ; ret
0x00000000000d41f1 : jae 0xd41f4 ; ret
0x00000000000e2b51 : jae 0xe2b54 ; ret
0x00000000000e2da1 : jae 0xe2da4 ; ret
0x00000000000e3181 : jae 0xe3184 ; ret
0x00000000000e4131 : jae 0xe4134 ; ret
0x00000000000e4381 : jae 0xe4384 ; ret
0x00000000000e43b1 : jae 0xe43b4 ; ret
0x00000000000e4411 : jae 0xe4414 ; ret
0x00000000000e4441 : jae 0xe4444 ; ret
0x00000000000e4471 : jae 0xe4474 ; ret
0x00000000000e44a1 : jae 0xe44a4 ; ret
0x000000000012310b : jb 0x12311d ; lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000123173 : jb 0x123185 ; lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000123a5b : jb 0x123a6d ; lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000123abb : jb 0x123acd ; lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000012765f : jb 0x127670 ; mov eax, 1 ; ret
0x000000000013c4d3 : jb 0x13c4bd ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000001492a9 : jb 0x1492cb ; ret
0x00000000001492a3 : jb 0x1492cd ; ja 0x149290 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000018b74a : jb 0x18b751 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000018bc37 : jb 0x18bc3b ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000018fb62 : jb 0x18fb68 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000190219 : jb 0x190221 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000190224 : jb 0x19022e ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000190231 : jb 0x190235 ; mov byte ptr [rdi], cl ; ret
0x00000000001904da : jb 0x1904e1 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000190aff : jb 0x190b03 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000000482f7 : jb 0x482d5 ; xor eax, eax ; ret
0x00000000000860c5 : jb 0x860e7 ; mov dword ptr [rcx], eax ; ret
0x000000000008626c : jb 0x8628e ; mov dword ptr [rcx], eax ; ret
0x000000000009ef22 : jb 0x9ef30 ; mov qword ptr [rdi], rsi ; ret
0x000000000009ef63 : jb 0x9ef6c ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000a15fb : jb 0xa160b ; sub al, bl ; ret
0x00000000000b8e5a : jb 0xb8e65 ; add byte ptr [rax], al ; ret
0x00000000000bbb5d : jb 0xbbb62 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000bbc0a : jb 0xbbc11 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000bc049 : jb 0xbc04d ; mov byte ptr [rdi], cl ; ret
0x0000000000112d2b : jbe 0x112d48 ; cmp eax, -0x5f ; je 0x112d38 ; neg eax ; ret
0x0000000000112f7b : jbe 0x112f98 ; cmp eax, -0x5f ; je 0x112f88 ; neg eax ; ret
0x000000000013484b : jbe 0x1347b9 ; xor eax, eax ; pop rbx ; ret
0x0000000000148750 : jbe 0x148760 ; mov eax, 2 ; ret
0x00000000001498b7 : jbe 0x149900 ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000001524c3 : jbe 0x15250d ; add esp, 0x28 ; pop rbx ; pop r12 ; ret
0x000000000015799e : jbe 0x1579b0 ; add dword ptr [rbx + 0x28], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015d237 : jbe 0x15d240 ; ret
0x0000000000184727 : jbe 0x184790 ; add rax, rdi ; vzeroupper ; ret
0x000000000018b2b6 : jbe 0x18b2b9 ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000018c1d7 : jbe 0x18c240 ; add rax, rdi ; vzeroupper ; ret
0x00000000000328ae : jbe 0x328c7 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000005b335 : jbe 0x5b32a ; mov rax, r10 ; ret
0x0000000000094e4d : jbe 0x94e50 ; ret
0x0000000000094e8d : jbe 0x94e90 ; ret
0x00000000000951fd : jbe 0x95200 ; ret
0x000000000009525d : jbe 0x95260 ; ret
0x000000000009552f : jbe 0x954d8 ; add rsp, 8 ; ret
0x00000000000a1fdd : jbe 0xa2001 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ac1a6 : jbe 0xac1e0 ; add rax, rdi ; ret
0x00000000000ac1b6 : jbe 0xac1e0 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000ac1c6 : jbe 0xac1e0 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000ac1d6 : jbe 0xac1e0 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000ce28c : jbe 0xce2dd ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000ce386 : jbe 0xce3c0 ; add rax, rdi ; ret
0x00000000000ce396 : jbe 0xce3c0 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000ce3a6 : jbe 0xce3c0 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000ce3b6 : jbe 0xce3c0 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000d423b : jbe 0xd4240 ; ret
0x0000000000102a12 : je 0x102a18 ; ret
0x0000000000106f5b : je 0x106fb6 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000010d8aa : je 0x10d8b0 ; mov eax, r9d ; ret
0x0000000000112d30 : je 0x112d38 ; neg eax ; ret
0x0000000000112f80 : je 0x112f88 ; neg eax ; ret
0x0000000000114c42 : je 0x114c45 ; ret
0x0000000000116db7 : je 0x116dbc ; mov qword ptr [rax], rdx ; ret
0x0000000000116eba : je 0x116ea8 ; mov byte ptr [rsi - 1], 0 ; mov rax, r8 ; ret
0x00000000001183e6 : je 0x1183f5 ; add byte ptr [rbp - 0x8f38b25], al ; ret
0x000000000011870c : je 0x118714 ; mov dword ptr [rip + 0xd3c34], edi ; ret
0x00000000001196f7 : je 0x119700 ; pop rbx ; ret
0x000000000011f12a : je 0x11f12d ; ret
0x000000000011f7bb : je 0x11f7f4 ; mov eax, r8d ; ret
0x000000000012126d : je 0x121270 ; ret
0x0000000000121f6f : je 0x121fe0 ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x0000000000121fb0 : je 0x121fe0 ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00000000001252f4 : je 0x125308 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012bd97 : je 0x12bda0 ; mov eax, 7 ; ret
0x000000000012bdc2 : je 0x12bdd0 ; pop rbx ; ret
0x000000000012cedf : je 0x12cef0 ; ret
0x000000000012cf78 : je 0x12cf8e ; pop rbx ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x000000000012e8c0 : je 0x12e8d0 ; add rsp, 8 ; ret
0x000000000013b3cb : je 0x13b3c0 ; pop rbx ; ret
0x000000000013c329 : je 0x13c338 ; test eax, eax ; jne 0x13c348 ; mov eax, r8d ; ret
0x0000000000140cc0 : je 0x140cc8 ; ret
0x0000000000141b46 : je 0x141b50 ; add rsp, 8 ; ret
0x00000000001427ea : je 0x1427c9 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000146f9c : je 0x146fa0 ; ret
0x0000000000148217 : je 0x148220 ; xor eax, eax ; ret
0x000000000014afc2 : je 0x14afd0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014b082 : je 0x14b090 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014b182 : je 0x14b190 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001532c2 : je 0x153245 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000153243 : je 0x153250 ; pop rbx ; ret
0x00000000001532f6 : je 0x1532fb ; mov r8, rax ; mov rax, r8 ; pop rbx ; ret
0x000000000015376f : je 0x153780 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001571c5 : je 0x1571f0 ; mov eax, r8d ; ret
0x0000000000157215 : je 0x157240 ; mov eax, r8d ; ret
0x000000000017ec75 : je 0x17ec78 ; xchg edx, eax ; sub eax, edx ; ret
0x000000000017fc5a : je 0x17fc5d ; xchg edx, eax ; sub eax, edx ; ret
0x0000000000183a18 : je 0x1839f8 ; xor eax, eax ; ret
0x00000000001849d1 : je 0x184a32 ; and ch, al ; std ; xlatb ; ret
0x0000000000184abf : je 0x184b20 ; and ch, al ; std ; xlatb ; ret
0x0000000000184e15 : je 0x184e20 ; sbb eax, eax ; or eax, 1 ; ret
0x00000000001890df : je 0x189160 ; mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x0000000000189e7f : je 0x189f00 ; mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x000000000018a8da : je 0x18a590 ; vzeroupper ; ret
0x000000000018a7b6 : je 0x18a670 ; vzeroupper ; ret
0x000000000018b4e6 : je 0x18b3a0 ; vzeroupper ; ret
0x000000000018e8e7 : je 0x18e8eb ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000196d7f : je 0x196da5 ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000019913e : je 0x199128 ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000026f60 : je 0x26f68 ; ret
0x000000000002fd86 : je 0x2fd90 ; cmp esi, 3 ; je 0x2fd90 ; ret
0x000000000002fd8b : je 0x2fd90 ; ret
0x000000000002fdad : je 0x2fdc8 ; pop rbx ; ret
0x00000000000388fe : je 0x38906 ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000041d0b : je 0x41c58 ; ret
0x0000000000041f89 : je 0x41f90 ; ret
0x0000000000042359 : je 0x42360 ; ret
0x0000000000047464 : je 0x4746c ; mov dword ptr [rdi], 0 ; pop rbx ; ret
0x000000000004830d : je 0x482d0 ; mov eax, 0xffffffff ; ret
0x0000000000052944 : je 0x52953 ; mov eax, ecx ; shl eax, 0x1e ; or eax, edx ; ret
0x0000000000054307 : je 0x5430f ; cmp byte ptr [rax - 1], 0x2f ; jne 0x54300 ; pop rbx ; ret
0x0000000000058975 : je 0x5899b ; or byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x39], cl ; ret
0x0000000000062f11 : je 0x62f20 ; mov eax, r8d ; ret
0x00000000000761d1 : je 0x761d7 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008561f : je 0x8565a ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000086efc : je 0x86f46 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000874a0 : je 0x874a8 ; ret
0x0000000000087593 : je 0x8754d ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000087500 : je 0x8755d ; pop rbp ; pop r12 ; ret
0x000000000008aeaa : je 0x8aeb8 ; mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x8aeb8 ; ret
0x000000000008d2f5 : je 0x8d300 ; ret
0x000000000008d755 : je 0x8d760 ; ret
0x000000000008e593 : je 0x8e5a0 ; pop rbx ; ret
0x0000000000091e89 : je 0x91e90 ; ret
0x000000000009460d : je 0x94610 ; ret
0x0000000000094671 : je 0x94674 ; ret
0x0000000000095180 : je 0x95185 ; pop rbx ; pop rbp ; ret
0x0000000000098f4c : je 0x98f53 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009e1fc : je 0x9e200 ; ret
0x000000000009e2f7 : je 0x9e350 ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x000000000009f323 : je 0x9f330 ; movsx eax, dl ; ret
0x000000000009f416 : je 0x9f420 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a0476 : je 0xa0435 ; ret
0x00000000000a15f8 : je 0xa15fe ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00000000000a2056 : je 0xa2068 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a877b : je 0xa8781 ; cmp eax, esi ; jne 0xa8770 ; mov rax, r8 ; ret
0x00000000000a87af : je 0xa87b5 ; cmp eax, edx ; jne 0xa87a0 ; mov rax, r8 ; ret
0x00000000000a881a : je 0xa8810 ; ret
0x00000000000a8852 : je 0xa8848 ; cmp ecx, esi ; je 0xa8848 ; ret
0x00000000000a8856 : je 0xa8848 ; ret
0x00000000000a88a4 : je 0xa8888 ; mov rax, r8 ; ret
0x00000000000a88ce : je 0xa88d8 ; cmp ecx, esi ; jne 0xa88c0 ; ret
0x00000000000ac0ac : je 0xac0fd ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000ac39a : je 0xac3eb ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000ac71c : je 0xac6f0 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000b16f5 : je 0xb1700 ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x00000000000b1bf8 : je 0xb1bfe ; bsf eax, edx ; ret
0x00000000000b1c9d : je 0xb1cb0 ; bsf rax, rdx ; ret
0x00000000000b1c40 : je 0xb1cc0 ; bsf rax, rdx ; ret
0x00000000000b1e6c : je 0xb1e90 ; bsf rax, rdx ; ret
0x00000000000bbc97 : je 0xbbcb0 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x00000000000bc6f4 : je 0xbc700 ; cmp eax, 2 ; je 0xbc708 ; xor eax, eax ; ret
0x00000000000bc6f9 : je 0xbc708 ; xor eax, eax ; ret
0x00000000000bc744 : je 0xbc728 ; ret
0x00000000000bc7a2 : je 0xbc780 ; ret
0x00000000000bc8c7 : je 0xbc8b0 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bcd86 : je 0xbcd45 ; ret
0x00000000000bdfb9 : je 0xbdfbf ; test edx, edx ; jne 0xbdfb0 ; ret
0x00000000000c6a9d : je 0xc6aa3 ; mov eax, r8d ; ret
0x00000000000cba95 : je 0xcbabb ; or byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x39], cl ; ret
0x00000000000cf616 : je 0xcf680 ; lea rax, [rdi - 0x10] ; ret
0x00000000000cfac9 : je 0xcfae0 ; mov cl, dl ; and cl, 0xf ; je 0xcfaf0 ; ret
0x00000000000cfad0 : je 0xcfaf0 ; ret
0x00000000000cfae5 : je 0xcfb00 ; add rax, 2 ; ret
0x00000000000dcfa7 : je 0xdcfb0 ; xor eax, eax ; ret
0x00000000000dd4b7 : je 0xdd4dd ; and byte ptr [rax - 0x7d], cl ; ret
0x00000000000dd797 : je 0xdd7c4 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000edf2d : je 0xedf68 ; ret
0x00000000000ee2dc : je 0xee31b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ee443 : je 0xee3bd ; ret
0x00000000000ee462 : je 0xee3f7 ; pop rbx ; ret
0x00000000000ee45d : je 0xee417 ; and ebx, 8 ; je 0xee3f7 ; pop rbx ; ret
0x00000000000f1f95 : je 0xf1ff0 ; xor eax, eax ; pop rbp ; ret
0x00000000000f3f05 : je 0xf3f2b ; adc al, ch ; ret
0x00000000000f57d8 : je 0xf57a7 ; dec dword ptr [rax - 0x77] ; ret
0x000000000010c6f7 : jg 0x10c771 ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000010c74b : jg 0x10c7c5 ; ret
0x0000000000112a56 : jg 0x112aa0 ; add esp, 0x40 ; pop r12 ; ret
0x0000000000117c13 : jg 0x117c16 ; ret
0x000000000013c9b2 : jg 0x13c9b5 ; enter 0x480f, -0x3e ; ret
0x000000000013f07f : jg 0x13f036 ; mov byte ptr [r10], 0 ; ret
0x000000000014de06 : jg 0x14de48 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x14de10 ; ret
0x0000000000154506 : jg 0x154548 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x154510 ; ret
0x000000000015a519 : jg 0x15a507 ; dec dword ptr [rax - 0x77] ; ret
0x00000000001680c9 : jg 0x16811a ; ret
0x000000000016814f : jg 0x168198 ; ret
0x000000000016aaa9 : jg 0x16aafa ; ret
0x000000000016ab2f : jg 0x16ab78 ; ret
0x000000000016d0b8 : jg 0x16d101 ; loope 0x16d0af ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016d148 : jg 0x16d191 ; loop 0x16d13f ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016d1bf : jg 0x16d208 ; ret
0x000000000016d1d8 : jg 0x16d221 ; jrcxz 0x16d1cf ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016d268 : jg 0x16d2b1 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016d2e8 : jg 0x16d331 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016d368 : jg 0x16d3b1 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016d3e8 : jg 0x16d431 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016d668 : jg 0x16d6b1 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016d6e8 : jg 0x16d731 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016d778 : jg 0x16d7c1 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016d7f8 : jg 0x16d841 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016d86c : jg 0x16d875 ; ret
0x000000000016d8c6 : jg 0x16d8d7 ; ret
0x000000000016d8c1 : jg 0x16d90a ; psllq mm1, qword ptr [rdi] ; jg 0x16d8d7 ; ret
0x000000000016d936 : jg 0x16d947 ; ret
0x000000000016d9a6 : jg 0x16d9b7 ; ret
0x000000000016d9a1 : jg 0x16d9ea ; or eax, 0xf7f0ff3 ; ret
0x000000000016da16 : jg 0x16da27 ; ret
0x000000000016da11 : jg 0x16da5a ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000016da86 : jg 0x16da97 ; ret
0x000000000016da81 : jg 0x16daca ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000016daf6 : jg 0x16db07 ; ret
0x000000000016daf1 : jg 0x16db3a ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000016db66 : jg 0x16db77 ; ret
0x000000000016db61 : jg 0x16dbaa ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000016dbd6 : jg 0x16dbe7 ; ret
0x000000000016dbd1 : jg 0x16dc1a ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000016dc46 : jg 0x16dc57 ; ret
0x000000000016dcb6 : jg 0x16dcc7 ; ret
0x000000000016dd26 : jg 0x16dd37 ; ret
0x000000000016dd21 : jg 0x16dd6a ; add eax, 0xf7f0ff3 ; ret
0x000000000016dd96 : jg 0x16dda7 ; ret
0x000000000016dd91 : jg 0x16ddda ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000016de06 : jg 0x16de17 ; ret
0x000000000016de01 : jg 0x16de4a ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000016de76 : jg 0x16de87 ; ret
0x000000000016de71 : jg 0x16deba ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000016dee6 : jg 0x16def7 ; ret
0x000000000016dee1 : jg 0x16df2a ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000016fbe8 : jg 0x16fc31 ; loope 0x16fbdf ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016fc78 : jg 0x16fcc1 ; loop 0x16fc6f ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016fcef : jg 0x16fd38 ; ret
0x000000000016fd08 : jg 0x16fd51 ; jrcxz 0x16fcff ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016fd98 : jg 0x16fde1 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016fe18 : jg 0x16fe61 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016fe98 : jg 0x16fee1 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016ff18 : jg 0x16ff61 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000170198 : jg 0x1701e1 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170218 : jg 0x170261 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001702a8 : jg 0x1702f1 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170328 : jg 0x170371 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000017039c : jg 0x1703a5 ; ret
0x00000000001703f6 : jg 0x170407 ; ret
0x00000000001703f1 : jg 0x17043a ; psllq mm1, qword ptr [rdi] ; jg 0x170407 ; ret
0x0000000000170466 : jg 0x170477 ; ret
0x00000000001704d6 : jg 0x1704e7 ; ret
0x00000000001704d1 : jg 0x17051a ; or eax, 0xf7f0ff3 ; ret
0x0000000000170546 : jg 0x170557 ; ret
0x0000000000170541 : jg 0x17058a ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000001705b6 : jg 0x1705c7 ; ret
0x00000000001705b1 : jg 0x1705fa ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000170626 : jg 0x170637 ; ret
0x0000000000170621 : jg 0x17066a ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000170696 : jg 0x1706a7 ; ret
0x0000000000170691 : jg 0x1706da ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000170706 : jg 0x170717 ; ret
0x0000000000170701 : jg 0x17074a ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000170776 : jg 0x170787 ; ret
0x00000000001707e6 : jg 0x1707f7 ; ret
0x0000000000170856 : jg 0x170867 ; ret
0x0000000000170851 : jg 0x17089a ; add eax, 0xf7f0ff3 ; ret
0x00000000001708c6 : jg 0x1708d7 ; ret
0x00000000001708c1 : jg 0x17090a ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000170936 : jg 0x170947 ; ret
0x0000000000170931 : jg 0x17097a ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000001709a6 : jg 0x1709b7 ; ret
0x00000000001709a1 : jg 0x1709ea ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000170a16 : jg 0x170a27 ; ret
0x0000000000170a11 : jg 0x170a5a ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000018a809 : jg 0x18a86b ; vzeroupper ; ret
0x000000000018b75e : jg 0x18b767 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000018b8ef : jg 0x18b914 ; vzeroupper ; ret
0x000000000018b996 : jg 0x18b99b ; vzeroupper ; ret
0x000000000018ba22 : jg 0x18ba47 ; vzeroupper ; ret
0x000000000018bab2 : jg 0x18bab7 ; vzeroupper ; ret
0x000000000018bb28 : jg 0x18bb31 ; vzeroupper ; ret
0x000000000018bb88 : jg 0x18bb91 ; vzeroupper ; ret
0x000000000018bc47 : jg 0x18bc50 ; vzeroupper ; ret
0x000000000018fb08 : jg 0x18fb11 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000018fb1c : jg 0x18fb25 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000018ff8e : jg 0x18ff88 ; ret
0x00000000001901fb : jg 0x190204 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000001901f1 : jg 0x19020a ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000190506 : jg 0x19050f ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000001906ea : jg 0x19070f ; vzeroupper ; ret
0x00000000001907b0 : jg 0x1907b5 ; vzeroupper ; ret
0x0000000000190875 : jg 0x19089a ; vzeroupper ; ret
0x000000000019093a : jg 0x19093f ; vzeroupper ; ret
0x00000000001909b9 : jg 0x1909c2 ; vzeroupper ; ret
0x0000000000190a25 : jg 0x190a2e ; vzeroupper ; ret
0x0000000000190b0f : jg 0x190b18 ; vzeroupper ; ret
0x0000000000190b1d : jg 0x190b26 ; vzeroupper ; ret
0x0000000000192be5 : jg 0x192bf0 ; neg eax ; ret
0x0000000000041d08 : jg 0x41d13 ; bnd je 0x41c58 ; ret
0x0000000000042357 : jg 0x42359 ; je 0x42360 ; ret
0x00000000000425f4 : jg 0x4263e ; sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000047c9c : jg 0x47c27 ; adc byte ptr [rcx - 0x3f76bbea], cl ; ret
0x0000000000057be9 : jg 0x57c60 ; loopne 0x57ba5 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000007bad7 : jg 0x7bae8 ; test byte ptr [rbp - 0x7c000012], dh ; ret
0x000000000008ce5c : jg 0x8cde1 ; inc byte ptr [rdx] ; cmovne edx, ecx ; mov dword ptr [rdi], edx ; ret
0x00000000000b6f56 : jg 0xb6f5f ; ret
0x00000000000b6f66 : jg 0xb6f6f ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000b6f7a : jg 0xb6f83 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000b6f99 : jg 0xb6fa2 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b6fa9 : jg 0xb6fb2 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000b6fb9 : jg 0xb6fc2 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000b6fda : jg 0xb6fe3 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000b6ffa : jg 0xb7003 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b701a : jg 0xb7023 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000b703a : jg 0xb7043 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000b707d : jg 0xb7086 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000b709d : jg 0xb70a6 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000b70bb : jg 0xb70c4 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000b70db : jg 0xb70e4 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000b70fb : jg 0xb7104 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b711b : jg 0xb7124 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000b76c8 : jg 0xb76cb ; jne 0xb7f80 ; ret
0x00000000000b76ec : jg 0xb76f0 ; jne 0xb7f80 ; ret
0x00000000000b770f : jg 0xb7714 ; jne 0xb7f80 ; ret
0x00000000000b772a : jg 0xb7730 ; jne 0xb7f80 ; ret
0x00000000000b774d : jg 0xb7754 ; jne 0xb7f80 ; ret
0x00000000000b7772 : jg 0xb777a ; jne 0xb7f80 ; ret
0x00000000000b7790 : jg 0xb7799 ; jne 0xb7f80 ; ret
0x00000000000b77ac : jg 0xb77b6 ; jne 0xb7f80 ; ret
0x00000000000b77cf : jg 0xb77da ; jne 0xb7f80 ; ret
0x00000000000b77f4 : jg 0xb7800 ; jne 0xb7f80 ; ret
0x00000000000b7812 : jg 0xb781f ; jne 0xb7f80 ; ret
0x00000000000b7832 : jg 0xb7840 ; jne 0xb7f80 ; ret
0x00000000000b7854 : jg 0xb7863 ; jne 0xb7f80 ; ret
0x00000000000b7874 : jg 0xb7884 ; jne 0xb7f80 ; ret
0x00000000000b7894 : jg 0xb78a5 ; jne 0xb7f80 ; ret
0x00000000000b78ae : jg 0xb78c0 ; jne 0xb7f80 ; ret
0x00000000000b78d1 : jg 0xb78e4 ; jne 0xb7f80 ; ret
0x00000000000b78f6 : jg 0xb790a ; jne 0xb7f80 ; ret
0x00000000000b7914 : jg 0xb7929 ; jne 0xb7f80 ; ret
0x00000000000b7934 : jg 0xb794a ; jne 0xb7f80 ; ret
0x00000000000b7957 : jg 0xb796e ; jne 0xb7f80 ; ret
0x00000000000b7976 : jg 0xb798e ; jne 0xb7f80 ; ret
0x00000000000b7996 : jg 0xb79af ; jne 0xb7f80 ; ret
0x00000000000b79b6 : jg 0xb79d0 ; jne 0xb7f80 ; ret
0x00000000000b79d9 : jg 0xb79f4 ; jne 0xb7f80 ; ret
0x00000000000b7a0e : jg 0xb7a2a ; jne 0xb7f80 ; ret
0x00000000000b7a3c : jg 0xb7a59 ; jne 0xb7f80 ; ret
0x00000000000b7a6c : jg 0xb7a8a ; jne 0xb7f80 ; ret
0x00000000000b7a98 : jg 0xb7ab7 ; jne 0xb7f80 ; ret
0x00000000000b7ac8 : jg 0xb7ae8 ; jne 0xb7f80 ; ret
0x00000000000b7af8 : jg 0xb7b19 ; jne 0xb7f80 ; ret
0x00000000000b7b28 : jg 0xb7b4a ; jne 0xb7f80 ; ret
0x00000000000b7c46 : jg 0xb7c4f ; ret
0x00000000000b7c59 : jg 0xb7c62 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000b7c6a : jg 0xb7c73 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000b7c89 : jg 0xb7c92 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b7c99 : jg 0xb7ca2 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000b7cac : jg 0xb7cb5 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000b7cca : jg 0xb7cd3 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000b7cea : jg 0xb7cf3 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b7d0a : jg 0xb7d13 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000b7d2d : jg 0xb7d36 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000b7d6d : jg 0xb7d76 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000b7d8d : jg 0xb7d96 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000b7dab : jg 0xb7db4 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000b7dcb : jg 0xb7dd4 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000b7deb : jg 0xb7df4 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b7e0b : jg 0xb7e14 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000b7f42 : jg 0xb7f4b ; ret
0x00000000000b8086 : jg 0xb80b8 ; ret
0x00000000000b8606 : jg 0xb860f ; lea rax, [rdi + 0xf] ; ret
0x00000000000b8616 : jg 0xb861f ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x00000000000b8649 : jg 0xb8652 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000000b8669 : jg 0xb8672 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000b878f : jg 0xb87e8 ; or eax, 0x1c478d48 ; ret
0x00000000000b8dab : jg 0xb8dae ; jne 0xb97d0 ; ret
0x00000000000b8dd0 : jg 0xb8dd4 ; jne 0xb97d0 ; ret
0x00000000000b8df3 : jg 0xb8df8 ; jne 0xb97d0 ; ret
0x00000000000b8e0e : jg 0xb8e14 ; jne 0xb97d0 ; ret
0x00000000000b8e31 : jg 0xb8e38 ; jne 0xb97d0 ; ret
0x00000000000b8e56 : jg 0xb8e5e ; jne 0xb97d0 ; ret
0x00000000000b8e74 : jg 0xb8e7d ; jne 0xb97d0 ; ret
0x00000000000b8e90 : jg 0xb8e9a ; jne 0xb97d0 ; ret
0x00000000000b8eb3 : jg 0xb8ebe ; jne 0xb97d0 ; ret
0x00000000000b8ed8 : jg 0xb8ee4 ; jne 0xb97d0 ; ret
0x00000000000b8f06 : jg 0xb8f13 ; jne 0xb97d0 ; ret
0x00000000000b8f26 : jg 0xb8f34 ; jne 0xb97d0 ; ret
0x00000000000b8f48 : jg 0xb8f57 ; jne 0xb97d0 ; ret
0x00000000000b8f78 : jg 0xb8f88 ; jne 0xb97d0 ; ret
0x00000000000b8fa8 : jg 0xb8fb9 ; jne 0xb97d0 ; ret
0x00000000000b8fd2 : jg 0xb8fe4 ; jne 0xb97d0 ; ret
0x00000000000b8ff5 : jg 0xb9008 ; jne 0xb97d0 ; ret
0x00000000000b901a : jg 0xb902e ; jne 0xb97d0 ; ret
0x00000000000b9048 : jg 0xb905d ; jne 0xb97d0 ; ret
0x00000000000b9078 : jg 0xb908e ; jne 0xb97d0 ; ret
0x00000000000b90ab : jg 0xb90c2 ; jne 0xb97d0 ; ret
0x00000000000b90da : jg 0xb90f2 ; jne 0xb97d0 ; ret
0x00000000000b910a : jg 0xb9123 ; jne 0xb97d0 ; ret
0x00000000000b913a : jg 0xb9154 ; jne 0xb97d0 ; ret
0x00000000000b916d : jg 0xb9188 ; jne 0xb97d0 ; ret
0x00000000000b91a2 : jg 0xb91be ; jne 0xb97d0 ; ret
0x00000000000b91d0 : jg 0xb91ed ; jne 0xb97d0 ; ret
0x00000000000b9200 : jg 0xb921e ; jne 0xb97d0 ; ret
0x00000000000b922c : jg 0xb924b ; jne 0xb97d0 ; ret
0x00000000000b925c : jg 0xb927c ; jne 0xb97d0 ; ret
0x00000000000b928c : jg 0xb92ad ; jne 0xb97d0 ; ret
0x00000000000b92bc : jg 0xb92de ; jne 0xb97d0 ; ret
0x00000000000b9466 : jg 0xb946f ; lea rax, [rdi + 0x10] ; ret
0x00000000000b9479 : jg 0xb9482 ; mov byte ptr [rdi + 0x10], cl ; lea rax, [rdi + 0x11] ; ret
0x00000000000b94b9 : jg 0xb94c2 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000b94d9 : jg 0xb94e2 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x14] ; ret
0x00000000000b95ff : jg 0xb9658 ; or eax, 0x1d478d48 ; ret
0x00000000000b9792 : jg 0xb979b ; ret
0x00000000000b98d6 : jg 0xb9908 ; lea rax, [rdi + 0x40] ; ret
0x00000000000b98d5 : jg 0xb9956 ; xor byte ptr [rax - 0x73], cl ; ret
0x00000000000ba266 : jg 0xba26f ; ret
0x00000000000ba276 : jg 0xba27f ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000ba28a : jg 0xba293 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000ba2a9 : jg 0xba2b2 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000ba2b9 : jg 0xba2c2 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000ba2c9 : jg 0xba2d2 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000ba2ea : jg 0xba2f3 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000ba30a : jg 0xba313 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000ba32a : jg 0xba333 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000ba34a : jg 0xba353 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000ba38d : jg 0xba396 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000ba3ad : jg 0xba3b6 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000ba3cb : jg 0xba3d4 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000ba3eb : jg 0xba3f4 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000ba40b : jg 0xba414 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000ba42b : jg 0xba434 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000bad56 : jg 0xbad5f ; ret
0x00000000000bad66 : jg 0xbad6f ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000bad7a : jg 0xbad83 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000bad99 : jg 0xbada2 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000bada9 : jg 0xbadb2 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000badb9 : jg 0xbadc2 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000badda : jg 0xbade3 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000badfa : jg 0xbae03 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000bae1a : jg 0xbae23 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000bae3a : jg 0xbae43 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000bae7d : jg 0xbae86 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000bae9d : jg 0xbaea6 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000baebb : jg 0xbaec4 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000baedb : jg 0xbaee4 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000baefb : jg 0xbaf04 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000baf1b : jg 0xbaf24 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000bb0c6 : jg 0xbb0cf ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000bb29f : jg 0xbb2f8 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000bb2bf : jg 0xbb318 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000bb336 : jg 0xbb368 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000bb335 : jg 0xbb3b6 ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000bbdd8 : jg 0xbbe0a ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000bbea6 : jg 0xbbed8 ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000bbf34 : jg 0xbbf3d ; ret
0x00000000000bbfb0 : jg 0xbbfb9 ; ret
0x00000000000bc1bb : jg 0xbc180 ; nop dword ptr [rax] ; mov rax, rdx ; pop rbx ; ret
0x00000000000bc203 : jg 0xbc1fc ; int1 ; mov eax, eax ; ret
0x00000000000cf085 : jg 0xcf089 ; neg eax ; ret
0x00000000000d002b : jg 0xd0050 ; mov rax, r12 ; pop r12 ; ret
0x00000000000e4f83 : jg 0xe4f85 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000e4f9d : jg 0xe4f9f ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000e4fda : jg 0xe4fdc ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000e4feb : jg 0xe4fed ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000e500b : jg 0xe500d ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000005448a : jge 0x5448c ; cmp cl, byte ptr [rdi] ; xchg esp, eax ; ret
0x0000000000056318 : jge 0x56363 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000578c4 : jge 0x578c6 ; add byte ptr [rax], al ; leave ; ret
0x00000000000e4803 : jge 0xe4805 ; add cl, ch ; ret
0x00000000000ea5d8 : jge 0xea5cd ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f23c9 : jge 0xf23fb ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117bff : jl 0x117c0e ; add byte ptr [rcx], al ; ret
0x0000000000117c0d : jl 0x117c1c ; add byte ptr [rbx + 0x17f01f8], al ; ret
0x000000000011f128 : jl 0x11f13d ; je 0x11f12d ; ret
0x000000000018a335 : jl 0x18a34e ; and ecx, ebp ; ret
0x000000000018a480 : jl 0x18a484 ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000018f9ab : jl 0x18f9b0 ; neg eax ; ret
0x000000000018fa88 : jl 0x18fad2 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000018fac4 : jl 0x18fb0e ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000018fcc2 : jl 0x18fd0c ; adc dword ptr [rcx - 1], edi ; ret
0x000000000018fe29 : jl 0x18fe73 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000018ff8b : jl 0x18ffd5 ; adc dword ptr [rdi - 8], edi ; ret
0x00000000001901b0 : jl 0x1901fa ; adc dword ptr [rsi - 1], edx ; ret
0x00000000001901d1 : jl 0x19021b ; adc dword ptr [rsi - 1], edx ; ret
0x00000000001901e4 : jl 0x19022e ; adc dword ptr [rsi - 1], edx ; ret
0x00000000001902b9 : jl 0x190303 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000190311 : jl 0x19035b ; adc dword ptr [rsi + 3], edx ; ret
0x00000000001903ae : jl 0x1903f8 ; adc dword ptr [rsi + 7], edx ; ret
0x00000000001905d4 : jl 0x1905ed ; cld ; vzeroupper ; ret
0x0000000000196b02 : jl 0x196b28 ; adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000038856 : jl 0x3885f ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x000000000004823f : jl 0x48265 ; or al, ch ; cdq ; ret
0x000000000005f3ba : jl 0x5f3e0 ; adc cl, bl ; in eax, 0xdf ; loopne 0x5f34b ; ret
0x00000000000a4eca : jl 0xa4ee6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a540a : jl 0xa5424 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a5467 : jl 0xa5483 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000ac68a : jl 0xac6f0 ; add rax, rdi ; ret
0x00000000000ac69a : jl 0xac6f0 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000ac6ba : jl 0xac6f0 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000ac6da : jl 0xac6f0 ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000010c6fb : jle 0x10c76d ; ret
0x000000000010c747 : jle 0x10c7b9 ; movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x000000000010d053 : jle 0x10d0c5 ; ret
0x000000000010d0dc : jle 0x10d14e ; movups xmmword ptr [rdi + 0xf8], xmm7 ; ret
0x000000000011799a : jle 0x11799b ; inc dword ptr [rbp - 0x7cc08b40] ; ret
0x000000000014e651 : jle 0x14e653 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000152bdc : jle 0x152be8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000018388c : jle 0x1838a4 ; movsxd rax, ecx ; ret
0x0000000000183b0e : jle 0x183bb0 ; ret
0x000000000002fdba : jle 0x2fde0 ; sub eax, 1 ; mov dword ptr [rdx + 8], eax ; pop rbx ; ret
0x00000000000b1c41 : jle 0xb1c8b ; bsf eax, edx ; ret
0x00000000000e5021 : jle 0xe5023 ; add byte ptr [rax], al ; ret
0x00000000001029a1 : jne 0x1029f6 ; add rsp, 0x38 ; ret
0x0000000000102a3f : jne 0x102a30 ; mov eax, dword ptr [rdx + 8] ; ret
0x0000000000106b33 : jne 0x106b18 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010c76e : jne 0x10c775 ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x000000000010d17b : jne 0x10d191 ; add rsp, 0x28 ; ret
0x000000000010d330 : jne 0x10d338 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000010d440 : jne 0x10d447 ; add rsp, 0x18 ; ret
0x000000000010d492 : jne 0x10d499 ; add rsp, 0x18 ; ret
0x000000000010fb93 : jne 0x10fb9d ; movzx eax, al ; add rsp, 0x58 ; ret
0x0000000000112a55 : jne 0x112ad6 ; add rsp, 0x40 ; pop r12 ; ret
0x00000000001133cb : jne 0x113413 ; add rsp, 0x68 ; ret
0x000000000011345a : jne 0x1134a3 ; add rsp, 0x18 ; ret
0x0000000000113512 : jne 0x11355b ; add rsp, 0x58 ; ret
0x00000000001135b0 : jne 0x1135fb ; add rsp, 0x58 ; ret
0x0000000000113a8d : jne 0x113ab4 ; mov eax, r9d ; add rsp, 0x38 ; ret
0x0000000000113afd : jne 0x113b0b ; add rsp, 0x18 ; ret
0x000000000011498f : jne 0x1149eb ; add rsp, 0x38 ; ret
0x0000000000114a2f : jne 0x114a8b ; add rsp, 0x38 ; ret
0x0000000000114ae5 : jne 0x114b2f ; add esp, 0x38 ; ret
0x0000000000114ae4 : jne 0x114b5b ; add rsp, 0x38 ; ret
0x0000000000114bb5 : jne 0x114bff ; add esp, 0x38 ; ret
0x0000000000114bb4 : jne 0x114c2b ; add rsp, 0x38 ; ret
0x0000000000114cae : jne 0x114cb5 ; add rsp, 0x28 ; ret
0x00000000001155a9 : jne 0x1155f5 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001157f4 : jne 0x115807 ; add rsp, 0x58 ; ret
0x000000000011586d : jne 0x115874 ; add rsp, 0x28 ; ret
0x0000000000115944 : jne 0x11597d ; add rsp, 0x68 ; ret
0x0000000000115d2a : jne 0x115d00 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000115e0b : jne 0x115de0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000115f32 : jne 0x115ef4 ; xor eax, eax ; pop rbp ; ret
0x0000000000115f8d : jne 0x115f60 ; ret
0x0000000000116b68 : jne 0x116ba5 ; add rsp, 0x38 ; ret
0x0000000000116c37 : jne 0x116c75 ; add rsp, 0x38 ; ret
0x000000000011739e : jne 0x1173b0 ; mov eax, 1 ; ret
0x0000000000117bfa : jne 0x117c08 ; sub dword ptr [rip + 0xd7c4d], 1 ; ret
0x0000000000118298 : jne 0x1182a2 ; add rsp, 0xd8 ; ret
0x0000000000118371 : jne 0x11837b ; add rsp, 0xd8 ; ret
0x00000000001196b9 : jne 0x1196c0 ; add rsp, 0x18 ; ret
0x000000000011a6b6 : jne 0x11a6c0 ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x000000000011a764 : jne 0x11a770 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011bd2d : jne 0x11bd37 ; add rsp, 0xd8 ; ret
0x000000000011bded : jne 0x11bdf7 ; add rsp, 0xd8 ; ret
0x000000000011bfcb : jne 0x11bfd5 ; add rsp, 0x418 ; ret
0x000000000011c02e : jne 0x11c069 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011c234 : jne 0x11c23e ; add rsp, 0xd8 ; ret
0x000000000011c4a1 : jne 0x11c4ab ; add rsp, 0xd8 ; ret
0x000000000011d008 : jne 0x11cff8 ; mov rax, qword ptr [rax + 8] ; ret
0x000000000011f0b9 : jne 0x11f0d3 ; add rsp, 0x68 ; ret
0x0000000000120abe : jne 0x120ac5 ; add rsp, 0x18 ; ret
0x0000000000121103 : jne 0x12114b ; add rsp, 0x58 ; ret
0x0000000000123101 : jne 0x123108 ; ret
0x000000000012316a : jne 0x123170 ; ret
0x0000000000123353 : jne 0x123360 ; ret
0x0000000000123a51 : jne 0x123a58 ; ret
0x0000000000123aae : jne 0x123ab8 ; ret
0x0000000000123c83 : jne 0x123c90 ; ret
0x000000000012792e : jne 0x127938 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000129b4f : jne 0x129b59 ; add rsp, 0xd8 ; ret
0x000000000012b680 : jne 0x12b6b0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012b878 : jne 0x12b882 ; add rsp, 0xd8 ; ret
0x000000000012b916 : jne 0x12b8fe ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012ce5d : jne 0x12ce50 ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000012ced9 : jne 0x12cee8 ; cmp qword ptr [rdi], 0 ; je 0x12cef0 ; ret
0x000000000012d0d4 : jne 0x12d1ad ; leave ; ret
0x000000000012dcee : jne 0x12dc98 ; mov rax, rdi ; ret
0x000000000012de59 : jne 0x12de68 ; add rsp, 0xd8 ; ret
0x000000000012df4f : jne 0x12df65 ; add rsp, 0xd8 ; ret
0x000000000012e069 : jne 0x12e073 ; add rsp, 0xd8 ; ret
0x000000000012e131 : jne 0x12e13b ; add rsp, 0xd8 ; ret
0x000000000012eadf : jne 0x12eaf0 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012edce : jne 0x12ed79 ; mov rax, rdi ; ret
0x000000000012ef6f : jne 0x12ef85 ; add rsp, 0xd8 ; ret
0x000000000012f089 : jne 0x12f093 ; add rsp, 0xd8 ; ret
0x000000000012f151 : jne 0x12f15b ; add rsp, 0xd8 ; ret
0x000000000012f598 : jne 0x12f5a5 ; add rsp, 0x28 ; ret
0x000000000012f5f8 : jne 0x12f605 ; add rsp, 0x28 ; ret
0x000000000012f6c1 : jne 0x12f6cb ; add rsp, 0xd8 ; ret
0x000000000012f7a1 : jne 0x12f7ab ; add rsp, 0xd8 ; ret
0x000000000012f881 : jne 0x12f88b ; add rsp, 0xd8 ; ret
0x00000000001365cf : jne 0x1365f9 ; add rsp, 0x38 ; ret
0x000000000013666c : jne 0x136673 ; add rsp, 0x38 ; ret
0x00000000001366d9 : jne 0x1366e0 ; add rsp, 0x28 ; ret
0x0000000000137b53 : jne 0x137b40 ; pop rbx ; ret
0x000000000013a64d : jne 0x13a677 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000013b94c : jne 0x13b920 ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000013c32d : jne 0x13c348 ; mov eax, r8d ; ret
0x000000000013c6f2 : jne 0x13c700 ; add rsp, 0x18 ; ret
0x000000000013c7ed : jne 0x13c835 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013c88b : jne 0x13c8a4 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000013cc9b : jne 0x13ccf1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013e129 : jne 0x13e145 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000013e17e : jne 0x13e185 ; add rsp, 0x18 ; ret
0x000000000013e1d1 : jne 0x13e1d8 ; add rsp, 0x28 ; ret
0x000000000013ea60 : jne 0x13ea67 ; add rsp, 0x18 ; ret
0x000000000013efd7 : jne 0x13efbd ; mov eax, r10d ; ret
0x0000000000141110 : jne 0x141118 ; ret
0x0000000000141154 : jne 0x141140 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014123e : jne 0x141248 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000142f7e : jne 0x142f88 ; ret
0x00000000001449bd : jne 0x1449c6 ; add rsp, 0x10 ; pop r12 ; ret
0x00000000001461c4 : jne 0x146148 ; ret
0x000000000014632b : jne 0x146333 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000014746e : jne 0x1474e7 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001476df : jne 0x147715 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001482b7 : jne 0x1482c0 ; mov dword ptr [rsi], 0 ; ret
0x0000000000149101 : jne 0x149143 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000149674 : jne 0x1496a2 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000149712 : jne 0x149745 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014a325 : jne 0x14a337 ; add rsp, 0x40 ; pop rbx ; ret
0x000000000014de0c : jne 0x14de10 ; ret
0x000000000014e567 : jne 0x14e5ca ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000151723 : jne 0x151741 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000151a75 : jne 0x151aea ; add rsp, 0x10 ; pop r12 ; ret
0x0000000000151cec : jne 0x151d5a ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000151e2c : jne 0x151e9a ; add rsp, 0x30 ; pop rbx ; ret
0x00000000001522b3 : jne 0x1522c3 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000001524c2 : jne 0x15253a ; add rsp, 0x28 ; pop rbx ; pop r12 ; ret
0x0000000000153957 : jne 0x153960 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001539e5 : jne 0x1539ec ; add rsp, 0x78 ; ret
0x0000000000153a5b : jne 0x153a62 ; add rsp, 0x78 ; ret
0x0000000000153acb : jne 0x153ad2 ; add rsp, 0x78 ; ret
0x0000000000153b3b : jne 0x153b42 ; add rsp, 0x78 ; ret
0x0000000000153b9c : jne 0x153ba3 ; add rsp, 0x78 ; ret
0x0000000000153c00 : jne 0x153c07 ; add rsp, 0x78 ; ret
0x0000000000153c6b : jne 0x153c72 ; add rsp, 0x78 ; ret
0x0000000000153cee : jne 0x153cf5 ; add rsp, 0x78 ; ret
0x0000000000154223 : jne 0x154248 ; add rsp, 0x28 ; ret
0x000000000015450c : jne 0x154510 ; ret
0x0000000000155c96 : jne 0x155c9d ; add rsp, 0x48 ; ret
0x0000000000155d01 : jne 0x155d43 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000155d91 : jne 0x155dd2 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000155e61 : jne 0x155ea5 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000001562b1 : jne 0x1562f4 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000156341 : jne 0x156383 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001563d0 : jne 0x156420 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000156470 : jne 0x1564c0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000156511 : jne 0x156559 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001565a1 : jne 0x1565e3 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000157291 : jne 0x1572d5 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000157321 : jne 0x157365 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001573b1 : jne 0x1573f5 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000157441 : jne 0x157485 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000157b8d : jne 0x157b97 ; movzx eax, al ; add rsp, 0x18 ; ret
0x0000000000157bee : jne 0x157bf8 ; movzx eax, al ; add rsp, 0x18 ; ret
0x0000000000157c5a : jne 0x157c62 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000157ccd : jne 0x157cd5 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015cac2 : jne 0x15caf4 ; add rsp, 0x18 ; ret
0x000000000015cdb9 : jne 0x15cdec ; add rsp, 0x10 ; pop rbp ; ret
0x000000000015ce49 : jne 0x15ce7c ; add rsp, 0x10 ; pop rbp ; ret
0x000000000015e928 : jne 0x15e93f ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000015fa14 : jne 0x15fa4e ; add rsp, 0x58 ; ret
0x000000000015fb0b : jne 0x15fb54 ; add rsp, 0x68 ; ret
0x000000000015fcb4 : jne 0x15fd04 ; add rsp, 0x68 ; ret
0x000000000015fd7d : jne 0x15fdbc ; add rsp, 0x38 ; ret
0x0000000000160b02 : jne 0x160b10 ; pop rbx ; ret
0x0000000000160b32 : jne 0x160b40 ; pop rbx ; ret
0x0000000000160e10 : jne 0x160e17 ; add rsp, 0x28 ; ret
0x000000000016339b : jne 0x1633a3 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000163421 : jne 0x163429 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000178351 : jne 0x178900 ; ret
0x0000000000183a14 : jne 0x183a80 ; test esi, esi ; je 0x1839f8 ; xor eax, eax ; ret
0x0000000000183f0d : jne 0x183ef0 ; sub eax, ecx ; vzeroupper ; ret
0x00000000001843e2 : jne 0x1843c0 ; sub eax, ecx ; vzeroupper ; ret
0x0000000000184713 : jne 0x184730 ; xor eax, eax ; vzeroupper ; ret
0x0000000000184ec4 : jne 0x184dd0 ; ret
0x0000000000184dca : jne 0x184dd0 ; vzeroupper ; ret
0x0000000000188a53 : jne 0x188a80 ; mov rax, r8 ; vzeroupper ; ret
0x000000000018a2d0 : jne 0x18a700 ; vzeroupper ; ret
0x000000000018afe8 : jne 0x18b430 ; vzeroupper ; ret
0x000000000018bc18 : jne 0x18bbfb ; vzeroupper ; ret
0x000000000018be02 : jne 0x18bd80 ; ret
0x000000000018bd7a : jne 0x18bd80 ; vzeroupper ; ret
0x000000000018bda6 : jne 0x18bd8c ; ret
0x000000000018c1c3 : jne 0x18c1e0 ; xor eax, eax ; vzeroupper ; ret
0x000000000018c31e : jne 0x18c2f9 ; vzeroupper ; ret
0x000000000018c63b : jne 0x18c620 ; sub eax, ecx ; vzeroupper ; ret
0x000000000018c799 : jne 0x18c769 ; vzeroupper ; ret
0x000000000018cb10 : jne 0x18caf0 ; sub eax, ecx ; vzeroupper ; ret
0x000000000018e121 : jne 0x18eb53 ; xor eax, eax ; ret
0x000000000018e149 : jne 0x18eb5f ; xor eax, eax ; ret
0x000000000018f751 : jne 0x18f993 ; xor eax, eax ; ret
0x000000000018f777 : jne 0x18f9a6 ; xor eax, eax ; ret
0x0000000000190adb : jne 0x190ab6 ; vzeroupper ; ret
0x0000000000190c45 : jne 0x190bd0 ; lea rax, [rdi + 3] ; ret
0x0000000000190c17 : jne 0x190bd0 ; lea rax, [rdi + 7] ; ret
0x00000000001923a4 : jne 0x1925b0 ; xor eax, eax ; ret
0x00000000001925c1 : jne 0x1925c5 ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000192451 : jne 0x1925c5 ; xor eax, eax ; ret
0x0000000000192aad : jne 0x192be0 ; ret
0x0000000000192bd6 : jne 0x192be0 ; xor eax, eax ; ret
0x0000000000197385 : jne 0x19736d ; pop rbx ; ret
0x00000000001985fe : jne 0x1985e0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001986d6 : jne 0x1986c0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000198729 : jne 0x198700 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000019894b : jne 0x198935 ; pop rbx ; ret
0x00000000001989ed : jne 0x1989d0 ; pop rbx ; ret
0x0000000000198b7f : jne 0x198b70 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000023a75 : jne 0x23a3b ; ret
0x0000000000024489 : jne 0x244c0 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000002ca02 : jne 0x2ca04 ; add byte ptr [rbp - 0x77], cl ; ret
0x0000000000033d9f : jne 0x33da8 ; mov eax, r8d ; ret
0x0000000000040fbd : jne 0x40f98 ; ret
0x0000000000041e26 : jne 0x41e30 ; fadd st(0) ; add rsp, 8 ; ret
0x00000000000421ec : jne 0x421f8 ; addsd xmm0, xmm0 ; ret
0x0000000000042352 : jne 0x42360 ; test eax, 0x7fffff ; je 0x42360 ; ret
0x0000000000042518 : jne 0x42520 ; addss xmm0, xmm0 ; ret
0x0000000000042b95 : jne 0x42b9c ; add rsp, 0x18 ; ret
0x0000000000042c3a : jne 0x42c48 ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x0000000000042eef : jne 0x42ef9 ; add rsp, 0x148 ; ret
0x00000000000435c4 : jne 0x435d5 ; add rsp, 0x118 ; ret
0x0000000000043647 : jne 0x43658 ; add rsp, 0x118 ; ret
0x0000000000043752 : jne 0x4375c ; add rsp, 0x98 ; ret
0x0000000000043996 : jne 0x439b2 ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000043cf2 : jne 0x43cfc ; add rsp, 0x148 ; ret
0x0000000000044422 : jne 0x4442c ; add rsp, 0xa8 ; ret
0x00000000000466ff : jne 0x4671b ; add byte ptr [rcx], al ; xor eax, eax ; pop rbx ; ret
0x00000000000472db : jne 0x472a0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004736f : jne 0x47378 ; pop rbx ; ret
0x0000000000047443 : jne 0x4744a ; add rsp, 0x28 ; ret
0x0000000000047533 : jne 0x4753a ; add rsp, 0x28 ; ret
0x0000000000047867 : jne 0x478ba ; add rsp, 0x18 ; ret
0x0000000000047dbd : jne 0x47dc4 ; add rsp, 0x18 ; ret
0x0000000000047e0a : jne 0x47e11 ; add rsp, 0x18 ; ret
0x0000000000047e5c : jne 0x47e63 ; add rsp, 0x18 ; ret
0x0000000000047ea9 : jne 0x47eb0 ; add rsp, 0x18 ; ret
0x0000000000047efc : jne 0x47f03 ; add rsp, 0x18 ; ret
0x0000000000047f49 : jne 0x47f50 ; add rsp, 0x18 ; ret
0x0000000000051aea : jne 0x51b1c ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000051b9a : jne 0x51bfb ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000051c68 : jne 0x51cc4 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000052c05 : jne 0x52c0f ; add rsp, 0xd8 ; ret
0x000000000005414f : jne 0x54159 ; add rsp, 0xd8 ; ret
0x000000000005430d : jne 0x54300 ; pop rbx ; ret
0x0000000000054338 : jne 0x54330 ; pop rbx ; ret
0x000000000005503e : jne 0x55043 ; push r10 ; ret
0x0000000000055547 : jne 0x5554c ; push r10 ; ret
0x000000000005562c : jne 0x55610 ; mov eax, 1 ; ret
0x0000000000055874 : jne 0x55858 ; mov eax, 1 ; ret
0x0000000000055c43 : jne 0x55c30 ; mov rax, rdx ; ret
0x0000000000056527 : jne 0x56518 ; mov rax, rdx ; ret
0x00000000000578c2 : jne 0x57945 ; leave ; ret
0x0000000000057bea : jne 0x57bcc ; mov eax, 1 ; ret
0x000000000005b05a : jne 0x5b0ad ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000005b875 : jne 0x5b895 ; add rsp, 0x38 ; ret
0x0000000000061c78 : jne 0x61c82 ; add rsp, 0xd8 ; ret
0x0000000000061d4d : jne 0x61d57 ; add rsp, 0xd8 ; ret
0x0000000000061e04 : jne 0x61e0e ; add rsp, 0xd8 ; ret
0x0000000000061ed6 : jne 0x61ee0 ; add rsp, 0xd8 ; ret
0x0000000000061f98 : jne 0x61fa2 ; add rsp, 0xd8 ; ret
0x0000000000062058 : jne 0x62062 ; add rsp, 0xd8 ; ret
0x0000000000062146 : jne 0x62150 ; add rsp, 0xd8 ; ret
0x000000000006221d : jne 0x62227 ; add rsp, 0xd8 ; ret
0x00000000000627ac : jne 0x627b0 ; pop rbx ; ret
0x0000000000062de7 : jne 0x62df7 ; add rsp, 0x18 ; ret
0x0000000000063088 : jne 0x63090 ; sub dword ptr [rdi], 1 ; ret
0x0000000000063170 : jne 0x6317a ; add rsp, 0xd8 ; ret
0x000000000006324b : jne 0x63255 ; add rsp, 0xd8 ; ret
0x0000000000083f3a : jne 0x83f48 ; sub dword ptr [rip + 0x16a83d], 1 ; ret
0x00000000000864c8 : jne 0x864d2 ; add rsp, 0xd8 ; ret
0x0000000000086584 : jne 0x8658e ; add rsp, 0xd8 ; ret
0x000000000008667d : jne 0x86687 ; add rsp, 0xd8 ; ret
0x000000000008674d : jne 0x86757 ; add rsp, 0xd8 ; ret
0x0000000000086806 : jne 0x86810 ; add rsp, 0xd8 ; ret
0x0000000000086e21 : jne 0x86e10 ; ret
0x000000000008dbd8 : jne 0x8dbeb ; add rsp, 0x48 ; ret
0x000000000008e162 : jne 0x8e170 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000908a9 : jne 0x908b0 ; ret
0x0000000000090fee : jne 0x91000 ; sub dword ptr [rip + 0x15d7c9], 1 ; ret
0x00000000000916e9 : jne 0x916d8 ; ret
0x0000000000092726 : jne 0x92718 ; ret
0x00000000000929e1 : jne 0x929a3 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009354e : jne 0x93540 ; ret
0x00000000000938fa : jne 0x93908 ; sub dword ptr [rip + 0x15aebd], 1 ; ret
0x0000000000094aac : jne 0x94adc ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000094d2b : jne 0x94d40 ; and dword ptr [rdi + 8], 0xfffffffe ; xor eax, eax ; ret
0x000000000009563d : jne 0x95628 ; pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; ret
0x00000000000991ff : jne 0x99242 ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000099eae : jne 0x99e90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009c26f : jne 0x9c258 ; sub rax, 0x10 ; ret
0x000000000009e851 : jne 0x9e840 ; xor eax, eax ; ret
0x000000000009e92b : jne 0x9e920 ; ret
0x00000000000a13f4 : jne 0xa13e0 ; ret
0x00000000000a1df7 : jne 0xa1de0 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a861f : jne 0xa8610 ; mov qword ptr [rdx], rcx ; ret
0x00000000000a877f : jne 0xa8770 ; mov rax, r8 ; ret
0x00000000000a87b3 : jne 0xa87a0 ; mov rax, r8 ; ret
0x00000000000a87f0 : jne 0xa87d0 ; mov rax, r8 ; ret
0x00000000000a88a0 : jne 0xa8888 ; cmp eax, ecx ; je 0xa8888 ; mov rax, r8 ; ret
0x00000000000a88d2 : jne 0xa88c0 ; ret
0x00000000000a892c : jne 0xa8908 ; ret
0x00000000000aa64c : jne 0xaa630 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000000ac157 : jne 0xac1b0 ; xor eax, eax ; ret
0x00000000000ac127 : jne 0xac1d0 ; xor eax, eax ; ret
0x00000000000ac60a : jne 0xac680 ; xor eax, eax ; ret
0x00000000000ac639 : jne 0xac6b0 ; xor eax, eax ; ret
0x00000000000b1d67 : jne 0xb1d6d ; xor rax, rax ; ret
0x00000000000b76ca : jne 0xb7f80 ; ret
0x00000000000b8dad : jne 0xb97d0 ; ret
0x00000000000bb4e1 : jne 0xbb4d0 ; ret
0x00000000000bb591 : jne 0xbb580 ; ret
0x00000000000bb701 : jne 0xbb6f0 ; lea rax, [rcx - 1] ; ret
0x00000000000bb851 : jne 0xbb840 ; sub rax, 1 ; ret
0x00000000000bbf57 : jne 0xbbf5d ; mov rax, rdi ; ret
0x00000000000bc031 : jne 0xbc017 ; repz ret
0x00000000000bcb41 : jne 0xbcb18 ; mov rax, r8 ; ret
0x00000000000bcc38 : jne 0xbcc28 ; xor eax, eax ; ret
0x00000000000bccce : jne 0xbcc65 ; test edx, edx ; jne 0xbccb0 ; ret
0x00000000000bccd2 : jne 0xbccb0 ; ret
0x00000000000bdfbd : jne 0xbdfb0 ; ret
0x00000000000beeb2 : jne 0xbeead ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000c680b : jne 0xc686c ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000c68e9 : jne 0xc6945 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c69bb : jne 0xc69ed ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ca0b3 : jne 0xca0d4 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000cab90 : jne 0xcab9a ; add rsp, 0xd8 ; ret
0x00000000000cac6b : jne 0xcac75 ; add rsp, 0xd8 ; ret
0x00000000000cdfbb : jne 0xce00e ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000ce337 : jne 0xce390 ; xor eax, eax ; ret
0x00000000000ce307 : jne 0xce3b0 ; xor eax, eax ; ret
0x00000000000cef2f : jne 0xcf080 ; ret
0x00000000000cef0e : jne 0xcf080 ; xor eax, eax ; ret
0x00000000000cf15a : jne 0xcf160 ; mov eax, r9d ; ret
0x00000000000cf5fb : jne 0xcf650 ; lea rax, [rdi - 0x10] ; ret
0x00000000000cf697 : jne 0xcf69d ; xor rax, rax ; ret
0x00000000000d01f3 : jne 0xd0209 ; add rsp, 0x28 ; ret
0x00000000000d026d : jne 0xd0275 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000000d1039 : jne 0xd1064 ; add rsp, 0x28 ; ret
0x00000000000d42e6 : jne 0xd42f0 ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000d4a8d : jne 0xd4aa0 ; mov rax, r8 ; add rsp, 8 ; ret
0x00000000000da6bc : jne 0xda6c3 ; add rsp, 0x18 ; ret
0x00000000000dcf8c : jne 0xdcf93 ; add rsp, 0x18 ; ret
0x00000000000dd817 : jne 0xdd800 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000df40f : jne 0xdf463 ; add rsp, 0x38 ; ret
0x00000000000e160b : jne 0xe167c ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e2e15 : jne 0xe2e25 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000e2ec9 : jne 0xe2ed0 ; add rsp, 8 ; ret
0x00000000000e3666 : jne 0xe36a9 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000e3836 : jne 0xe3879 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000e418f : jne 0xe41e3 ; add rsp, 0x38 ; ret
0x00000000000e422f : jne 0xe4283 ; add rsp, 0x38 ; ret
0x00000000000e44ff : jne 0xe4563 ; add rsp, 0x38 ; ret
0x00000000000e45af : jne 0xe4613 ; add rsp, 0x38 ; ret
0x00000000000e4f4b : jne 0xe4f50 ; ret
0x00000000000e4f59 : jne 0xe4fcd ; mov eax, 0x7d00 ; ret
0x00000000000e4fc5 : jne 0xe4fe3 ; mov eax, 0xfffa ; ret
0x00000000000e50e6 : jne 0xe50f0 ; mov eax, 0x40 ; ret
0x00000000000e81e3 : jne 0xe8191 ; xor eax, eax ; ret
0x00000000000e81a5 : jne 0xe81d9 ; mov eax, 1 ; ret
0x00000000000e81c6 : jne 0xe81f9 ; mov eax, 1 ; ret
0x00000000000e82d0 : jne 0xe82c0 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e83d1 : jne 0xe83c0 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ee495 : jne 0xee3bd ; ret
0x000000000011865e : jno 0x11866d ; add byte ptr [rcx], al ; add rsp, 8 ; ret
0x000000000018e3de : jno 0x18e3e7 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018fa84 : jno 0x18fa84 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000018fcbe : jno 0x18fcbe ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000018fe25 : jno 0x18fe2d ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000018ff8a : jno 0x190008 ; adc qword ptr [rdi - 8], rdi ; ret
0x00000000000422b9 : jno 0x422d1 ; add byte ptr [rdi], cl ; push rsp ; ret
0x00000000000860c1 : jno 0x860c7 ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000086268 : jno 0x8626e ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000117d54 : jnp 0x117d63 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000121ae1 : jnp 0x121a8b ; or al, 0 ; pop rbx ; ret
0x0000000000137b4e : jnp 0x137b98 ; test rdi, rdi ; jne 0x137b40 ; pop rbx ; ret
0x0000000000047f87 : jnp 0x47f1c ; sbb al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000084438 : jnp 0x84450 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000015deec : jns 0x15def0 ; ret
0x000000000018fa8b : jns 0x18fa8c ; ret
0x000000000018fcc5 : jns 0x18fcc6 ; ret
0x000000000018fe2c : jns 0x18fe35 ; ret
0x00000000000479c9 : jns 0x47989 ; xor eax, eax ; ret
0x00000000000bc853 : jns 0xbc870 ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000000bcaf3 : jns 0xbcb1d ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000000bafc6 : jns 0xffffffffed3bb323 ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000bb028 : jns 0xffffffffed3bb785 ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000bb048 : jns 0xffffffffed3bb8a5 ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000010c748 : jo 0x10c759 ; adc dword ptr [rdi + 0x78], edi ; ret
0x000000000010d0dd : jo 0x10d0ee ; adc dword ptr [rdi + 0xf8], edi ; ret
0x000000000015305c : jo 0x1530b9 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000087f5e : jo 0x87fa0 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000bd0d5 : jo 0xbd132 ; pop rbp ; pop r12 ; ret
0x00000000000bd5cc : jo 0xbd629 ; pop rbp ; pop r12 ; ret
0x0000000000149283 : jp 0x1492dd ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000018a582 : jp 0x18a585 ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000000328ac : jp 0x328e6 ; jbe 0x328c7 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000421ea : jp 0x421f8 ; jne 0x421f8 ; addsd xmm0, xmm0 ; ret
0x0000000000042516 : jp 0x42520 ; jne 0x42520 ; addss xmm0, xmm0 ; ret
0x0000000000106b34 : jrcxz 0x106b7e ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011c6f5 : jrcxz 0x11c6f7 ; loop 0x11c6f8 ; dec dword ptr [rax - 0x7f] ; ret
0x000000000016d1da : jrcxz 0x16d1cf ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016fd0a : jrcxz 0x16fcff ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000018c63c : jrcxz 0x18c667 ; enter -0x73b, 0x77 ; ret
0x000000000002c739 : jrcxz 0x2c764 ; ret
0x0000000000035a20 : jrcxz 0x35a21 ; inc dword ptr [rax - 0x76b7bcc8] ; ret
0x000000000005ea24 : jrcxz 0x5ea6a ; mov eax, eax ; ret
0x000000000007ea64 : jrcxz 0x7ea4f ; ret
0x0000000000094607 : jrcxz 0x945c4 ; cmp r11d, 0xa ; je 0x94610 ; ret
0x00000000000dd816 : jrcxz 0xdd88d ; out 0x5b, eax ; pop rbp ; pop r12 ; ret
0x00000000000e6c39 : jrcxz 0xe6bf2 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ee460 : jrcxz 0xee46a ; je 0xee3f7 ; pop rbx ; ret
0x000000000010c559 : js 0x10c570 ; cmp rbx, rax ; pop rbx ; setl al ; ret
0x000000000010c6f8 : js 0x10c709 ; adc dword ptr [rsi + 0x70], edi ; ret
0x0000000000114373 : js 0x114327 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000122a08 : js 0x12298d ; loopne 0x122a14 ; movzx eax, ax ; ret
0x0000000000122b38 : js 0x122abd ; loopne 0x122b3d ; ret
0x0000000000122bc8 : js 0x122b4d ; loopne 0x122bce ; movzx eax, ax ; ret
0x0000000000122ed8 : js 0x122e5d ; loopne 0x122ee0 ; movzx eax, ax ; ret
0x00000000001233e9 : js 0x12336e ; loopne 0x1233f5 ; movzx eax, ax ; ret
0x0000000000123509 : js 0x12348e ; loopne 0x12350e ; ret
0x0000000000123589 : js 0x12350e ; loopne 0x12358f ; movzx eax, ax ; ret
0x0000000000123859 : js 0x1237de ; loopne 0x123861 ; movzx eax, ax ; ret
0x000000000012ce5b : js 0x12ce65 ; jne 0x12ce50 ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000013c930 : js 0x13c940 ; mov rax, rdx ; movsxd rdx, ecx ; ret
0x000000000015ca18 : js 0x15ca28 ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x000000000018b1b4 : js 0x18b1b8 ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000034085 : js 0x3400a ; loopne 0x34091 ; movzx eax, ax ; ret
0x00000000000340c5 : js 0x3404a ; loopne 0x340cb ; movzx eax, ax ; ret
0x0000000000034165 : js 0x340ea ; loopne 0x3416d ; movzx eax, ax ; ret
0x0000000000034245 : js 0x341ca ; loopne 0x3424a ; ret
0x00000000000342de : js 0x34263 ; loopne 0x342e3 ; ret
0x00000000000342fe : js 0x34283 ; loopne 0x3430a ; movzx eax, ax ; ret
0x000000000003433e : js 0x342c3 ; loopne 0x34344 ; movzx eax, ax ; ret
0x00000000000343de : js 0x34363 ; loopne 0x343e6 ; movzx eax, ax ; ret
0x0000000000054335 : js 0x54338 ; add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x000000000008aeb1 : js 0x8aeb8 ; ret
0x00000000000e521b : js 0xe5220 ; ret
0x00000000000baf68 : js 0xffffffffed3bb1c5 ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000baf96 : js 0xffffffffed3bb3f3 ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000bafe8 : js 0xffffffffed3bb845 ; mov byte ptr [rdi + 9], ch ; ret
0x0000000000138380 : lahf ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000074f79 : lahf ; ret
0x0000000000119dfb : lahf ; vpaddsw ymm0, ymm15, ymmword ptr [rcx + 0xf] ; lahf ; ret
0x000000000016d866 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000013c23f : lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x00000000000ce096 : lea eax, [rax + rax - 1] ; ret
0x0000000000102aab : lea eax, [rax + rax*8 + 5] ; ret
0x00000000000bce39 : lea eax, [rax + rbx*4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac184 : lea eax, [rax + rdi + 0x10] ; ret
0x00000000000ac194 : lea eax, [rax + rdi + 0x20] ; ret
0x00000000000ac674 : lea eax, [rax + rdi + 0x30] ; ret
0x00000000000ac164 : lea eax, [rax + rdi - 0x10] ; ret
0x00000000000dd75b : lea eax, [rax + rdx*8] ; ret
0x000000000009c1ef : lea eax, [rax - 8] ; ret
0x00000000000e8431 : lea eax, [rbx + 2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e8331 : lea eax, [rbx + 8] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013c3f4 : lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000013c240 : lea eax, [rcx + rax + 2] ; pop rbx ; ret
0x00000000000b1abd : lea eax, [rcx + rsi] ; ret
0x0000000000051442 : lea eax, [rcx - 0x43] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret
0x0000000000087dff : lea eax, [rcx - 1] ; ret
0x00000000000b861c : lea eax, [rdi + 0x10] ; ret
0x00000000000b8631 : lea eax, [rdi + 0x11] ; ret
0x00000000000b864f : lea eax, [rdi + 0x12] ; ret
0x00000000000b866f : lea eax, [rdi + 0x13] ; ret
0x00000000000b8692 : lea eax, [rdi + 0x14] ; ret
0x00000000000b86b1 : lea eax, [rdi + 0x15] ; ret
0x00000000000b86d1 : lea eax, [rdi + 0x16] ; ret
0x00000000000b86f1 : lea eax, [rdi + 0x17] ; ret
0x00000000000b8714 : lea eax, [rdi + 0x18] ; ret
0x00000000000b8739 : lea eax, [rdi + 0x19] ; ret
0x00000000000b8757 : lea eax, [rdi + 0x1a] ; ret
0x00000000000b8777 : lea eax, [rdi + 0x1b] ; ret
0x00000000000b8793 : lea eax, [rdi + 0x1c] ; ret
0x00000000000b87b3 : lea eax, [rdi + 0x1d] ; ret
0x00000000000b87d3 : lea eax, [rdi + 0x1e] ; ret
0x00000000000b87f3 : lea eax, [rdi + 0x1f] ; ret
0x00000000000b9663 : lea eax, [rdi + 0x20] ; ret
0x00000000000b98d9 : lea eax, [rdi + 0x40] ; ret
0x000000000018b399 : lea eax, [rdi + 0x41] ; vzeroupper ; ret
0x000000000018b53c : lea eax, [rdi + 0x80] ; vzeroupper ; ret
0x00000000000b856d : lea eax, [rdi + 0xa] ; ret
0x00000000000b858d : lea eax, [rdi + 0xb] ; ret
0x00000000000b85af : lea eax, [rdi + 0xc] ; ret
0x00000000000b85cf : lea eax, [rdi + 0xd] ; ret
0x00000000000b85ef : lea eax, [rdi + 0xe] ; ret
0x00000000000b8609 : lea eax, [rdi + 0xf] ; ret
0x00000000000b84b7 : lea eax, [rdi + 1] ; ret
0x000000000018abf7 : lea eax, [rdi + 1] ; vzeroupper ; ret
0x00000000000b84ca : lea eax, [rdi + 2] ; ret
0x000000000018ac0b : lea eax, [rdi + 2] ; vzeroupper ; ret
0x00000000000b84d5 : lea eax, [rdi + 3] ; ret
0x000000000018ac25 : lea eax, [rdi + 3] ; vzeroupper ; ret
0x00000000000b84e8 : lea eax, [rdi + 4] ; ret
0x00000000000b84fd : lea eax, [rdi + 5] ; ret
0x00000000000b851b : lea eax, [rdi + 6] ; ret
0x00000000000b8527 : lea eax, [rdi + 7] ; ret
0x00000000000b853a : lea eax, [rdi + 8] ; ret
0x000000000013b3e4 : lea eax, [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000b854f : lea eax, [rdi + 9] ; ret
0x00000000000ac1b9 : lea eax, [rdi + rax + 0x10] ; ret
0x00000000000ac1c9 : lea eax, [rdi + rax + 0x20] ; ret
0x00000000000ac0c3 : lea eax, [rdi + rax + 0x30] ; ret
0x000000000013b885 : lea eax, [rdi + rax + 2] ; cmp rdx, rax ; sbb eax, eax ; ret
0x0000000000188645 : lea eax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x00000000000b16fb : lea eax, [rdi + rax] ; ret
0x000000000018b2f3 : lea eax, [rdi + rax] ; vzeroupper ; ret
0x00000000000a8b09 : lea eax, [rdi + rdx - 1] ; ret
0x000000000018ac3d : lea eax, [rdi + rdx] ; vzeroupper ; ret
0x000000000013c767 : lea eax, [rdi + rsi + 8] ; mov rax, r8 ; ret
0x00000000000b19b9 : lea eax, [rdi + rsi] ; ret
0x00000000000cf4ee : lea eax, [rdi - 0x10] ; ret
0x00000000000cf651 : lea eax, [rdi - 0xc] ; ret
0x00000000000cf671 : lea eax, [rdi - 4] ; ret
0x00000000000cf661 : lea eax, [rdi - 8] ; ret
0x00000000000b84a3 : lea eax, [rdi] ; ret
0x000000000018ab75 : lea eax, [rdi] ; vzeroupper ; ret
0x000000000017abad : lea eax, [rdx + 0xa] ; ret
0x000000000017abcd : lea eax, [rdx + 0xb] ; ret
0x000000000017abef : lea eax, [rdx + 0xc] ; ret
0x000000000017ac0f : lea eax, [rdx + 0xd] ; ret
0x000000000017ac2f : lea eax, [rdx + 0xe] ; ret
0x000000000017aabf : lea eax, [rdx + 0xf] ; ret
0x000000000017aae7 : lea eax, [rdx + 1] ; ret
0x000000000017aafd : lea eax, [rdx + 2] ; ret
0x000000000017ab15 : lea eax, [rdx + 3] ; ret
0x000000000017ab2b : lea eax, [rdx + 4] ; ret
0x000000000017ab3d : lea eax, [rdx + 5] ; ret
0x000000000017ab5b : lea eax, [rdx + 6] ; ret
0x000000000017aa67 : lea eax, [rdx + 7] ; ret
0x000000000017ab6d : lea eax, [rdx + 8] ; ret
0x000000000017ab8d : lea eax, [rdx + 9] ; ret
0x000000000014933d : lea eax, [rdx + rax] ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x0000000000087dee : lea eax, [rdx + rdi] ; ret
0x00000000000bc1b3 : lea eax, [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000009c211 : lea eax, [rdx - 0x10] ; ret
0x000000000017aad5 : lea eax, [rdx] ; ret
0x00000000000328c1 : lea eax, [rip + 0x181ab6] ; ret
0x00000000000241a5 : lea eax, [rip + 0x18fcf3] ; ret
0x00000000000241b5 : lea eax, [rip + 0x191abc] ; ret
0x0000000000120dc3 : lea eax, [rip + 0x918b7] ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000001463b3 : lea eax, [rip + 0xaa747] ; ret
0x00000000000d0ec9 : lea eax, [rip - 0x10f] ; ret
0x00000000000d0fe9 : lea eax, [rip - 0x11f] ; ret
0x000000000013837f : lea ebx, [rdi - 0x76b70012] ; ret
0x000000000011f8ce : lea ecx, [rdi + rdi] ; shr eax, cl ; and eax, 3 ; ret
0x00000000001783b6 : lea ecx, [rdx + 0x10] ; jne 0x178900 ; ret
0x00000000001786b4 : lea ecx, [rdx + 0xa] ; jne 0x178900 ; ret
0x00000000001786d4 : lea ecx, [rdx + 0xb] ; jne 0x178900 ; ret
0x00000000001786f4 : lea ecx, [rdx + 0xc] ; jne 0x178900 ; ret
0x0000000000178716 : lea ecx, [rdx + 0xd] ; jne 0x178900 ; ret
0x0000000000178736 : lea ecx, [rdx + 0xe] ; jne 0x178900 ; ret
0x0000000000178756 : lea ecx, [rdx + 0xf] ; jne 0x178900 ; ret
0x00000000001785ac : lea ecx, [rdx + 1] ; jne 0x178900 ; ret
0x00000000001785ce : lea ecx, [rdx + 2] ; jne 0x178900 ; ret
0x00000000001785f4 : lea ecx, [rdx + 3] ; jne 0x178900 ; ret
0x000000000017860c : lea ecx, [rdx + 4] ; jne 0x178900 ; ret
0x000000000008558a : lea ecx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000178632 : lea ecx, [rdx + 5] ; jne 0x178900 ; ret
0x0000000000178654 : lea ecx, [rdx + 6] ; jne 0x178900 ; ret
0x0000000000178672 : lea ecx, [rdx + 7] ; jne 0x178900 ; ret
0x000000000017834e : lea ecx, [rdx + 8] ; jne 0x178900 ; ret
0x0000000000178694 : lea ecx, [rdx + 9] ; jne 0x178900 ; ret
0x0000000000123366 : lea ecx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000000b78ad : lea edi, [rdi + 0x10] ; jne 0xb7f80 ; ret
0x00000000000b8fd1 : lea edi, [rdi + 0x10] ; jne 0xb97d0 ; ret
0x00000000000b78d0 : lea edi, [rdi + 0x11] ; jne 0xb7f80 ; ret
0x00000000000b8ff4 : lea edi, [rdi + 0x11] ; jne 0xb97d0 ; ret
0x00000000000b78f5 : lea edi, [rdi + 0x12] ; jne 0xb7f80 ; ret
0x00000000000b9019 : lea edi, [rdi + 0x12] ; jne 0xb97d0 ; ret
0x00000000000b7913 : lea edi, [rdi + 0x13] ; jne 0xb7f80 ; ret
0x00000000000b9047 : lea edi, [rdi + 0x13] ; jne 0xb97d0 ; ret
0x00000000000b7933 : lea edi, [rdi + 0x14] ; jne 0xb7f80 ; ret
0x00000000000b9077 : lea edi, [rdi + 0x14] ; jne 0xb97d0 ; ret
0x00000000000b7956 : lea edi, [rdi + 0x15] ; jne 0xb7f80 ; ret
0x00000000000b90aa : lea edi, [rdi + 0x15] ; jne 0xb97d0 ; ret
0x00000000000b7975 : lea edi, [rdi + 0x16] ; jne 0xb7f80 ; ret
0x00000000000b90d9 : lea edi, [rdi + 0x16] ; jne 0xb97d0 ; ret
0x00000000000b7995 : lea edi, [rdi + 0x17] ; jne 0xb7f80 ; ret
0x00000000000b9109 : lea edi, [rdi + 0x17] ; jne 0xb97d0 ; ret
0x00000000000b79b5 : lea edi, [rdi + 0x18] ; jne 0xb7f80 ; ret
0x00000000000b9139 : lea edi, [rdi + 0x18] ; jne 0xb97d0 ; ret
0x00000000000b79d8 : lea edi, [rdi + 0x19] ; jne 0xb7f80 ; ret
0x00000000000b916c : lea edi, [rdi + 0x19] ; jne 0xb97d0 ; ret
0x00000000000b7a0d : lea edi, [rdi + 0x1a] ; jne 0xb7f80 ; ret
0x00000000000b91a1 : lea edi, [rdi + 0x1a] ; jne 0xb97d0 ; ret
0x00000000000b7a3b : lea edi, [rdi + 0x1b] ; jne 0xb7f80 ; ret
0x00000000000b91cf : lea edi, [rdi + 0x1b] ; jne 0xb97d0 ; ret
0x00000000000b7a6b : lea edi, [rdi + 0x1c] ; jne 0xb7f80 ; ret
0x00000000000b91ff : lea edi, [rdi + 0x1c] ; jne 0xb97d0 ; ret
0x00000000000b7a97 : lea edi, [rdi + 0x1d] ; jne 0xb7f80 ; ret
0x00000000000b922b : lea edi, [rdi + 0x1d] ; jne 0xb97d0 ; ret
0x00000000000b7ac7 : lea edi, [rdi + 0x1e] ; jne 0xb7f80 ; ret
0x00000000000b925b : lea edi, [rdi + 0x1e] ; jne 0xb97d0 ; ret
0x00000000000b7af7 : lea edi, [rdi + 0x1f] ; jne 0xb7f80 ; ret
0x00000000000b928b : lea edi, [rdi + 0x1f] ; jne 0xb97d0 ; ret
0x00000000000b7b27 : lea edi, [rdi + 0x20] ; jne 0xb7f80 ; ret
0x00000000000b92bb : lea edi, [rdi + 0x20] ; jne 0xb97d0 ; ret
0x00000000000b77f3 : lea edi, [rdi + 0xa] ; jne 0xb7f80 ; ret
0x00000000000b8ed7 : lea edi, [rdi + 0xa] ; jne 0xb97d0 ; ret
0x00000000000b7811 : lea edi, [rdi + 0xb] ; jne 0xb7f80 ; ret
0x00000000000b8f05 : lea edi, [rdi + 0xb] ; jne 0xb97d0 ; ret
0x00000000000b7831 : lea edi, [rdi + 0xc] ; jne 0xb7f80 ; ret
0x00000000000b8f25 : lea edi, [rdi + 0xc] ; jne 0xb97d0 ; ret
0x00000000000b7853 : lea edi, [rdi + 0xd] ; jne 0xb7f80 ; ret
0x00000000000b8f47 : lea edi, [rdi + 0xd] ; jne 0xb97d0 ; ret
0x00000000000b7873 : lea edi, [rdi + 0xe] ; jne 0xb7f80 ; ret
0x00000000000b8f77 : lea edi, [rdi + 0xe] ; jne 0xb97d0 ; ret
0x00000000000b7893 : lea edi, [rdi + 0xf] ; jne 0xb7f80 ; ret
0x00000000000b8fa7 : lea edi, [rdi + 0xf] ; jne 0xb97d0 ; ret
0x00000000000b76c7 : lea edi, [rdi + 1] ; jne 0xb7f80 ; ret
0x00000000000b8daa : lea edi, [rdi + 1] ; jne 0xb97d0 ; ret
0x00000000000b76eb : lea edi, [rdi + 2] ; jne 0xb7f80 ; ret
0x00000000000b8dcf : lea edi, [rdi + 2] ; jne 0xb97d0 ; ret
0x00000000000b770e : lea edi, [rdi + 3] ; jne 0xb7f80 ; ret
0x00000000000b8df2 : lea edi, [rdi + 3] ; jne 0xb97d0 ; ret
0x00000000000b7729 : lea edi, [rdi + 4] ; jne 0xb7f80 ; ret
0x00000000000b8e0d : lea edi, [rdi + 4] ; jne 0xb97d0 ; ret
0x00000000000b774c : lea edi, [rdi + 5] ; jne 0xb7f80 ; ret
0x00000000000b8e30 : lea edi, [rdi + 5] ; jne 0xb97d0 ; ret
0x00000000000b7771 : lea edi, [rdi + 6] ; jne 0xb7f80 ; ret
0x00000000000b8e55 : lea edi, [rdi + 6] ; jne 0xb97d0 ; ret
0x00000000000b778f : lea edi, [rdi + 7] ; jne 0xb7f80 ; ret
0x00000000000b8e73 : lea edi, [rdi + 7] ; jne 0xb97d0 ; ret
0x00000000000b77ab : lea edi, [rdi + 8] ; jne 0xb7f80 ; ret
0x00000000000b8e8f : lea edi, [rdi + 8] ; jne 0xb97d0 ; ret
0x00000000000b77ce : lea edi, [rdi + 9] ; jne 0xb7f80 ; ret
0x00000000000b8eb2 : lea edi, [rdi + 9] ; jne 0xb97d0 ; ret
0x00000000000440cd : lea edx, [rax + 1] ; mov dword ptr [rip + 0x1a80d6], edx ; ret
0x0000000000087f24 : lea edx, [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000006ab5b : lea edx, [rax - 0x77000005] ; add cl, byte ptr [rax - 0x7d] ; ret
0x00000000000dd755 : lea edx, [rdi + rdi*8] ; pop rbx ; pop rbp ; lea rax, [rax + rdx*8] ; ret
0x000000000012310e : lea edx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000115f8a : lea edx, [rsi + 1] ; jne 0x115f60 ; ret
0x000000000007c598 : lea esi, [rax] ; idiv edi ; inc dword ptr [rcx - 1] ; push rsp ; ret
0x00000000000860c0 : lea esi, [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000077585 : lea esi, [rdx + rdi*8 - 0x76b60001] ; ret
0x00000000000bbb68 : lea esi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000000e14a7 : lea esp, [rbp - 0x10] ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000046070 : lea esp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000013c766 : lea r8, [rdi + rsi + 8] ; mov rax, r8 ; ret
0x000000000014933c : lea r8d, [rdx + rax] ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x00000000000e5201 : lea rax, [rax + rax - 1] ; ret
0x00000000000bce38 : lea rax, [rax + rbx*4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac183 : lea rax, [rax + rdi + 0x10] ; ret
0x00000000000ac193 : lea rax, [rax + rdi + 0x20] ; ret
0x00000000000ac673 : lea rax, [rax + rdi + 0x30] ; ret
0x00000000000ac163 : lea rax, [rax + rdi - 0x10] ; ret
0x00000000000dd75a : lea rax, [rax + rdx*8] ; ret
0x000000000009c1ee : lea rax, [rax - 8] ; ret
0x00000000000e8430 : lea rax, [rbx + 2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e8330 : lea rax, [rbx + 8] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b1abc : lea rax, [rcx + rsi] ; ret
0x00000000000bb703 : lea rax, [rcx - 1] ; ret
0x00000000000b861b : lea rax, [rdi + 0x10] ; ret
0x00000000000b8630 : lea rax, [rdi + 0x11] ; ret
0x00000000000b864e : lea rax, [rdi + 0x12] ; ret
0x00000000000b866e : lea rax, [rdi + 0x13] ; ret
0x00000000000b8691 : lea rax, [rdi + 0x14] ; ret
0x00000000000b86b0 : lea rax, [rdi + 0x15] ; ret
0x00000000000b86d0 : lea rax, [rdi + 0x16] ; ret
0x00000000000b86f0 : lea rax, [rdi + 0x17] ; ret
0x00000000000b8713 : lea rax, [rdi + 0x18] ; ret
0x00000000000b8738 : lea rax, [rdi + 0x19] ; ret
0x00000000000b8756 : lea rax, [rdi + 0x1a] ; ret
0x00000000000b8776 : lea rax, [rdi + 0x1b] ; ret
0x00000000000b8792 : lea rax, [rdi + 0x1c] ; ret
0x00000000000b87b2 : lea rax, [rdi + 0x1d] ; ret
0x00000000000b87d2 : lea rax, [rdi + 0x1e] ; ret
0x00000000000b87f2 : lea rax, [rdi + 0x1f] ; ret
0x00000000000b9662 : lea rax, [rdi + 0x20] ; ret
0x00000000000b98d8 : lea rax, [rdi + 0x40] ; ret
0x000000000018b398 : lea rax, [rdi + 0x41] ; vzeroupper ; ret
0x00000000000b856c : lea rax, [rdi + 0xa] ; ret
0x00000000000b858c : lea rax, [rdi + 0xb] ; ret
0x00000000000b85ae : lea rax, [rdi + 0xc] ; ret
0x00000000000b85ce : lea rax, [rdi + 0xd] ; ret
0x00000000000b85ee : lea rax, [rdi + 0xe] ; ret
0x00000000000b8608 : lea rax, [rdi + 0xf] ; ret
0x00000000000b84b6 : lea rax, [rdi + 1] ; ret
0x000000000018abf6 : lea rax, [rdi + 1] ; vzeroupper ; ret
0x00000000000b84c9 : lea rax, [rdi + 2] ; ret
0x000000000018ac0a : lea rax, [rdi + 2] ; vzeroupper ; ret
0x00000000000b84d4 : lea rax, [rdi + 3] ; ret
0x000000000018ac24 : lea rax, [rdi + 3] ; vzeroupper ; ret
0x00000000000b84e7 : lea rax, [rdi + 4] ; ret
0x00000000000b84fc : lea rax, [rdi + 5] ; ret
0x00000000000b851a : lea rax, [rdi + 6] ; ret
0x00000000000b8526 : lea rax, [rdi + 7] ; ret
0x00000000000b8539 : lea rax, [rdi + 8] ; ret
0x00000000000b854e : lea rax, [rdi + 9] ; ret
0x000000000018b2f2 : lea rax, [rdi + r8] ; vzeroupper ; ret
0x00000000000ac1b8 : lea rax, [rdi + rax + 0x10] ; ret
0x00000000000ac1c8 : lea rax, [rdi + rax + 0x20] ; ret
0x00000000000ac0c2 : lea rax, [rdi + rax + 0x30] ; ret
0x0000000000188644 : lea rax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x00000000000b16fa : lea rax, [rdi + rax] ; ret
0x00000000000a8b08 : lea rax, [rdi + rdx - 1] ; ret
0x000000000018ac3c : lea rax, [rdi + rdx] ; vzeroupper ; ret
0x00000000000b19b8 : lea rax, [rdi + rsi] ; ret
0x00000000000cf4ed : lea rax, [rdi - 0x10] ; ret
0x00000000000cf650 : lea rax, [rdi - 0xc] ; ret
0x00000000000cf670 : lea rax, [rdi - 4] ; ret
0x00000000000cf660 : lea rax, [rdi - 8] ; ret
0x00000000000b84a2 : lea rax, [rdi] ; ret
0x000000000018ab74 : lea rax, [rdi] ; vzeroupper ; ret
0x000000000017abac : lea rax, [rdx + 0xa] ; ret
0x000000000017abcc : lea rax, [rdx + 0xb] ; ret
0x000000000017abee : lea rax, [rdx + 0xc] ; ret
0x000000000017ac0e : lea rax, [rdx + 0xd] ; ret
0x000000000017ac2e : lea rax, [rdx + 0xe] ; ret
0x000000000017aabe : lea rax, [rdx + 0xf] ; ret
0x000000000017aae6 : lea rax, [rdx + 1] ; ret
0x000000000017aafc : lea rax, [rdx + 2] ; ret
0x000000000017ab14 : lea rax, [rdx + 3] ; ret
0x000000000017ab2a : lea rax, [rdx + 4] ; ret
0x000000000017ab3c : lea rax, [rdx + 5] ; ret
0x000000000017ab5a : lea rax, [rdx + 6] ; ret
0x000000000017aa66 : lea rax, [rdx + 7] ; ret
0x000000000017ab6c : lea rax, [rdx + 8] ; ret
0x000000000017ab8c : lea rax, [rdx + 9] ; ret
0x000000000009c210 : lea rax, [rdx - 0x10] ; ret
0x000000000017aad4 : lea rax, [rdx] ; ret
0x00000000000328c0 : lea rax, [rip + 0x181ab6] ; ret
0x00000000000241a4 : lea rax, [rip + 0x18fcf3] ; ret
0x00000000000241b4 : lea rax, [rip + 0x191abc] ; ret
0x00000000001463b2 : lea rax, [rip + 0xaa747] ; ret
0x00000000000d0ec8 : lea rax, [rip - 0x10f] ; ret
0x00000000000d0fe8 : lea rax, [rip - 0x11f] ; ret
0x00000000000cf629 : lea rax, es:[rdi - 0x10] ; ret
0x0000000000085589 : lea rcx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000123365 : lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000087f23 : lea rdx, [r8 + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000012310d : lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000115f89 : lea rdx, [rsi + 1] ; jne 0x115f60 ; ret
0x00000000000bbb67 : lea rsi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000000e14a6 : lea rsp, [rbp - 0x10] ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000001838c4 : leave ; add rax, rcx ; sub rax, rdi ; ret
0x0000000000102817 : leave ; add rsp, 8 ; mov eax, r9d ; ret
0x0000000000042179 : leave ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x00000000000bb9e6 : leave ; cmove rax, rdx ; ret
0x00000000000cf157 : leave ; cmp eax, ecx ; jne 0xcf160 ; mov eax, r9d ; ret
0x00000000000a88cd : leave ; je 0xa88d8 ; cmp ecx, esi ; jne 0xa88c0 ; ret
0x0000000000123100 : leave ; jne 0x123108 ; ret
0x0000000000123169 : leave ; jne 0x123170 ; ret
0x0000000000123a50 : leave ; jne 0x123a58 ; ret
0x0000000000123aad : leave ; jne 0x123ab8 ; ret
0x000000000012dced : leave ; jne 0x12dc98 ; mov rax, rdi ; ret
0x00000000000bb4e0 : leave ; jne 0xbb4d0 ; ret
0x00000000000bb590 : leave ; jne 0xbb580 ; ret
0x00000000000bb850 : leave ; jne 0xbb840 ; sub rax, 1 ; ret
0x00000000000bcb40 : leave ; jne 0xbcb18 ; mov rax, r8 ; ret
0x00000000000b6621 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000c6b51 : leave ; mov eax, r9d ; ret
0x0000000000038ca2 : leave ; pop rbx ; pop rbp ; mov rax, r9 ; pop r12 ; ret
0x00000000000578c8 : leave ; ret
0x000000000005584e : leave ; xor eax, eax ; ret
0x00000000001131cc : lock and byte ptr [rax - 0x77], cl ; ret
0x00000000001160fe : lock dec dword ptr [rax + 1] ; ret
0x000000000011cbe0 : lock dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rdi + 0x48], 0x39 ; ret
0x000000000012b001 : lock dec dword ptr [rax - 0x7d] ; ret
0x00000000000cb73a : lodsb al, byte ptr [rsi] ; clc ; dec dword ptr [rax - 0x7d] ; ret
0x000000000013fec0 : lodsb al, byte ptr [rsi] ; hlt ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e81e4 : lodsb al, byte ptr [rsi] ; xor eax, eax ; ret
0x00000000000e518d : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; setne al ; ret
0x00000000000a0649 : lodsd eax, dword ptr [rsi] ; or al, 0 ; cmovne rax, rdx ; ret
0x00000000001411f8 : lodsd eax, dword ptr [rsi] ; or al, byte ptr [rax] ; mov rax, qword ptr fs:[rax] ; ret
0x0000000000056492 : lodsd eax, dword ptr [rsi] ; ret
0x00000000000d33a7 : lodsd eax, dword ptr [rsi] ; sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000010f157 : loop 0x10f141 ; ret
0x000000000011c6f7 : loop 0x11c6f8 ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000146f96 : loop 0x146f33 ; or al, byte ptr [rax] ; test eax, eax ; je 0x146fa0 ; ret
0x000000000014ae90 : loop 0x14af11 ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x000000000016d14a : loop 0x16d13f ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016fc7a : loop 0x16fc6f ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000226ba : loop 0x226a6 ; sbb al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000005562d : loop 0x555e7 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000055875 : loop 0x5582f ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000005b629 : loop 0x5b677 ; mov eax, eax ; ret
0x000000000008ad44 : loop 0x8ad47 ; mov eax, edx ; ret
0x000000000008ae44 : loop 0x8ae47 ; mov eax, edx ; ret
0x000000000009efca : loop 0x9f00d ; pop rsp ; pop r13 ; ret
0x000000000009efdf : loop 0x9f022 ; pop rsp ; pop r13 ; ret
0x00000000000a88a5 : loop 0xa88f3 ; mov eax, eax ; ret
0x00000000000aa64d : loop 0xaa680 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000b799a : loop 0xb79a1 ; add byte ptr [rax], al ; ret
0x00000000000bc677 : loop 0xbc661 ; ret
0x000000000016d0ba : loope 0x16d0af ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016fbea : loope 0x16fbdf ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000017871b : loope 0x17871e ; add byte ptr [rax], al ; ret
0x0000000000183f0e : loope 0x183f39 ; enter -0x73b, 0x77 ; ret
0x000000000018aca3 : loope 0x18aced ; lea eax, [rdi + rdx] ; vzeroupper ; ret
0x0000000000190d7b : loope 0x190d7d ; add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x00000000001989ee : loope 0x198a4b ; ret
0x000000000005631b : loope 0x56369 ; mov dword ptr [rdi], ecx ; ret
0x000000000005634c : loope 0x5639a ; mov dword ptr [rdi - 8], ecx ; ret
0x00000000000563cd : loope 0x5641b ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000006e020 : loope 0x6e021 ; inc dword ptr [rcx - 0xa] ; ret
0x00000000000759a2 : loope 0x759a4 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000cface : loope 0xcfadf ; je 0xcfaf0 ; ret
0x00000000000ee3e2 : loope 0xee3e3 ; add esi, esi ; ret
0x0000000000102a95 : loopne 0x102aa6 ; ret
0x0000000000106d56 : loopne 0x106db3 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010d22f : loopne 0x10d272 ; pop rsp ; ret
0x000000000010d21b : loopne 0x10d278 ; pop rbp ; pop r12 ; ret
0x000000000010e3e5 : loopne 0x10e442 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010f256 : loopne 0x10f2b5 ; pop r12 ; pop r13 ; ret
0x0000000000113e8d : loopne 0x113ed0 ; pop rsp ; ret
0x000000000011417e : loopne 0x1141db ; pop rbp ; pop r12 ; ret
0x0000000000114330 : loopne 0x11438d ; pop rbp ; pop r12 ; ret
0x0000000000114377 : loopne 0x1143d4 ; pop rbp ; pop r12 ; ret
0x00000000001156d2 : loopne 0x115715 ; pop rsp ; ret
0x00000000001159dd : loopne 0x115a3a ; pop rbp ; pop r12 ; ret
0x00000000001160fc : loopne 0x1160c0 ; lock dec dword ptr [rax + 1] ; ret
0x0000000000117287 : loopne 0x1172e4 ; pop rbp ; pop r12 ; ret
0x00000000001179c6 : loopne 0x117a23 ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000001187d0 : loopne 0x11882d ; pop rbp ; pop r12 ; ret
0x0000000000118cca : loopne 0x118d0d ; pop rsp ; ret
0x0000000000119210 : loopne 0x11926c ; pop r12 ; ret
0x000000000011a7c9 : loopne 0x11a831 ; nop dword ptr [rax + rax] ; ret
0x000000000011ca7e : loopne 0x11cadb ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011ef00 : loopne 0x11ef22 ; and rax, rdi ; or rax, rsi ; ret
0x000000000011f8d4 : loopne 0x11f8d9 ; ret
0x00000000001229f2 : loopne 0x1229f5 ; ret
0x0000000000122a0a : loopne 0x122a14 ; movzx eax, ax ; ret
0x0000000000122a82 : loopne 0x122a85 ; ret
0x0000000000122b22 : loopne 0x122b25 ; ret
0x0000000000122b3a : loopne 0x122b3d ; ret
0x0000000000122bb2 : loopne 0x122bb5 ; ret
0x0000000000122bca : loopne 0x122bce ; movzx eax, ax ; ret
0x0000000000122c41 : loopne 0x122c44 ; mov eax, r8d ; ret
0x0000000000122ce2 : loopne 0x122ce5 ; ret
0x0000000000122d82 : loopne 0x122d85 ; ret
0x0000000000122e22 : loopne 0x122e25 ; ret
0x0000000000122ec2 : loopne 0x122ec5 ; ret
0x0000000000122eda : loopne 0x122ee0 ; movzx eax, ax ; ret
0x0000000000122f52 : loopne 0x122f55 ; ret
0x0000000000122fed : loopne 0x122ff0 ; ret
0x0000000000123082 : loopne 0x123085 ; ret
0x000000000012327e : loopne 0x123281 ; ret
0x00000000001233d4 : loopne 0x1233d7 ; ret
0x00000000001233eb : loopne 0x1233f5 ; movzx eax, ax ; ret
0x0000000000123464 : loopne 0x123467 ; ret
0x00000000001234f4 : loopne 0x1234f7 ; ret
0x000000000012350b : loopne 0x12350e ; ret
0x0000000000123574 : loopne 0x123577 ; ret
0x000000000012358b : loopne 0x12358f ; movzx eax, ax ; ret
0x0000000000123603 : loopne 0x123606 ; mov eax, r8d ; ret
0x0000000000123694 : loopne 0x123697 ; ret
0x0000000000123724 : loopne 0x123727 ; ret
0x00000000001237b4 : loopne 0x1237b7 ; ret
0x0000000000123844 : loopne 0x123847 ; ret
0x000000000012385b : loopne 0x123861 ; movzx eax, ax ; ret
0x00000000001238d4 : loopne 0x1238d7 ; ret
0x0000000000123961 : loopne 0x123964 ; ret
0x00000000001239e4 : loopne 0x1239e7 ; ret
0x0000000000123bbe : loopne 0x123bc1 ; ret
0x0000000000125789 : loopne 0x1257e8 ; pop r12 ; pop r13 ; ret
0x000000000012703c : loopne 0x127099 ; pop rbp ; pop r12 ; ret
0x0000000000128175 : loopne 0x1281d2 ; pop r12 ; ret
0x000000000012cebf : loopne 0x12cec2 ; ret
0x000000000012eae3 : loopne 0x12eb40 ; pop rbp ; pop r12 ; ret
0x000000000012eb0f : loopne 0x12eb52 ; pop rsp ; ret
0x000000000012eb37 : loopne 0x12eb7a ; pop rsp ; ret
0x000000000012fbee : loopne 0x12fc4a ; pop r12 ; ret
0x0000000000134bd8 : loopne 0x134c34 ; pop r12 ; ret
0x0000000000134dde : loopne 0x134e3b ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013b3e8 : loopne 0x13b3e2 ; add eax, 0x10 ; ret
0x000000000013c71f : loopne 0x13c724 ; shr rax, 4 ; and eax, 0x7f ; ret
0x000000000013c726 : loopne 0x13c7a7 ; ret
0x000000000013cad9 : loopne 0x13cb36 ; pop rbp ; pop r12 ; ret
0x000000000013caf5 : loopne 0x13cb52 ; pop rbp ; pop r12 ; ret
0x0000000000140403 : loopne 0x140460 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000140422 : loopne 0x14047f ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001405c7 : loopne 0x140624 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001419f9 : loopne 0x141a58 ; pop r12 ; ret
0x00000000001421ef : loopne 0x14224c ; pop rbp ; pop r12 ; ret
0x00000000001424fb : loopne 0x14255a ; pop r12 ; ret
0x00000000001459aa : loopne 0x145a07 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001470fb : loopne 0x147158 ; pop r12 ; ret
0x0000000000148c99 : loopne 0x148cdc ; pop rsp ; ret
0x000000000014b2a3 : loopne 0x14b300 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000014d6ce : loopne 0x14d72b ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000014ddef : loopne 0x14de4e ; pop r12 ; ret
0x000000000014e2a9 : loopne 0x14e306 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000014e461 : loopne 0x14e4c0 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000014f023 : loopne 0x14f080 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000152c8e : loopne 0x152ced ; pop r12 ; ret
0x000000000015361b : loopne 0x15361d ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001544ef : loopne 0x15454e ; pop r12 ; ret
0x00000000001545f6 : loopne 0x154653 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001547f9 : loopne 0x154856 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001549b1 : loopne 0x154a10 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000159af3 : loopne 0x159b50 ; pop rbp ; pop r12 ; ret
0x000000000015b973 : loopne 0x15b9b6 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000015b99c : loopne 0x15b9fb ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000015c5b9 : loopne 0x15c5fc ; pop rsp ; ret
0x000000000015c693 : loopne 0x15c6f0 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000015e117 : loopne 0x15e176 ; pop r12 ; pop r13 ; ret
0x000000000015e337 : loopne 0x15e396 ; pop r12 ; ret
0x0000000000160967 : loopne 0x1609aa ; pop rsp ; ret
0x0000000000189a95 : loopne 0x189ad9 ; mov byte ptr [rdi + rax], 0 ; vzeroupper ; ret
0x000000000018b375 : loopne 0x18b3c1 ; lea eax, [rdi + rax] ; vzeroupper ; ret
0x000000000019707d : loopne 0x1970c0 ; pop rsp ; ret
0x0000000000197100 : loopne 0x197143 ; pop rsp ; ret
0x00000000001985ff : loopne 0x19865c ; pop rbp ; pop r12 ; ret
0x000000000002ff35 : loopne 0x2ff94 ; pop r12 ; pop r13 ; ret
0x000000000002ffb7 : loopne 0x30016 ; pop r12 ; pop r13 ; ret
0x0000000000030409 : loopne 0x30466 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000034087 : loopne 0x34091 ; movzx eax, ax ; ret
0x00000000000340c7 : loopne 0x340cb ; movzx eax, ax ; ret
0x0000000000034167 : loopne 0x3416d ; movzx eax, ax ; ret
0x0000000000034247 : loopne 0x3424a ; ret
0x00000000000342e0 : loopne 0x342e3 ; ret
0x0000000000034300 : loopne 0x3430a ; movzx eax, ax ; ret
0x00000000000342b7 : loopne 0x34338 ; ret
0x0000000000034340 : loopne 0x34344 ; movzx eax, ax ; ret
0x00000000000343e0 : loopne 0x343e6 ; movzx eax, ax ; ret
0x0000000000034aac : loopne 0x34b09 ; pop rbp ; pop r12 ; ret
0x0000000000034b4a : loopne 0x34b8d ; pop rsp ; ret
0x0000000000038586 : loopne 0x385e5 ; pop r12 ; pop r13 ; ret
0x0000000000041034 : loopne 0x41077 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000041deb : loopne 0x41dca ; fsub dword ptr [rip + 0x200] ; ret
0x00000000000423bd : loopne 0x423d6 ; or esi, eax ; movd xmm0, esi ; ret
0x00000000000424e9 : loopne 0x424f3 ; ret
0x0000000000042a28 : loopne 0x42a32 ; ret
0x0000000000043b90 : loopne 0x43bda ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000044157 : loopne 0x441b4 ; pop rbp ; pop r12 ; ret
0x000000000004416d : loopne 0x441ca ; pop rbp ; pop r12 ; ret
0x00000000000476c8 : loopne 0x4770b ; pop rsp ; ret
0x00000000000477a4 : loopne 0x47803 ; pop r12 ; ret
0x0000000000052949 : loopne 0x52969 ; or eax, edx ; ret
0x0000000000055bed : loopne 0x55bf1 ; sub eax, 1 ; ret
0x0000000000057beb : loopne 0x57ba5 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000005b936 : loopne 0x5b993 ; pop r12 ; ret
0x000000000005b9ce : loopne 0x5ba2b ; pop r12 ; ret
0x000000000005b9f5 : loopne 0x5ba52 ; pop r12 ; ret
0x000000000005ba12 : loopne 0x5ba6f ; pop r12 ; ret
0x000000000005f3c0 : loopne 0x5f34b ; ret
0x0000000000062659 : loopne 0x626b8 ; pop r12 ; ret
0x0000000000062730 : loopne 0x6278d ; pop r12 ; ret
0x0000000000079fd3 : loopne 0x7a030 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000804e2 : loopne 0x8053f ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000080ad2 : loopne 0x80b2f ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000812de : loopne 0x8133b ; pop rbp ; pop r12 ; ret
0x0000000000081ec5 : loopne 0x81f22 ; pop rbp ; pop r12 ; ret
0x00000000000827fd : loopne 0x827ff ; add byte ptr [rax], al ; ret
0x00000000000829d3 : loopne 0x82a30 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000829f9 : loopne 0x82a56 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000082a35 : loopne 0x82a7f ; mov eax, 0xffffffff ; ret
0x0000000000082c46 : loopne 0x82ca5 ; pop r12 ; pop r13 ; ret
0x0000000000082cae : loopne 0x82d0d ; pop r12 ; pop r13 ; ret
0x00000000000843e6 : loopne 0x84445 ; pop r12 ; pop r13 ; ret
0x0000000000084405 : loopne 0x84464 ; pop r12 ; pop r13 ; ret
0x0000000000085a14 : loopne 0x85a73 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000085af6 : loopne 0x85b39 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000085b3b : loopne 0x85b9a ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000868b4 : loopne 0x86911 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008aba3 : loopne 0x8ac02 ; pop r12 ; ret
0x000000000008b1b0 : loopne 0x8b20d ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008b863 : loopne 0x8b8c2 ; pop r12 ; ret
0x000000000008bede : loopne 0x8bf3b ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008c0b7 : loopne 0x8c116 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008c113 : loopne 0x8c170 ; pop rbp ; pop r12 ; ret
0x000000000008cb79 : loopne 0x8cbd6 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008d4ea : loopne 0x8d547 ; pop rbp ; pop r12 ; ret
0x000000000008defa : loopne 0x8defd ; ret
0x000000000008df0a : loopne 0x8df0d ; ret
0x000000000008e166 : loopne 0x8e1c3 ; pop rbp ; pop r12 ; ret
0x000000000008e198 : loopne 0x8e1db ; pop rsp ; ret
0x000000000008e1a7 : loopne 0x8e1ea ; pop rsp ; ret
0x000000000008e22d : loopne 0x8e28a ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000008e247 : loopne 0x8e2a6 ; pop r12 ; pop r14 ; ret
0x000000000008e5bf : loopne 0x8e5c1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000008feee : loopne 0x8ff4b ; pop rbp ; pop r12 ; ret
0x000000000009466c : loopne 0x9467a ; cmp eax, 4 ; je 0x94674 ; ret
0x00000000000947fc : loopne 0x9480a ; pop rbx ; ret
0x0000000000094d18 : loopne 0x94d1b ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000094d5a : loopne 0x94d5d ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000094d91 : loopne 0x94d90 ; mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x0000000000095418 : loopne 0x95475 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009544c : loopne 0x954ab ; pop r12 ; pop r13 ; ret
0x00000000000957e7 : loopne 0x9582a ; pop rsp ; ret
0x00000000000957d8 : loopne 0x95835 ; pop rbp ; pop r12 ; ret
0x0000000000095c47 : loopne 0x95ca4 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000099eaf : loopne 0x99f0c ; pop rbp ; pop r12 ; ret
0x000000000009c202 : loopne 0x9c205 ; cmovne rax, rdx ; ret
0x000000000009d4e8 : loopne 0x9d52b ; pop rsp ; ret
0x000000000009d71b : loopne 0x9d75e ; pop rsp ; ret
0x000000000009eed3 : loopne 0x9ef32 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a030c : loopne 0xa02be ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000000a039a : loopne 0xa03dd ; pop rsp ; pop r13 ; ret
0x00000000000a0383 : loopne 0xa03e2 ; pop r12 ; pop r13 ; ret
0x00000000000a0a46 : loopne 0xa0aa3 ; pop r12 ; ret
0x00000000000a0a5d : loopne 0xa0aba ; pop r12 ; ret
0x00000000000a1e0f : loopne 0xa1e52 ; pop rsp ; ret
0x00000000000a1dfb : loopne 0xa1e58 ; pop rbp ; pop r12 ; ret
0x00000000000a8687 : loopne 0xa86e4 ; pop r12 ; ret
0x00000000000a869d : loopne 0xa86fa ; pop r12 ; ret
0x00000000000a874e : loopne 0xa8791 ; pop rsp ; ret
0x00000000000a8d83 : loopne 0xa8de0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000a8dff : loopne 0xa8e42 ; pop rsp ; pop r13 ; ret
0x00000000000a8e85 : loopne 0xa8ee4 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b7a9c : loopne 0xb7aa2 ; add byte ptr [rax], al ; ret
0x00000000000bc7d8 : loopne 0xbc837 ; pop r12 ; ret
0x00000000000bc8cb : loopne 0xbc928 ; pop rbp ; pop r12 ; ret
0x00000000000bc9b8 : loopne 0xbca17 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d002f : loopne 0xd0072 ; pop rsp ; ret
0x00000000000d0063 : loopne 0xd00a6 ; pop rsp ; ret
0x00000000000d0075 : loopne 0xd00b8 ; pop rsp ; ret
0x00000000000d11a0 : loopne 0xd11a2 ; add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x00000000000d1cd7 : loopne 0xd1d1a ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000d1cbe : loopne 0xd1d1d ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d4417 : loopne 0xd440d ; dec dword ptr [rax - 0x77] ; ret
0x00000000000dd896 : loopne 0xdd8f3 ; pop rbp ; pop r12 ; ret
0x00000000000dd8f7 : loopne 0xdd93a ; pop rsp ; ret
0x00000000000dd98b : loopne 0xdd9ea ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000dda57 : loopne 0xdda9a ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000ddc5a : loopne 0xddc5c ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000ddcee : loopne 0xddcf0 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000dddf7 : loopne 0xdde54 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ddf77 : loopne 0xddfd4 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000de09f : loopne 0xde0fc ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000df3a6 : loopne 0xdf403 ; pop rbp ; pop r12 ; ret
0x00000000000e5522 : loopne 0xe5526 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ee049 : loopne 0xee0a6 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ff3ed : loopne 0xff44c ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ff442 : loopne 0xff485 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000ff4c0 : loopne 0xff51d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000014d1a0 : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001091b0 : mov ah, 0x24 ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001097fb : mov ah, 0x24 ; nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a0648 : mov ah, 0xad ; or al, 0 ; cmovne rax, rdx ; ret
0x000000000012da38 : mov ah, 0xd9 ; add eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000001882df : mov al, 0xc5 ; std ; xlatb ; ret
0x0000000000043f32 : mov al, 1 ; movups xmmword ptr [rdi], xmm0 ; ret
0x00000000000b7acc : mov al, 4 ; add byte ptr [rax], al ; ret
0x00000000000b76cc : mov al, 8 ; add byte ptr [rax], al ; ret
0x00000000000b39fb : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000b3a29 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000b3aad : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x000000000017aad0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000000b39d5 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000b39e5 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000016de81 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000189161 : mov bh, 0x16 ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x0000000000120dc5 : mov bh, 0x18 ; or dword ptr [rax], eax ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000033dfa : mov bh, 0x44 ; mov eax, dword ptr [rdx + rax] ; mov eax, r8d ; ret
0x0000000000190c18 : mov bh, 0x48 ; lea eax, [rdi + 7] ; ret
0x0000000000138525 : mov bh, 0x53 ; or eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000000a89e2 : mov bh, 0x54 ; and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a8aa7 : mov bh, 0x54 ; and al, 0xec ; mov word ptr [rax + 4], dx ; ret
0x000000000003408a : mov bh, 0xc0 ; ret
0x00000000000e6c3a : mov bh, 0xf3 ; dec dword ptr [rax - 0x77] ; ret
0x000000000012fb3c : mov bh, 0xf6 ; mov eax, edi ; or eax, esi ; bswap eax ; ret
0x0000000000122a06 : mov bh, 4 ; js 0x12298d ; loopne 0x122a14 ; movzx eax, ax ; ret
0x0000000000122b36 : mov bh, 4 ; js 0x122abd ; loopne 0x122b3d ; ret
0x0000000000122bc6 : mov bh, 4 ; js 0x122b4d ; loopne 0x122bce ; movzx eax, ax ; ret
0x0000000000122ed6 : mov bh, 4 ; js 0x122e5d ; loopne 0x122ee0 ; movzx eax, ax ; ret
0x00000000001233e7 : mov bh, 4 ; js 0x12336e ; loopne 0x1233f5 ; movzx eax, ax ; ret
0x0000000000123507 : mov bh, 4 ; js 0x12348e ; loopne 0x12350e ; ret
0x0000000000123587 : mov bh, 4 ; js 0x12350e ; loopne 0x12358f ; movzx eax, ax ; ret
0x0000000000123857 : mov bh, 4 ; js 0x1237de ; loopne 0x123861 ; movzx eax, ax ; ret
0x0000000000034083 : mov bh, 4 ; js 0x3400a ; loopne 0x34091 ; movzx eax, ax ; ret
0x00000000000340c3 : mov bh, 4 ; js 0x3404a ; loopne 0x340cb ; movzx eax, ax ; ret
0x0000000000034163 : mov bh, 4 ; js 0x340ea ; loopne 0x3416d ; movzx eax, ax ; ret
0x0000000000034243 : mov bh, 4 ; js 0x341ca ; loopne 0x3424a ; ret
0x00000000000342dc : mov bh, 4 ; js 0x34263 ; loopne 0x342e3 ; ret
0x00000000000342fc : mov bh, 4 ; js 0x34283 ; loopne 0x3430a ; movzx eax, ax ; ret
0x000000000003433c : mov bh, 4 ; js 0x342c3 ; loopne 0x34344 ; movzx eax, ax ; ret
0x00000000000343dc : mov bh, 4 ; js 0x34363 ; loopne 0x343e6 ; movzx eax, ax ; ret
0x000000000010c755 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x000000000010ded2 : mov bl, 0 ; add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x000000000019250e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000471e0 : mov bl, 0xfd ; dec dword ptr [rax - 0x77] ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000013f081 : mov byte ptr [r10], 0 ; ret
0x000000000003007c : mov byte ptr [r12], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013c5dc : mov byte ptr [r8 + 2], 0 ; ret
0x00000000000266e2 : mov byte ptr [r8 - 0x7d], r9b ; ret
0x000000000009f249 : mov byte ptr [r9], 0 ; cmovne rax, rdx ; ret
0x000000000013c5dd : mov byte ptr [rax + 2], 0 ; ret
0x00000000000a8a75 : mov byte ptr [rax + 2], dl ; ret
0x00000000000a8a93 : mov byte ptr [rax + 4], dl ; ret
0x00000000000a8ac4 : mov byte ptr [rax + 6], dl ; ret
0x00000000000529ff : mov byte ptr [rax + rdx], 0 ; ret
0x00000000000266e3 : mov byte ptr [rax - 0x7d], cl ; ret
0x00000000000a86e8 : mov byte ptr [rax], 0 ; mov qword ptr [rdi], rax ; mov rax, r9 ; ret
0x00000000000a8a58 : mov byte ptr [rax], 0 ; ret
0x00000000001280c5 : mov byte ptr [rax], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001280aa : mov byte ptr [rax], 0xa ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011cb1f : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000055068 : mov byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008af97 : mov byte ptr [rax], bh ; mov eax, r8d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086405 : mov byte ptr [rax], bh ; mov eax, r9d ; ret
0x00000000000639cf : mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000639d0 : mov byte ptr [rax], ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b6622 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000086404 : mov byte ptr [rax], dil ; mov eax, r9d ; ret
0x0000000000137c1a : mov byte ptr [rbx], cl ; add byte ptr [rcx], al ; add rsp, 8 ; ret
0x0000000000178793 : mov byte ptr [rcx + 2], dl ; ret
0x00000000001787b2 : mov byte ptr [rcx + 4], dl ; ret
0x00000000001787f3 : mov byte ptr [rcx + 8], dl ; ret
0x00000000000a8628 : mov byte ptr [rcx - 1], 0 ; mov qword ptr [rdx], rcx ; ret
0x000000000009f24a : mov byte ptr [rcx], 0 ; cmovne rax, rdx ; ret
0x00000000000e862a : mov byte ptr [rcx], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000178770 : mov byte ptr [rcx], dl ; ret
0x00000000000bb0ca : mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000b947b : mov byte ptr [rdi + 0x10], cl ; lea rax, [rdi + 0x11] ; ret
0x00000000000b7c5b : mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000bb0db : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000b8618 : mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x00000000000b6f68 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000bb0e0 : mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000bb102 : mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000bb120 : mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000bb140 : mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000b868e : mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x00000000000b6fbe : mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000b9501 : mov byte ptr [rdi + 0x14], dl ; lea rax, [rdi + 0x15] ; ret
0x00000000000b7cb1 : mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000bb161 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000bb166 : mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000bb182 : mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000bb1a2 : mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000bb1c2 : mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000b9583 : mov byte ptr [rdi + 0x18], cl ; lea rax, [rdi + 0x19] ; ret
0x00000000000b7d33 : mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000bb1e3 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000b8710 : mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x00000000000b7040 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000bb1e8 : mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000bb20a : mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000bb228 : mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000bb248 : mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000bb264 : mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000bb284 : mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000bb2a4 : mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000bb2c4 : mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000b7e35 : mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000bb2e5 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000bb2ea : mov byte ptr [rdi + 0x21], ch ; ret
0x0000000000100451 : mov byte ptr [rdi + 0x38], al ; mov dword ptr [rsi], edx ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x00000000000bb33a : mov byte ptr [rdi + 0x40], ch ; ret
0x000000000018a665 : mov byte ptr [rdi + 0x40], cl ; vzeroupper ; ret
0x0000000000189ab8 : mov byte ptr [rdi + 0x41], 0 ; vzeroupper ; ret
0x00000000000bb010 : mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000bb02e : mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000bb04e : mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000bb070 : mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000bb090 : mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000bb0b0 : mov byte ptr [rdi + 0xf], ch ; ret
0x00000000001899e5 : mov byte ptr [rdi + 1], 0 ; vzeroupper ; ret
0x00000000000baf46 : mov byte ptr [rdi + 1], ch ; ret
0x000000000013c175 : mov byte ptr [rdi + 1], dh ; ret
0x000000000013c174 : mov byte ptr [rdi + 1], sil ; ret
0x0000000000189176 : mov byte ptr [rdi + 2], 0 ; vzeroupper ; ret
0x00000000000a8b3d : mov byte ptr [rdi + 2], al ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000baf58 : mov byte ptr [rdi + 2], ch ; ret
0x00000000000b84c6 : mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x00000000000b6e86 : mov byte ptr [rdi + 2], dh ; ret
0x00000000000b9309 : mov byte ptr [rdi + 2], dl ; lea rax, [rdi + 3] ; ret
0x00000000000a89b0 : mov byte ptr [rdi + 2], dl ; ret
0x00000000000baf69 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000baf6e : mov byte ptr [rdi + 3], ch ; ret
0x00000000000a8b6b : mov byte ptr [rdi + 4], al ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000baf86 : mov byte ptr [rdi + 4], ch ; ret
0x00000000000b84e2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000000b6ea2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000b9337 : mov byte ptr [rdi + 4], dl ; lea rax, [rdi + 5] ; ret
0x00000000000a89ce : mov byte ptr [rdi + 4], dl ; ret
0x00000000000baf97 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000baf9c : mov byte ptr [rdi + 5], ch ; ret
0x00000000000a8ba4 : mov byte ptr [rdi + 6], al ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000bafae : mov byte ptr [rdi + 6], ch ; ret
0x00000000000a8a07 : mov byte ptr [rdi + 6], dl ; ret
0x000000000014ae96 : mov byte ptr [rdi + 7], al ; ret
0x00000000000bafcc : mov byte ptr [rdi + 7], ch ; ret
0x00000000000ec450 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000ec405 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000ec3d4 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000ec480 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000ec490 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000ec4a5 : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000ec3ed : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000ec410 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000bafd8 : mov byte ptr [rdi + 8], ch ; ret
0x00000000000b6ee3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000b9389 : mov byte ptr [rdi + 8], dl ; lea rax, [rdi + 9] ; ret
0x00000000000b7bd9 : mov byte ptr [rdi + 8], dl ; ret
0x00000000000bafe9 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000bafee : mov byte ptr [rdi + 9], ch ; ret
0x0000000000189a12 : mov byte ptr [rdi + r8], 0 ; vzeroupper ; ret
0x0000000000189a13 : mov byte ptr [rdi + rax], 0 ; vzeroupper ; ret
0x000000000013c33e : mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000167a6b : mov byte ptr [rdi - 1], dl ; ret
0x00000000000a8b10 : mov byte ptr [rdi], 0 ; lea rax, [rdi + rdx - 1] ; ret
0x000000000018ab71 : mov byte ptr [rdi], 0 ; lea rax, [rdi] ; vzeroupper ; ret
0x00000000001890e1 : mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x00000000000ec445 : mov byte ptr [rdi], 0x5b ; ret
0x00000000000ec46e : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000baf32 : mov byte ptr [rdi], ch ; ret
0x00000000000bbc0f : mov byte ptr [rdi], cl ; ret
0x000000000018bc39 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000000a8981 : mov byte ptr [rdi], dh ; add rax, rdi ; ret
0x00000000000b84a0 : mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000000b6e60 : mov byte ptr [rdi], dh ; ret
0x00000000000b92e2 : mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; ret
0x000000000018b2c3 : mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; vzeroupper ; ret
0x00000000001899e3 : mov byte ptr [rdi], dl ; mov byte ptr [rdi + 1], 0 ; vzeroupper ; ret
0x00000000000b7b52 : mov byte ptr [rdi], dl ; ret
0x000000000018a593 : mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000baf42 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a8980 : mov byte ptr [rdi], sil ; add rax, rdi ; ret
0x00000000000b67aa : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000017aaf9 : mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x00000000000b39fe : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000017ab27 : mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x00000000000b3a2c : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000b6740 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000b3ab0 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x0000000000134b4a : mov byte ptr [rdx], 0 ; pop r12 ; pop r13 ; ret
0x000000000013f082 : mov byte ptr [rdx], 0 ; ret
0x000000000017aad2 : mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x000000000008df2f : mov byte ptr [rdx], al ; mov eax, r8d ; ret
0x00000000000b39d7 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000032853 : mov byte ptr [rip + 0x1bb2a4], dl ; ret
0x000000000013486e : mov byte ptr [rsi + 5], dl ; mov rax, rsi ; pop rbx ; ret
0x00000000000a13f0 : mov byte ptr [rsi + rdx + 1], al ; jne 0xa13e0 ; ret
0x00000000000a13ed : mov byte ptr [rsi + rdx], cl ; mov byte ptr [rsi + rdx + 1], al ; jne 0xa13e0 ; ret
0x0000000000116e56 : mov byte ptr [rsi - 1], 0 ; mov rax, r8 ; ret
0x0000000000116ed8 : mov byte ptr [rsi - 1], 0 ; ret
0x00000000000bc7a1 : mov byte ptr [rsp + rbx*8 - 0x3d], dh ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001156cc : mov byte ptr [rsp], 0 ; mov rax, r12 ; pop r12 ; ret
0x000000000003007d : mov byte ptr [rsp], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013f080 : mov ch, 0x41 ; mov byte ptr [rdx], 0 ; ret
0x000000000018e4a6 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001388d7 : mov cl, 0x15 ; ret
0x000000000014472c : mov cl, 0x15 ; sahf ; ret
0x0000000000198fce : mov cl, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015f244 : mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000001230fb : mov cl, byte ptr [rbx - 0x367acef4] ; jne 0x123108 ; ret
0x0000000000123164 : mov cl, byte ptr [rbx - 0x367acef4] ; jne 0x123170 ; ret
0x0000000000123a4b : mov cl, byte ptr [rbx - 0x367acef4] ; jne 0x123a58 ; ret
0x0000000000123aa8 : mov cl, byte ptr [rbx - 0x367acef4] ; jne 0x123ab8 ; ret
0x00000000000aedf5 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x00000000001379fc : mov cl, byte ptr [rbx] ; add byte ptr [rcx], al ; mov eax, r8d ; pop rbp ; ret
0x0000000000184e44 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x000000000018fb64 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000cfacb : mov cl, dl ; and cl, 0xf ; je 0xcfaf0 ; ret
0x00000000000f089a : mov cs, word ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000012334d : mov cs, word ptr [rbx - 0x2d7aeeec] ; jne 0x123360 ; ret
0x0000000000123c7d : mov cs, word ptr [rbx - 0x2d7aeeec] ; jne 0x123c90 ; ret
0x00000000000b6e80 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000091b41 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008b644 : mov dh, 0 ; pop rbx ; pop rbp ; mov eax, r8d ; pop r12 ; ret
0x000000000008df57 : mov dh, 0 ; ret
0x0000000000040fb9 : mov dh, 0x11 ; test dl, dl ; jne 0x40f98 ; ret
0x00000000000f07d0 : mov dh, 0x14 ; cmp ch, cl ; ret
0x000000000016def1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000018a591 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000ac8a5 : mov dh, 0x16 ; sub eax, edx ; ret
0x00000000000328c3 : mov dh, 0x1a ; sbb byte ptr [rax], al ; ret
0x00000000000ea571 : mov dh, 0x43 ; add cl, byte ptr [rax - 0x7d] ; ret
0x00000000000eb762 : mov dh, 0x43 ; add cl, byte ptr [rcx - 0x7d] ; ret
0x000000000005b3c2 : mov dh, 0x43 ; add dword ptr [rax + rax*8 - 0x7cb6f78c], eax ; ret
0x0000000000037ff3 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000eb5a8 : mov dh, 0x43 ; add dword ptr [rcx - 0x73], ecx ; push rbx ; add dword ptr [rcx - 0x7f], ecx ; ret
0x0000000000199161 : mov dh, 0x44 ; and al, 0xf ; add rsp, 0x10 ; pop rbx ; ret
0x000000000006669e : mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000074534 : mov dh, 0x46 ; or al, 0x83 ; ret
0x00000000001920e1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000001920d1 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000001920a1 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000001920c1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00000000001920b1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000029e07 : mov dh, 0x48 ; dec dword ptr [rax + 0x3948074a] ; ret
0x0000000000048d09 : mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a3fe6 : mov dh, 0x4d ; add byte ptr [rcx + 0xf], 0x93 ; ret
0x0000000000031764 : mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a8a03 : mov dh, 0x54 ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000a8ac0 : mov dh, 0x54 ; and al, 0xe ; mov byte ptr [rax + 6], dl ; ret
0x00000000000a8a8f : mov dh, 0x54 ; and al, 0xf4 ; mov byte ptr [rax + 4], dl ; ret
0x00000000000a89ca : mov dh, 0x54 ; and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a8a71 : mov dh, 0x54 ; and al, 0xfa ; mov byte ptr [rax + 2], dl ; ret
0x00000000000a89ac : mov dh, 0x54 ; and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000183db6 : mov dh, 0x54 ; cmp ah, byte ptr [rax] ; sub eax, edx ; vzeroupper ; ret
0x00000000001920e5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x00000000001920d5 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x00000000001920a5 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x00000000001920b5 : mov dh, 0x56 ; sub eax, edx ; ret
0x00000000000f7e1a : mov dh, 0x58 ; cmp dh, dh ; ret
0x000000000005d7b8 : mov dh, 0x58 ; or al, 0x89 ; fdiv st(6) ; ret
0x000000000005c115 : mov dh, 0x58 ; or al, 0xf6 ; ret
0x00000000000680f6 : mov dh, 0x6b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d4ebb : mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000053be3 : mov dh, 0x84 ; and al, 0x87 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000f9756 : mov dh, 0x8b ; dec dword ptr [rax - 0x77] ; ret
0x0000000000053e9e : mov dh, 0x8c ; and al, 0x87 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000121ca2 : mov dh, 0xa6 ; or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e7a56 : mov dh, 0xa8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ecbc1 : mov dh, 0xc ; or byte ptr [rax + 0x63], cl ; ret
0x000000000014de27 : mov dh, 0xc0 ; add eax, 1 ; ret
0x0000000000157b90 : mov dh, 0xc0 ; add rsp, 0x18 ; ret
0x000000000010fb96 : mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000014a145 : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ce094 : mov dh, 0xc0 ; lea eax, [rax + rax - 1] ; ret
0x00000000000e51ff : mov dh, 0xc0 ; lea rax, [rax + rax - 1] ; ret
0x0000000000062e6c : mov dh, 0xc0 ; neg eax ; pop rbp ; ret
0x00000000000246dd : mov dh, 0xc0 ; neg eax ; ret
0x0000000000149d6e : mov dh, 0xc0 ; pop r12 ; ret
0x0000000000148c14 : mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x000000000008dfde : mov dh, 0xc0 ; pop rbx ; neg eax ; ret
0x000000000014a0db : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000043c30 : mov dh, 0xc0 ; ret
0x0000000000094c92 : mov dh, 0xc0 ; sub eax, 2 ; add rsp, 8 ; ret
0x00000000000bc149 : mov dh, 0xc1 ; pop rbx ; ret
0x000000000013f491 : mov dh, 0xc3 ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000090de4 : mov dh, 0xc3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac8cb : mov dh, 0xd2 ; sub eax, edx ; ret
0x00000000000bbc0d : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x00000000000aa3a1 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000184e54 : mov dh, 0xe ; sub eax, ecx ; ret
0x000000000012fb59 : mov dh, 0xf6 ; mov eax, edi ; or eax, esi ; bswap eax ; ret
0x0000000000157e07 : mov dh, 0xff ; dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000157e43 : mov dh, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x0000000000184e51 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000ac8a2 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000aa3a4 : mov dh, 7 ; sub eax, ecx ; ret
0x0000000000184404 : mov dh, 7 ; sub eax, ecx ; vzeroupper ; ret
0x00000000001231d2 : mov dh, dl ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000010e609 : mov dl, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000114374 : mov dl, 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000123110 : mov dl, 3 ; add al, 0xa ; ret
0x00000000000319ba : mov dl, 5 ; add byte ptr [rax], al ; nop ; ret
0x00000000000ea371 : mov dl, bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000b7b73 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000b7b92 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000b7bd3 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000167af0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000b92e0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; ret
0x00000000000b7b50 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000baf40 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000951a3 : mov dword ptr [r11 + 0x14], 0 ; ret
0x0000000000047af3 : mov dword ptr [r11], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014ff20 : mov dword ptr [r8 + 0x48], eax ; mov eax, 1 ; ret
0x000000000014ff7d : mov dword ptr [r8 + 0x54], eax ; mov eax, 1 ; ret
0x000000000014ff4d : mov dword ptr [r8 + 0x58], eax ; mov eax, 1 ; ret
0x000000000013c461 : mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x000000000013c528 : mov dword ptr [r8], r11d ; pop rbx ; mov qword ptr [r9], rcx ; ret
0x0000000000131726 : mov dword ptr [r8], r9d ; add rsp, 0x18 ; ret
0x00000000000dfc30 : mov dword ptr [r8], r9d ; add rsp, 8 ; ret
0x000000000018fb5a : mov dword ptr [r9 - 2], ecx ; ret
0x000000000018fb45 : mov dword ptr [r9 - 4], ecx ; ret
0x00000000000df4d8 : mov dword ptr [r9], ebx ; mov rax, r8 ; pop rbx ; ret
0x0000000000086e5d : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000008762c : mov dword ptr [rax + 0x18], edx ; xor eax, eax ; mov dword ptr [rbx], ecx ; pop rbx ; ret
0x0000000000095907 : mov dword ptr [rax + 0x20], edx ; add rsp, 8 ; ret
0x000000000008cdc0 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x0000000000086401 : mov dword ptr [rax + 0x28], edx ; mov byte ptr [rax], dil ; mov eax, r9d ; ret
0x0000000000086e61 : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000086e9f : mov dword ptr [rax + 0x40], edx ; movups xmmword ptr [rax], xmm0 ; ret
0x0000000000087f5d : mov dword ptr [rax + 0x40], esi ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000014ff21 : mov dword ptr [rax + 0x48], eax ; mov eax, 1 ; ret
0x000000000014ff7e : mov dword ptr [rax + 0x54], eax ; mov eax, 1 ; ret
0x000000000014ff4e : mov dword ptr [rax + 0x58], eax ; mov eax, 1 ; ret
0x00000000000a8aac : mov dword ptr [rax + 4], edx ; ret
0x0000000000092795 : mov dword ptr [rax + 8], 0 ; ret
0x00000000000ef963 : mov dword ptr [rax + rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000157e21 : mov dword ptr [rax], 0 ; pop rbx ; ret
0x00000000001197d8 : mov dword ptr [rax], 0x16 ; ret
0x00000000000d0178 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x0000000000160ccc : mov dword ptr [rax], 0x26 ; xor eax, eax ; ret
0x0000000000041258 : mov dword ptr [rax], 0x2a ; mov rax, r11 ; ret
0x0000000000082834 : mov dword ptr [rax], 0x89480000 ; ret
0x000000000009809b : mov dword ptr [rax], 0xc ; mov rax, r8 ; ret
0x0000000000119791 : mov dword ptr [rax], 0xc ; xor eax, eax ; pop rbx ; ret
0x000000000009e95c : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x00000000001142bc : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x000000000011d018 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x00000000000521f8 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ceff3 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000006bba3 : mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013c529 : mov dword ptr [rax], ebx ; pop rbx ; mov qword ptr [r9], rcx ; ret
0x0000000000131727 : mov dword ptr [rax], ecx ; add rsp, 0x18 ; ret
0x00000000000dfc31 : mov dword ptr [rax], ecx ; add rsp, 8 ; ret
0x000000000008558e : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000a8a80 : mov dword ptr [rax], ecx ; ret
0x0000000000116d55 : mov dword ptr [rax], edi ; mov eax, 0xffffffff ; ret
0x00000000000fec9f : mov dword ptr [rax], edi ; mov rax, r8 ; ret
0x000000000009a0d0 : mov dword ptr [rax], edi ; ret
0x000000000011efc7 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013c23d : mov dword ptr [rax], edx ; lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x0000000000047c9d : mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; mov eax, r8d ; ret
0x000000000013c462 : mov dword ptr [rax], edx ; mov qword ptr [r9], r10 ; ret
0x0000000000033d18 : mov dword ptr [rax], edx ; ret
0x0000000000087f28 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000000000a8a61 : mov dword ptr [rax], esi ; ret
0x00000000000f2490 : mov dword ptr [rbp + 0x30], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f23c8 : mov dword ptr [rbp + 0x30], edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f248f : mov dword ptr [rbp + 0x30], r8d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013a212 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013a211 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002fdd7 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000015f90a : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000094d07 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000127a43 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000951a4 : mov dword ptr [rbx + 0x14], 0 ; ret
0x0000000000157976 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x000000000015f8c2 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000127a93 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000149dc8 : mov dword ptr [rbx + 0x20], esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ff51f : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x000000000008cdd9 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x000000000011d7cd : mov dword ptr [rbx + 0x38], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000042c5f : mov dword ptr [rbx + 0x40], esi ; pop rbx ; ret
0x0000000000042c3c : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x0000000000087e4e : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000093468 : mov dword ptr [rbx + 0x60], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008fd8e : mov dword ptr [rbx + 0x70], 0xffffffff ; pop rbx ; ret
0x0000000000086efa : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000874fe : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010c3d3 : mov dword ptr [rbx + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010c4fb : mov dword ptr [rbx + 4], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002fda7 : mov dword ptr [rbx + 8], eax ; cmp eax, -3 ; je 0x2fdc8 ; pop rbx ; ret
0x00000000001279f3 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001197c6 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000091e62 : mov dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000015fe05 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000009e9b5 : mov dword ptr [rbx], eax ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000009d10d : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001532c6 : mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000011976c : mov dword ptr [rbx], eax ; pop rbx ; setne al ; movzx eax, al ; ret
0x0000000000060ef6 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000047af4 : mov dword ptr [rbx], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000087631 : mov dword ptr [rbx], ecx ; pop rbx ; ret
0x00000000000bcd13 : mov dword ptr [rbx], edx ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000000639cd : mov dword ptr [rbx], edx ; mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bba1 : mov dword ptr [rbx], edx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000160b18 : mov dword ptr [rbx], edx ; pop rbx ; ret
0x0000000000082c06 : mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000957d4 : mov dword ptr [rbx], esp ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085913 : mov dword ptr [rbx], esp ; pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; ret
0x0000000000141a5c : mov dword ptr [rbx], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000141a5b : mov dword ptr [rbx], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005b4ca : mov dword ptr [rcx + 0x3a8], edi ; mov rsp, rdx ; ret
0x00000000001787d2 : mov dword ptr [rcx + 3], edx ; ret
0x00000000001787c3 : mov dword ptr [rcx + 4], edx ; ret
0x0000000000178834 : mov dword ptr [rcx + 5], edx ; ret
0x0000000000178844 : mov dword ptr [rcx + 6], edx ; ret
0x0000000000178813 : mov dword ptr [rcx + 7], edx ; ret
0x0000000000178804 : mov dword ptr [rcx + 8], edx ; ret
0x000000000005584c : mov dword ptr [rcx + rcx*8], eax ; xor eax, eax ; ret
0x00000000000a8928 : mov dword ptr [rcx - 0x7c], 0xc3da75f9 ; nop ; ret
0x000000000018fb5b : mov dword ptr [rcx - 2], ecx ; ret
0x000000000018fb46 : mov dword ptr [rcx - 4], ecx ; ret
0x000000000018fb35 : mov dword ptr [rcx - 8], ecx ; ret
0x00000000000e81df : mov dword ptr [rcx], 0xac75c084 ; xor eax, eax ; ret
0x00000000000433ee : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000860c7 : mov dword ptr [rcx], eax ; ret
0x000000000008aa1a : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000df4d9 : mov dword ptr [rcx], ebx ; mov rax, r8 ; pop rbx ; ret
0x000000000013c52d : mov dword ptr [rcx], ecx ; ret
0x000000000013c50b : mov dword ptr [rcx], edi ; ret
0x0000000000178791 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x00000000001787b0 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000001787f1 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x00000000001787d0 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000178811 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000178821 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000178831 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000178841 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000178851 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000178861 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x00000000001787c0 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x0000000000178801 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x000000000013c465 : mov dword ptr [rcx], edx ; ret
0x000000000010d116 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x00000000000b862d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x11] ; ret
0x00000000000b949d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000000b866b : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000b94db : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x14] ; ret
0x00000000000b86ed : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x17] ; ret
0x00000000000b955d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x18] ; ret
0x00000000000b6fbb : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000b7cae : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000b703d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000564df : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000bb0fd : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000bb13b : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000bb1bd : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000b7d30 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000b7080 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000b70a0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000b7061 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000010d0fe : mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x0000000000113c8c : mov dword ptr [rdi + 0x16], eax ; ret
0x00000000000b8753 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000b95c3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1b] ; ret
0x00000000000b7083 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000bb223 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000015755b : mov dword ptr [rdi + 0x18], eax ; mov eax, r8d ; ret
0x00000000000918c7 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000008d30f : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000b8735 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x19] ; ret
0x00000000000b95a5 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000b8773 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x00000000000b95e3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1c] ; ret
0x00000000000b7065 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000bb205 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000bb243 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000015761d : mov dword ptr [rdi + 0x18], edx ; mov eax, r8d ; ret
0x00000000001574e5 : mov dword ptr [rdi + 0x18], esi ; mov eax, r8d ; ret
0x000000000015751d : mov dword ptr [rdi + 0x18], esi ; mov rax, r8 ; ret
0x0000000000157ded : mov dword ptr [rdi + 0x20], 0 ; ret
0x00000000000d128b : mov dword ptr [rdi + 0x20], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001576ea : mov dword ptr [rdi + 0x28], edx ; movups xmmword ptr [rdi + 0x18], xmm0 ; ret
0x00000000000918f8 : mov dword ptr [rdi + 0x48], eax ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x000000000013b40e : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000b86ad : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x15] ; ret
0x00000000000b951d : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x16] ; ret
0x00000000000b6fdd : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000000bb17d : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000b864b : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000000b94bb : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000b86cd : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x16] ; ret
0x00000000000b953d : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x17] ; ret
0x00000000000b6f9b : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000bb11b : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000bb19d : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000016dd35 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000016db78 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000016de18 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x000000000016dcc5 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000016db08 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b8517 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x00000000000b9367 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 7] ; ret
0x000000000016dc55 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000016da98 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b6ec7 : mov dword ptr [rdi + 3], edx ; ret
0x00000000000bafc7 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a8b84 : mov dword ptr [rdi + 4], eax ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000481e9 : mov dword ptr [rdi + 4], eax ; xor eax, eax ; ret
0x00000000000b84f9 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x00000000000b9349 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 6] ; ret
0x000000000016da28 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a89e7 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000bafa9 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x000000000010c794 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000b85ab : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000000b940b : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xd] ; ret
0x000000000016d9b8 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b6f2b : mov dword ptr [rdi + 5], edx ; ret
0x00000000000bb06b : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000b85cb : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xd] ; ret
0x00000000000b942b : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xe] ; ret
0x000000000016d948 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b6f3b : mov dword ptr [rdi + 6], edx ; ret
0x00000000000bb08b : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000b8569 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000000b93c9 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000b85eb : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xe] ; ret
0x00000000000b944b : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xf] ; ret
0x000000000016d8d8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b6f09 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000bb029 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000bb0ab : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x0000000000057d66 : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x00000000000918cb : mov dword ptr [rdi + 8], eax ; ret
0x0000000000094d88 : mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x0000000000056468 : mov dword ptr [rdi + 8], ecx ; ret
0x00000000000b93ab : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000000b8589 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000b93e9 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000000b854b : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 9] ; ret
0x0000000000055a78 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000008df53 : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x00000000000b6efb : mov dword ptr [rdi + 8], edx ; ret
0x00000000000bb00b : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000bb049 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000001136f6 : mov dword ptr [rdi + 8], esi ; ret
0x000000000018a5bd : mov dword ptr [rdi + r8 - 2], edx ; vzeroupper ; ret
0x000000000018a5d9 : mov dword ptr [rdi + r8 - 4], edx ; vzeroupper ; ret
0x000000000018a5be : mov dword ptr [rdi + rax - 2], edx ; vzeroupper ; ret
0x000000000018a5da : mov dword ptr [rdi + rax - 4], edx ; vzeroupper ; ret
0x000000000018a5fc : mov dword ptr [rdi + rax - 8], edx ; vzeroupper ; ret
0x00000000000bc05f : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x00000000000bbc39 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x0000000000189198 : mov dword ptr [rdi + rdx - 3], ecx ; vzeroupper ; ret
0x00000000000bc057 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000018bc59 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000000bbc29 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x00000000001891ac : mov dword ptr [rdi + rdx - 7], ecx ; vzeroupper ; ret
0x00000000000bc04f : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x00000000000bbc1b : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x00000000001677b5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001677f3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000563cf : mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000167b3c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016d388 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000167d1c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016d308 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000167f0c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016d288 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001680dd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016d1f9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001682dd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016d169 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001684dd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016d0d9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000b7e70 : mov dword ptr [rdi - 1], edx ; ret
0x0000000000167ebd : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000167cd5 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000167eb9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000168299 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000016796f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000168296 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000168496 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000168696 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000005634e : mov dword ptr [rdi - 8], ecx ; ret
0x00000000001677f7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000016796c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000167a68 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001679b4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016d408 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000047466 : mov dword ptr [rdi], 0 ; pop rbx ; ret
0x00000000000a89b9 : mov dword ptr [rdi], eax ; add rax, rdi ; ret
0x00000000000a8b06 : mov dword ptr [rdi], eax ; lea rax, [rdi + rdx - 1] ; ret
0x000000000014a5ff : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a874a : mov dword ptr [rdi], eax ; mov rax, r12 ; pop r12 ; ret
0x00000000000a86ec : mov dword ptr [rdi], eax ; mov rax, r9 ; ret
0x000000000005b51f : mov dword ptr [rdi], eax ; mov rax, rdi ; ret
0x0000000000056348 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000056462 : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000041fb4 : mov dword ptr [rdi], eax ; subsd xmm0, xmm1 ; ret
0x0000000000113756 : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000bc963 : mov dword ptr [rdi], ebp ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000000b84e5 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000000b8537 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 8] ; ret
0x00000000000a8b50 : mov dword ptr [rdi], ecx ; lea rax, [rdi + rdx - 1] ; ret
0x0000000000189174 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], 0 ; vzeroupper ; ret
0x00000000000b84c4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x00000000000b6e84 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000b9307 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, [rdi + 3] ; ret
0x00000000000b7b77 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000b9335 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, [rdi + 5] ; ret
0x00000000000b7b95 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000b9387 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, [rdi + 9] ; ret
0x00000000000b7bd7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000b8515 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x00000000000b9365 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 7] ; ret
0x00000000000b6ec5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000b8567 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000000b93c7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000b6f07 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b8587 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000b93e7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000000b6f17 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000019021b : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000000b6f28 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000b6f38 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000b6f48 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000b6eb6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000b6ef8 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000190227 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000004217e : mov dword ptr [rdi], ecx ; ret
0x000000000018bc53 : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000000a8976 : mov dword ptr [rdi], edx ; add rax, rdi ; ret
0x000000000008ac53 : mov dword ptr [rdi], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b84b4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; ret
0x000000000018abf4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; vzeroupper ; ret
0x00000000000b92f4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 2] ; ret
0x000000000018b2d4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 2] ; vzeroupper ; ret
0x00000000000b84d2 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000018ac22 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; vzeroupper ; ret
0x00000000000b9322 : mov dword ptr [rdi], edx ; lea rax, [rdi + 4] ; ret
0x00000000000b8524 : mov dword ptr [rdi], edx ; lea rax, [rdi + 7] ; ret
0x00000000000b9374 : mov dword ptr [rdi], edx ; lea rax, [rdi + 8] ; ret
0x00000000001899f4 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 2], 0 ; vzeroupper ; ret
0x00000000000b7e90 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000b7ed1 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000b7ef1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b7f01 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000b7f11 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000b7f21 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000b7ea0 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000b7ee1 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000424c9 : mov dword ptr [rdi], edx ; movd xmm0, eax ; ret
0x0000000000041fce : mov dword ptr [rdi], edx ; ret
0x000000000004231c : mov dword ptr [rdi], edx ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000189164 : mov dword ptr [rdi], edx ; vzeroupper ; ret
0x00000000000baf54 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000baf82 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000bafd4 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a8b21 : mov dword ptr [rdi], esi ; lea rax, [rdi + rdx - 1] ; ret
0x000000000018fb43 : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000057b76 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000018fb32 : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000018fb57 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x0000000000042336 : mov dword ptr [rdi], esi ; ret
0x000000000010c771 : mov dword ptr [rdi], esi ; xor eax, eax ; ret
0x00000000000a89b8 : mov dword ptr [rdi], r8d ; add rax, rdi ; ret
0x000000000015087c : mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x00000000000860c4 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x00000000001492a8 : mov dword ptr [rdx + 0x20], esi ; ret
0x0000000000149282 : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000149286 : mov dword ptr [rdx + 0x68], ecx ; ret
0x000000000014d0e6 : mov dword ptr [rdx + 0x6c], eax ; mov eax, 1 ; ret
0x0000000000150784 : mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x000000000008e5bd : mov dword ptr [rdx + 0xe0], ecx ; pop rbx ; ret
0x00000000000827fb : mov dword ptr [rdx + 0xe0], ecx ; ret
0x000000000017ab57 : mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x00000000000b3a6c : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000006301d : mov dword ptr [rdx + 4], 1 ; ret
0x000000000017ab39 : mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x00000000000cb186 : mov dword ptr [rdx + 4], eax ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000000000b3a4e : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000000cb185 : mov dword ptr [rdx + 4], r8d ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000000000017abeb : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 0xc] ; ret
0x000000000017ab69 : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x0000000000176819 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000017ac0b : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 0xd] ; ret
0x000000000017ab89 : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x0000000000176829 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000017aba9 : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x000000000017ac2b : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xe] ; ret
0x00000000000b3af0 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000017abc9 : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x000000000017aabb : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xf] ; ret
0x00000000000b3ad2 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000002fdbf : mov dword ptr [rdx + 8], eax ; pop rbx ; ret
0x000000000015cf6a : mov dword ptr [rdx], 0 ; ret
0x0000000000057c32 : mov dword ptr [rdx], 0xffffc002 ; ret
0x000000000011429b : mov dword ptr [rdx], eax ; cmp rdi, rax ; ja 0x1142c8 ; xor eax, eax ; ret
0x000000000017aae4 : mov dword ptr [rdx], eax ; lea rax, [rdx + 1] ; ret
0x000000000017ab12 : mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x000000000017aa64 : mov dword ptr [rdx], eax ; lea rax, [rdx + 7] ; ret
0x000000000004342a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000057b78 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000057da7 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x0000000000102890 : mov dword ptr [rdx], eax ; mov eax, r8d ; ret
0x0000000000102830 : mov dword ptr [rdx], eax ; mov eax, r9d ; ret
0x000000000004828a : mov dword ptr [rdx], eax ; mov rax, 0xffffffffffffffff ; ret
0x00000000000d4aaa : mov dword ptr [rdx], eax ; mov rax, r8 ; add rsp, 8 ; ret
0x00000000000b39e9 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000034551 : mov dword ptr [rdx], eax ; ret
0x00000000000cb189 : mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000000000871ac : mov dword ptr [rdx], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010257b : mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x00000000000a8622 : mov dword ptr [rdx], ecx ; ret
0x00000000000dd000 : mov dword ptr [rdx], edi ; xor eax, eax ; ret
0x0000000000085417 : mov dword ptr [rdx], esp ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x00000000000a0b7d : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009f866 : mov dword ptr [rip + 0x14f6dc], eax ; ret
0x0000000000095232 : mov dword ptr [rip + 0x157074], eax ; ret
0x000000000009520c : mov dword ptr [rip + 0x15707e], eax ; ret
0x00000000000951e3 : mov dword ptr [rip + 0x15709f], eax ; ret
0x00000000000951c3 : mov dword ptr [rip + 0x1570b7], eax ; ret
0x0000000000094ea9 : mov dword ptr [rip + 0x157439], eax ; ret
0x0000000000094e92 : mov dword ptr [rip + 0x157448], eax ; ret
0x0000000000094e78 : mov dword ptr [rip + 0x157452], edx ; ret
0x0000000000094e39 : mov dword ptr [rip + 0x157459], eax ; ret
0x0000000000094e29 : mov dword ptr [rip + 0x157471], eax ; ret
0x0000000000095276 : mov dword ptr [rip + 0x159c24], eax ; ret
0x0000000000095248 : mov dword ptr [rip + 0x159c3e], eax ; ret
0x00000000000440f3 : mov dword ptr [rip + 0x1a80af], eax ; mov eax, edx ; ret
0x00000000000440d0 : mov dword ptr [rip + 0x1a80d6], edx ; ret
0x0000000000023a50 : mov dword ptr [rip + 0x1cd8d2], eax ; ret
0x00000000000226b8 : mov dword ptr [rip + 0x1ceae2], edx ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000160db0 : mov dword ptr [rip + 0x8e0da], esi ; ret
0x000000000012d01c : mov dword ptr [rip + 0xc2e56], eax ; pop rbp ; ret
0x0000000000121af9 : mov dword ptr [rip + 0xca861], ebx ; pop rbx ; ret
0x0000000000121adf : mov dword ptr [rip + 0xca87b], ebx ; pop rbx ; ret
0x000000000011870e : mov dword ptr [rip + 0xd3c34], edi ; ret
0x000000000011764d : mov dword ptr [rip + 0xd813d], eax ; mov rax, r8 ; ret
0x000000000014830b : mov dword ptr [rsi + 0x10], eax ; ret
0x0000000000048159 : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x0000000000047c30 : mov dword ptr [rsi + 0x10], ecx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x0000000000047c34 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x000000000008df2c : mov dword ptr [rsi + 0x28], ecx ; mov byte ptr [rdx], al ; mov eax, r8d ; ret
0x00000000001131cf : mov dword ptr [rsi + 0x48], eax ; ret
0x00000000001127ea : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x000000000004810f : mov dword ptr [rsi + 0xc], 0x1000b ; ret
0x000000000004819b : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x00000000001482a7 : mov dword ptr [rsi + 8], eax ; ret
0x0000000000055604 : mov dword ptr [rsi + rax*8], edx ; xor eax, eax ; ret
0x000000000019022a : mov dword ptr [rsi - 2], ecx ; ret
0x000000000019021d : mov dword ptr [rsi - 4], ecx ; ret
0x00000000001482b9 : mov dword ptr [rsi], 0 ; ret
0x0000000000148354 : mov dword ptr [rsi], 0xa ; ret
0x000000000014835b : mov dword ptr [rsi], 0xb ; ret
0x0000000000148330 : mov dword ptr [rsi], 0xc ; ret
0x0000000000148313 : mov dword ptr [rsi], 7 ; mov dword ptr [rsi + 8], eax ; ret
0x000000000014834d : mov dword ptr [rsi], 8 ; ret
0x000000000015761a : mov dword ptr [rsi], eax ; mov qword ptr [rdi + 0x18], rdx ; mov eax, r8d ; ret
0x000000000008d313 : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000013b412 : mov dword ptr [rsi], edi ; ret
0x000000000013b94f : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x0000000000047c9f : mov dword ptr [rsi], edx ; mov eax, r8d ; ret
0x0000000000157597 : mov dword ptr [rsi], edx ; mov qword ptr [rdi + 0x18], rax ; mov eax, r8d ; ret
0x0000000000100454 : mov dword ptr [rsi], edx ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x0000000000041ba9 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x0000000000041d99 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000057ccc : mov dword ptr [rsp - 0x10], esi ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000a1f72 : mov dword ptr [rsp], esi ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000131725 : mov dword ptr fs:[r8], r9d ; add rsp, 0x18 ; ret
0x00000000000dfc2f : mov dword ptr fs:[r8], r9d ; add rsp, 8 ; ret
0x00000000000df4d7 : mov dword ptr fs:[r9], ebx ; mov rax, r8 ; pop rbx ; ret
0x00000000001197d7 : mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000d0177 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000160ccb : mov dword ptr fs:[rax], 0x26 ; xor eax, eax ; ret
0x000000000009e95b : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x000000000011d017 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000116d54 : mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x000000000013a210 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000141a5a : mov dword ptr fs:[rbx], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000433ed : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000043429 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000010288f : mov dword ptr fs:[rdx], eax ; mov eax, r8d ; ret
0x000000000010282f : mov dword ptr fs:[rdx], eax ; mov eax, r9d ; ret
0x00000000000bbc28 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000167cd0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000b6e70 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000112af7 : mov eax, 0 ; cmova eax, edx ; ret
0x0000000000055039 : mov eax, 0 ; jne 0x55043 ; push r10 ; ret
0x0000000000055542 : mov eax, 0 ; jne 0x5554c ; push r10 ; ret
0x0000000000146994 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00000000000bc1e1 : mov eax, 0x10 ; pop rbx ; ret
0x0000000000063028 : mov eax, 0x10 ; ret
0x0000000000148f15 : mov eax, 0x100 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000113c86 : mov eax, 0x100 ; mov word ptr [rdi + 0x16], ax ; ret
0x000000000013bd09 : mov eax, 0x100 ; ret
0x000000000013bd00 : mov eax, 0x101 ; ret
0x000000000013bcf7 : mov eax, 0x102 ; cmovne eax, edx ; ret
0x0000000000094d40 : mov eax, 0x16 ; ret
0x00000000000e506c : mov eax, 0x20 ; cmove rax, rdx ; ret
0x00000000000e513a : mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00000000000bc1da : mov eax, 0x20 ; pop rbx ; ret
0x000000000003426b : mov eax, 0x200 ; ret
0x00000000000bc1d3 : mov eax, 0x30 ; pop rbx ; ret
0x00000000000bc1cc : mov eax, 0x40 ; pop rbx ; ret
0x00000000000e50e8 : mov eax, 0x40 ; ret
0x00000000000e49bd : mov eax, 0x5b000000 ; pop rbp ; ret
0x00000000000bc1c5 : mov eax, 0x60 ; pop rbx ; ret
0x00000000000ee45e : mov eax, 0x7408e383 ; xchg ebx, eax ; pop rbx ; ret
0x00000000000e4f5b : mov eax, 0x7d00 ; ret
0x00000000000e5020 : mov eax, 0x7e ; ret
0x00000000000e4f82 : mov eax, 0x7f ; cmove rax, rdx ; ret
0x00000000000e500a : mov eax, 0x7f ; cmovne rax, rdx ; ret
0x000000000013c9c0 : mov eax, 0x7fffffff ; ret
0x00000000000bc1ef : mov eax, 0x80 ; pop rbx ; ret
0x00000000000f89eb : mov eax, 0x89000000 ; ret
0x000000000012d412 : mov eax, 0x89483e74 ; ret
0x0000000000146cf7 : mov eax, 0x8948ffed ; ret
0x0000000000136e6a : mov eax, 0xa ; pop rbx ; pop rbp ; ret
0x000000000014d170 : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000f23d1 : mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000000f24a0 : mov eax, 0xc ; ret
0x000000000015361a : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e5018 : mov eax, 0xfc17 ; ret
0x00000000000c8567 : mov eax, 0xfd83949 ; xchg ebx, eax ; ret
0x00000000000e5148 : mov eax, 0xff ; ret
0x00000000000e4fc7 : mov eax, 0xfffa ; ret
0x0000000000160dc9 : mov eax, 0xfffffffe ; ret
0x000000000013bcb6 : mov eax, 0xffffffff ; cmove eax, edx ; ret
0x0000000000054db1 : mov eax, 0xffffffff ; mov eax, r8d ; ret
0x00000000000875b9 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00000000000412be : mov eax, 0xffffffff ; pop rbp ; ret
0x00000000000832ec : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000008e663 : mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000246f6 : mov eax, 0xffffffff ; ret
0x000000000008d2ee : mov eax, 0xffffffff ; test edx, edx ; je 0x8d300 ; ret
0x000000000008d74e : mov eax, 0xffffffff ; test edx, edx ; je 0x8d760 ; ret
0x00000000000dcfbe : mov eax, 1 ; add rsp, 8 ; ret
0x0000000000192be0 : mov eax, 1 ; jg 0x192bf0 ; neg eax ; ret
0x00000000000cf080 : mov eax, 1 ; jg 0xcf089 ; neg eax ; ret
0x000000000018f9a6 : mov eax, 1 ; jl 0x18f9b0 ; neg eax ; ret
0x00000000000ec440 : mov eax, 1 ; mov byte ptr [rdi], 0x5b ; ret
0x000000000008cd41 : mov eax, 1 ; mov eax, r8d ; ret
0x0000000000057b55 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x000000000014d07e : mov eax, 1 ; movups xmmword ptr [rdx], xmm1 ; ret
0x000000000014fec6 : mov eax, 1 ; movups xmmword ptr [rdx], xmm2 ; ret
0x00000000001507d6 : mov eax, 1 ; movups xmmword ptr [rdx], xmm3 ; ret
0x00000000001507b6 : mov eax, 1 ; movups xmmword ptr [rdx], xmm4 ; ret
0x0000000000087594 : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x000000000009eb13 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000832ca : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000010c570 : mov eax, 1 ; pop rbx ; ret
0x000000000005562e : mov eax, 1 ; ret
0x00000000000e5214 : mov eax, 1 ; test edi, edi ; js 0xe5220 ; ret
0x0000000000057d54 : mov eax, 2 ; ret
0x00000000000dcff7 : mov eax, 3 ; cmovne eax, edx ; ret
0x00000000000cfb41 : mov eax, 3 ; ret
0x00000000000cfb51 : mov eax, 4 ; ret
0x000000000012cf8f : mov eax, 5 ; pop r12 ; pop rbp ; ret
0x0000000000106fb7 : mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00000000000cfb61 : mov eax, 5 ; ret
0x00000000000cfb71 : mov eax, 6 ; ret
0x00000000000cfb81 : mov eax, 7 ; ret
0x00000000000bc1e8 : mov eax, 8 ; pop rbx ; ret
0x000000000010c509 : mov eax, 9 ; pop rbp ; pop r12 ; ret
0x0000000000094c46 : mov eax, dword ptr [0x10] ; ret
0x0000000000125309 : mov eax, dword ptr [r12] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000121fd8 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000121fc8 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000014110b : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x141118 ; ret
0x0000000000114c3c : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0x114c45 ; ret
0x000000000011d031 : mov eax, dword ptr [rax + 0x1c8] ; ret
0x000000000012ce60 : mov eax, dword ptr [rax + 0x30] ; ret
0x00000000001228bb : mov eax, dword ptr [rax + 0x38] ; ret
0x000000000011cd80 : mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x000000000014fdd1 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000150711 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000473ce : mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000092720 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x92718 ; ret
0x00000000000328f2 : mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000011d00b : mov eax, dword ptr [rax + 8] ; ret
0x00000000000bc79b : mov eax, dword ptr [rax + rax*4] ; sub eax, dword ptr [r8 + r9*4] ; je 0xbc780 ; ret
0x0000000000055848 : mov eax, dword ptr [rax + rcx*8] ; mov qword ptr [r9 + rcx*8], rax ; xor eax, eax ; ret
0x0000000000034269 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000003445b : mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000033d63 : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000123278 : mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x000000000014d0f1 : mov eax, dword ptr [rax] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000328f0 : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x0000000000088043 : mov eax, dword ptr [rax] ; mov eax, r8d ; ret
0x00000000000fec9c : mov eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; mov rax, r8 ; ret
0x0000000000034240 : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000473cb : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000001411fd : mov eax, dword ptr [rax] ; ret
0x0000000000093549 : mov eax, dword ptr [rax] ; test rax, rax ; jne 0x93540 ; ret
0x00000000000ee330 : mov eax, dword ptr [rbp + 0x4c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008cdd5 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000015323e : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x153250 ; pop rbx ; ret
0x00000000000b3a69 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000176816 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000176826 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000000b3aed : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000b3b0d : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000017ff1a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000bc73d : mov eax, dword ptr [rcx + rax*4] ; sub eax, dword ptr [rcx + r8*4] ; je 0xbc728 ; ret
0x00000000001817f2 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000008774f : mov eax, dword ptr [rcx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017ab10 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x00000000000b3a15 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000017aa61 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000176731 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000017aae1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x00000000000b39e6 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000cef8b : mov eax, dword ptr [rdi + 0x10] ; cmp eax, dword ptr [rsi + 0x10] ; jne 0xcf080 ; ret
0x0000000000093564 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000009358c : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000001574a5 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000de295 : mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000000cf000 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xcf080 ; ret
0x00000000000cf015 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xcf080 ; ret
0x0000000000157924 : mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000008ce29 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000cf020 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xcf080 ; ret
0x00000000000cf03b : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xcf080 ; ret
0x00000000000cf050 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xcf080 ; ret
0x00000000000cf065 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xcf080 ; ret
0x00000000000cf070 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xcf080 ; ret
0x000000000008ccf9 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000093855 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000008aeac : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x8aeb8 ; ret
0x000000000010c784 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000001136a4 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000008cd84 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000008cd54 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000094da4 : mov eax, dword ptr [rdi] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000093556 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000095245 : mov eax, dword ptr [rdi] ; nop ; mov dword ptr [rip + 0x159c3e], eax ; ret
0x00000000000de2e4 : mov eax, dword ptr [rdi] ; ret
0x000000000008def4 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x000000000008df04 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x000000000014de08 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x14de10 ; ret
0x0000000000154508 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x154510 ; ret
0x000000000008a71e : mov eax, dword ptr [rdx + 0x4c] ; cmp dword ptr [rdx + 0x48], eax ; cmovne eax, ecx ; ret
0x0000000000102a41 : mov eax, dword ptr [rdx + 8] ; ret
0x00000000000341f7 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000aedf6 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000033dfc : mov eax, dword ptr [rdx + rax] ; mov eax, r8d ; ret
0x00000000000328b1 : mov eax, dword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000085590 : mov eax, dword ptr [rdx] ; ret
0x000000000009a0c9 : mov eax, dword ptr [rip + 0x151e11] ; mov qword ptr [rax], rdi ; ret
0x00000000000961cf : mov eax, dword ptr [rip + 0x155d0b] ; mov qword ptr [rax], rdx ; ret
0x0000000000093835 : mov eax, dword ptr [rip + 0x159d65] ; ret
0x00000000000440a4 : mov eax, dword ptr [rip + 0x1a80fe] ; ret
0x0000000000044094 : mov eax, dword ptr [rip + 0x1a8112] ; ret
0x0000000000033d11 : mov eax, dword ptr [rip + 0x1b80d1] ; mov qword ptr [rax], rdx ; ret
0x000000000002f5a5 : mov eax, dword ptr [rip + 0x1be3bd] ; ret
0x0000000000025ab5 : mov eax, dword ptr [rip + 0x1cb6ed] ; ret
0x0000000000025aa5 : mov eax, dword ptr [rip + 0x1cb70d] ; ret
0x00000000001228b5 : mov eax, dword ptr [rip + 0xc95a5] ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000034455 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000034465 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000328d1 : mov eax, dword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000e2c93 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000113254 : mov eax, dword ptr [rsp + 0x18] ; add rsp, 0x28 ; ret
0x00000000000e2e73 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000e2d4d : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x28 ; ret
0x0000000000114fdf : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x000000000011f2a9 : mov eax, dword ptr [rsp + 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000120bfc : mov eax, dword ptr [rsp + 4] ; add rsp, 0x28 ; ret
0x00000000000349e6 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000048275 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x0000000000113058 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000120fd1 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x38 ; ret
0x000000000010e9d6 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000120370 : mov eax, dword ptr [rsp] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000010c1c4 : mov eax, dword ptr [rsp] ; add rsp, 0x28 ; ret
0x0000000000120436 : mov eax, dword ptr [rsp] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000122917 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x0000000000122978 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000012530a : mov eax, dword ptr [rsp] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000125308 : mov eax, dword ptr fs:[r12] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004301f : mov eax, eax ; add rsp, 0x118 ; ret
0x00000000000d4a90 : mov eax, eax ; add rsp, 8 ; ret
0x000000000013c5da : mov eax, eax ; mov byte ptr [r8 + 2], 0 ; ret
0x000000000013c33c : mov eax, eax ; mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000116ed6 : mov eax, eax ; mov byte ptr [rsi - 1], 0 ; ret
0x000000000011f7d8 : mov eax, eax ; mov eax, r8d ; ret
0x000000000015cf67 : mov eax, eax ; mov qword ptr [rdx], 0 ; ret
0x00000000001532f9 : mov eax, eax ; mov rax, r8 ; pop rbx ; ret
0x0000000000047ce9 : mov eax, eax ; movups xmmword ptr [rdi], xmm0 ; ret
0x00000000000dfb26 : mov eax, eax ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009a49b : mov eax, eax ; pop r12 ; pop r13 ; ret
0x000000000008b649 : mov eax, eax ; pop r12 ; ret
0x000000000009a507 : mov eax, eax ; pop r13 ; ret
0x0000000000084563 : mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013b731 : mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002f706 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000995a4 : mov eax, eax ; pop rbp ; ret
0x000000000009cf7f : mov eax, eax ; pop rbx ; pop r12 ; ret
0x0000000000046600 : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000046d31 : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000046c8c : mov eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000438f0 : mov eax, eax ; pop rbx ; ret
0x0000000000033da2 : mov eax, eax ; ret
0x000000000018d3c4 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x0000000000188a21 : mov eax, eax ; vzeroupper ; ret
0x000000000009efc6 : mov eax, ebp ; mov rdx, r12 ; pop r12 ; pop r13 ; ret
0x00000000001417d1 : mov eax, ebp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009f9e9 : mov eax, ebp ; pop r12 ; pop r13 ; ret
0x00000000000828ce : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bcc01 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000bcba6 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008f50e : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000055bb3 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000008d93f : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011cc4b : mov eax, ebx ; mov rax, r8 ; pop rbx ; ret
0x00000000000a2c3a : mov eax, ebx ; pop rbx ; cmovne rax, rdi ; ret
0x00000000000c9f06 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008d884 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000089dfe : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000113913 : mov eax, ebx ; pop rbx ; ret
0x0000000000041244 : mov eax, ebx ; ret
0x00000000000627a7 : mov eax, ebx ; test r8d, r8d ; jne 0x627b0 ; pop rbx ; ret
0x0000000000055a7b : mov eax, ecx ; adc eax, eax ; ret
0x0000000000043233 : mov eax, ecx ; add rsp, 0x148 ; ret
0x0000000000113a90 : mov eax, ecx ; add rsp, 0x38 ; ret
0x0000000000038ca6 : mov eax, ecx ; pop r12 ; ret
0x000000000007a178 : mov eax, ecx ; pop r14 ; ret
0x000000000007a0c7 : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000038c78 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c6b4b : mov eax, ecx ; pop rbx ; ret
0x0000000000086408 : mov eax, ecx ; ret
0x0000000000052946 : mov eax, ecx ; shl eax, 0x1e ; or eax, edx ; ret
0x00000000000342b4 : mov eax, edi ; and eax, 0x7f ; ret
0x000000000012fb08 : mov eax, edi ; and eax, 0xffffff ; ret
0x000000000012fac4 : mov eax, edi ; bswap eax ; ret
0x00000000000472f4 : mov eax, edi ; cdq ; xor eax, edx ; sub eax, edx ; ret
0x0000000000047345 : mov eax, edi ; cqo ; idiv rsi ; ret
0x0000000000116e54 : mov eax, edi ; mov byte ptr [rsi - 1], 0 ; mov rax, r8 ; ret
0x000000000012fb22 : mov eax, edi ; or eax, esi ; bswap eax ; ret
0x0000000000095651 : mov eax, edi ; pop rbx ; pop rbp ; mov rax, r8 ; pop r12 ; ret
0x00000000000a8eed : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005b522 : mov eax, edi ; ret
0x000000000012fad4 : mov eax, edi ; rol ax, 8 ; ret
0x000000000012f9ee : mov eax, edi ; sar rax, 6 ; ret
0x000000000012fb98 : mov eax, edi ; shr eax, 0x18 ; ret
0x000000000018a8f1 : mov eax, edi ; vzeroupper ; ret
0x000000000012943c : mov eax, edx ; cmove eax, ecx ; ret
0x000000000013c933 : mov eax, edx ; movsxd rdx, ecx ; ret
0x0000000000056af5 : mov eax, edx ; pop rbx ; ret
0x00000000000440f9 : mov eax, edx ; ret
0x0000000000150794 : mov eax, esi ; movups xmmword ptr [r8 + 0x30], xmm0 ; ret
0x000000000014d06c : mov eax, esi ; movups xmmword ptr [r8 + 8], xmm0 ; ret
0x0000000000107062 : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000134872 : mov eax, esi ; pop rbx ; ret
0x0000000000085af5 : mov eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a0399 : mov eax, esp ; pop r12 ; pop r13 ; ret
0x0000000000034b49 : mov eax, esp ; pop r12 ; ret
0x0000000000085a13 : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002ff34 : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008e246 : mov eax, esp ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000477a3 : mov eax, esp ; pop rbp ; pop r12 ; ret
0x00000000001179c5 : mov eax, esp ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000005b935 : mov eax, esp ; pop rbx ; pop r12 ; ret
0x0000000000080ad1 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008e22c : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000034aab : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011920f : mov eax, esp ; pop rdx ; pop r12 ; ret
0x000000000013efd9 : mov eax, r10d ; ret
0x0000000000113912 : mov eax, r11d ; pop rbx ; ret
0x0000000000085af4 : mov eax, r12d ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009d4e6 : mov eax, r12d ; pop r12 ; ret
0x0000000000125787 : mov eax, r12d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000014dded : mov eax, r12d ; pop rbp ; pop r12 ; ret
0x00000000001179c4 : mov eax, r12d ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000005b934 : mov eax, r12d ; pop rbx ; pop r12 ; ret
0x00000000000868b2 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000044155 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e2fcf : mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000114d6a : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011733f : mov eax, r8d ; add rsp, 8 ; ret
0x000000000013c33b : mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000047ce8 : mov eax, r8d ; movups xmmword ptr [rdi], xmm0 ; ret
0x00000000000dfb25 : mov eax, r8d ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008b648 : mov eax, r8d ; pop r12 ; ret
0x0000000000150320 : mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002f705 : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000137a00 : mov eax, r8d ; pop rbp ; ret
0x00000000000465ff : mov eax, r8d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000046d30 : mov eax, r8d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000046e6f : mov eax, r8d ; pop rbx ; pop rbp ; ret
0x00000000000438ef : mov eax, r8d ; pop rbx ; ret
0x0000000000033da1 : mov eax, r8d ; ret
0x0000000000113a8f : mov eax, r9d ; add rsp, 0x38 ; ret
0x00000000000c6b4a : mov eax, r9d ; pop rbx ; ret
0x0000000000086407 : mov eax, r9d ; ret
0x00000000000938fe : mov ebp, 0x10015ae ; ret
0x00000000000ac661 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000ac671 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00000000000ac651 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000184b91 : mov ebp, 0x60c083c0 ; add rax, rdi ; ret
0x0000000000026841 : mov ebp, 0x8948ffff ; ret
0x00000000000ac777 : mov ebp, 0xf80148c0 ; add rax, rsi ; ret
0x00000000000ac5a7 : mov ebp, 0xf80148c0 ; ret
0x0000000000184a80 : mov ebp, 0xf80148c0 ; vzeroupper ; ret
0x00000000000b1bac : mov ebp, 0xf80148c6 ; ret
0x00000000000696a8 : mov ebp, ds ; sar dl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000052ad9 : mov ebx, 0x39480019 ; ret
0x00000000000a33b4 : mov ebx, 0x4bb ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000094608 : mov ebx, 0xafb8341 ; je 0x94610 ; ret
0x0000000000154190 : mov ebx, 0xbc0f48eb ; ret
0x00000000000e3669 : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x000000000004c951 : mov ebx, dword ptr [rdx - 0x7cb80000] ; ret
0x00000000001196f5 : mov ebx, esi ; je 0x119700 ; pop rbx ; ret
0x000000000005b4cb : mov ecx, 0x3a8 ; mov rsp, rdx ; ret
0x00000000000a0403 : mov ecx, 0x480000ba ; cmove eax, edx ; ret
0x000000000009f6a3 : mov ecx, 0x48000126 ; cmove eax, edx ; ret
0x00000000000a0893 : mov ecx, 0x48000d01 ; cmovne eax, edx ; ret
0x00000000000c6b45 : mov ecx, 0xffffffff ; mov eax, r9d ; pop rbx ; ret
0x00000000001230fc : mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x123108 ; ret
0x0000000000123165 : mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x123170 ; ret
0x0000000000123a4c : mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x123a58 ; ret
0x0000000000123aa9 : mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x123ab8 ; ret
0x000000000018fb40 : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000aedf3 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000168293 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000168493 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000168693 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000b6ea0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000b6ee1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000016dd33 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000016dcc3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000016dc53 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000016db75 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016db05 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016da95 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016da25 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016d9b5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016d945 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016d8d5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016de15 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000b6e81 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a8639 : mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000001229ed : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x00000000000bbbf6 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000428ad : mov edi, 0x48001503 ; add esp, 0x10 ; pop rbx ; ret
0x000000000010d04c : mov edi, 0xf8 ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000010d0e0 : mov edi, 0xf8 ; ret
0x0000000000137b4d : mov edi, dword ptr [rbx + 0x48] ; test rdi, rdi ; jne 0x137b40 ; pop rbx ; ret
0x000000000014de05 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x14de10 ; ret
0x0000000000154505 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x154510 ; ret
0x0000000000123504 : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000047329 : mov edi, edx ; shl rdi, 0x20 ; or rax, rdi ; ret
0x0000000000120e0a : mov edx, 0 ; cmovb rax, rdx ; ret
0x00000000000a28d6 : mov edx, 0 ; cmove rax, rdx ; ret
0x000000000013bccd : mov edx, 0x104 ; cmove eax, edx ; ret
0x00000000000e4fea : mov edx, 0x7f ; cmovne rax, rdx ; ret
0x00000000001383c9 : mov edx, 0x89480000 ; ret
0x000000000019530a : mov edx, 0x94d3ff3 ; ret
0x000000000009f358 : mov edx, 0xffffffff ; cmovbe eax, edx ; ret
0x00000000000271fb : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000013c948 : mov edx, 0xffffffff ; ret
0x0000000000043ddd : mov edx, 1 ; cmove eax, edx ; ret
0x0000000000102a84 : mov edx, 2 ; cmove eax, edx ; ret
0x000000000008cdbc : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x0000000000055600 : mov edx, dword ptr [rax + rax*8] ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; ret
0x00000000001817ef : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000017ff1d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000012334e : mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x123360 ; ret
0x0000000000123c7e : mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x123c90 ; ret
0x000000000018bda2 : mov edx, dword ptr [rdi] ; cmp edx, dword ptr [rsi] ; jne 0x18bd8c ; ret
0x00000000000bd20e : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x0000000000055066 : mov edx, dword ptr [rdx + 0x88] ; xor eax, eax ; ret
0x000000000009e925 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0x9e920 ; ret
0x00000000000b6ec2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000b6eb3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000b6f03 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b6f13 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000167cd1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000168090 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000167921 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000b84d0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x00000000000b9320 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 4] ; ret
0x00000000000b6e90 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000189180 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; vzeroupper ; ret
0x00000000000baf80 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000b8521 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000000b9371 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 8] ; ret
0x00000000000b6ed1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000b84b1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x00000000000b92f1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 2] ; ret
0x00000000000b6e71 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000a8a49 : mov edx, dword ptr [rsp + 0x10] ; mov qword ptr [rax], rdx ; ret
0x000000000013f091 : mov edx, eax ; mov byte ptr [r10], 0 ; ret
0x000000000011f88c : mov edx, eax ; or eax, esi ; wrpkru ; xor eax, eax ; ret
0x00000000000bbf65 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000009efc9 : mov edx, esp ; pop r12 ; pop r13 ; ret
0x0000000000123368 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x00000000000b913e : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000000000cf58e : mov esi, 0x48000000 ; lea eax, [rdi - 0x10] ; ret
0x000000000012d8fe : mov esi, 0x48fff8e1 ; cmove eax, edx ; ret
0x000000000015317e : mov esi, 0x640009dc ; mov qword ptr [rax], rdx ; ret
0x000000000005ea1f : mov esi, 0x77cf390e ; jrcxz 0x5ea6a ; mov eax, eax ; ret
0x000000000005d9dd : mov esi, 0x83410014 ; in eax, dx ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000048b52 : mov esi, 0x83480143 ; ret
0x000000000012a4a2 : mov esi, 0x8348014b ; ret
0x00000000000e094a : mov esi, 0x83480153 ; ret
0x000000000004a185 : mov esi, 0x8348016b ; ret
0x00000000000effb9 : mov esi, 0xb60f000f ; ret
0x00000000001279a4 : mov esi, 0xc48348c3 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a8815 : mov esi, 0xf2390714 ; je 0xa8810 ; ret
0x000000000002ca01 : mov esi, dword ptr [rbp] ; add byte ptr [rbp - 0x77], cl ; ret
0x00000000000bbc27 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000015f243 : mov esi, eax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000f9757 : mov esi, edx ; dec dword ptr [rax - 0x77] ; ret
0x0000000000052a5e : mov esp, 0x39480019 ; ret
0x00000000000ac161 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00000000000ac191 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000ac181 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000529fc : mov esp, 0x4c60019 ; adc byte ptr [rax], al ; ret
0x00000000000d3567 : mov esp, 0x83480011 ; ret
0x0000000000089df9 : mov esp, 0x8c48348 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000a06ba : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x00000000000b1d53 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x0000000000024a64 : mov esp, 0xe80018f5 ; ret
0x00000000000ac25b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x00000000000ac171 : mov esp, 0xf80148c0 ; ret
0x00000000001847a2 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x000000000008e194 : mov esp, eax ; mov rax, r12 ; pop r12 ; ret
0x000000000008e1a1 : mov esp, ebp ; pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x000000000005b4d1 : mov esp, edx ; ret
0x00000000001946c8 : mov gs, word ptr [rdi - 0x72000006] ; ret
0x000000000005584b : mov qword ptr [r9 + rcx*8], rax ; xor eax, eax ; ret
0x000000000018fb34 : mov qword ptr [r9 - 8], rcx ; ret
0x000000000013c464 : mov qword ptr [r9], r10 ; ret
0x000000000013c52c : mov qword ptr [r9], rcx ; ret
0x000000000013c50a : mov qword ptr [r9], rdi ; ret
0x0000000000086e5c : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000008762b : mov qword ptr [rax + 0x18], rdx ; xor eax, eax ; mov dword ptr [rbx], ecx ; pop rbx ; ret
0x0000000000095906 : mov qword ptr [rax + 0x20], rdx ; add rsp, 8 ; ret
0x000000000008cdbf : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x0000000000086e60 : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000086e9e : mov qword ptr [rax + 0x40], rdx ; movups xmmword ptr [rax], xmm0 ; ret
0x0000000000087f5c : mov qword ptr [rax + 0x40], rsi ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000092794 : mov qword ptr [rax + 8], 0 ; ret
0x00000000001142bb : mov qword ptr [rax], 0xffffffffffffffff ; xor eax, eax ; ret
0x000000000013c23c : mov qword ptr [rax], r10 ; lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x000000000008558d : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00000000000fec9e : mov qword ptr [rax], rdi ; mov rax, r8 ; ret
0x000000000009a0cf : mov qword ptr [rax], rdi ; ret
0x000000000011efc6 : mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000033d17 : mov qword ptr [rax], rdx ; ret
0x0000000000087f27 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000002fdd6 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000015f909 : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000094d06 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000157975 : mov qword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x000000000015f8c1 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000ff51e : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x000000000008cdd8 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000093467 : mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001197c5 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000060ef5 : mov qword ptr [rbx], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000015fe04 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000009d10c : mov qword ptr [rbx], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001532c5 : mov qword ptr [rbx], rax ; pop rbx ; ret
0x000000000006bba0 : mov qword ptr [rbx], rdx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000178833 : mov qword ptr [rcx + 5], rdx ; ret
0x0000000000178843 : mov qword ptr [rcx + 6], rdx ; ret
0x0000000000178853 : mov qword ptr [rcx + 7], rdx ; ret
0x0000000000178863 : mov qword ptr [rcx + 8], rdx ; ret
0x000000000008aa19 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000001787f0 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000178810 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000178820 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000178830 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000178840 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000178850 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000178860 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000178800 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x00000000001787e0 : mov qword ptr [rcx], rdx ; ret
0x00000000000564de : mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000b86ec : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x00000000000b955c : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x18] ; ret
0x00000000000b703c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000b701c : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000bb1bc : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000b7d2f : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000b707f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000b709f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000b7060 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000015755a : mov qword ptr [rdi + 0x18], rax ; mov eax, r8d ; ret
0x00000000000918c6 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000008d30e : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000015761c : mov qword ptr [rdi + 0x18], rdx ; mov eax, r8d ; ret
0x00000000001574e4 : mov qword ptr [rdi + 0x18], rsi ; mov eax, r8d ; ret
0x000000000015751c : mov qword ptr [rdi + 0x18], rsi ; mov rax, r8 ; ret
0x0000000000157dec : mov qword ptr [rdi + 0x20], 0 ; ret
0x00000000000918f7 : mov qword ptr [rdi + 0x48], rax ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x00000000000b86ac : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x00000000000b951c : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x16] ; ret
0x00000000000b6fdc : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000bb17c : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000b86cc : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x00000000000b953c : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x17] ; ret
0x00000000000b6ffc : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000bb19c : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000016db77 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016db07 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016da97 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016da27 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b85aa : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x00000000000b940a : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xd] ; ret
0x000000000016d9b7 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b6f2a : mov qword ptr [rdi + 5], rdx ; ret
0x00000000000bb06a : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000b85ca : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x00000000000b942a : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xe] ; ret
0x000000000016d947 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b6f3a : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000bb08a : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000b85ea : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x00000000000b944a : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xf] ; ret
0x000000000016d8d7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b6f4a : mov qword ptr [rdi + 7], rdx ; ret
0x00000000000bb0aa : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x0000000000055a77 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000056467 : mov qword ptr [rdi + 8], r9 ; ret
0x0000000000057d65 : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x00000000000918ca : mov qword ptr [rdi + 8], rax ; ret
0x000000000008df52 : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000018a5fb : mov qword ptr [rdi + r8 - 8], rdx ; vzeroupper ; ret
0x00000000001891ab : mov qword ptr [rdi + rdx - 7], r9 ; vzeroupper ; ret
0x00000000000bc04e : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x00000000000bbc1a : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x00000000001677b4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001677f2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000563ce : mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000167b3b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016d387 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000167d1b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016d307 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000167f0b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016d287 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001680dc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016d1f8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001682dc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016d168 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001684dc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016d0d8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000b7eb0 : mov qword ptr [rdi - 1], rdx ; ret
0x000000000005634d : mov qword ptr [rdi - 8], r9 ; ret
0x00000000001677b8 : mov qword ptr [rdi - 8], rcx ; ret
0x00000000001677f6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000016796b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000167a67 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001679b3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016d407 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000014a5fe : mov qword ptr [rdi], r8 ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a8749 : mov qword ptr [rdi], r8 ; mov rax, r12 ; pop r12 ; ret
0x000000000005631c : mov qword ptr [rdi], r9 ; ret
0x00000000000a8b05 : mov qword ptr [rdi], rax ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000a86eb : mov qword ptr [rdi], rax ; mov rax, r9 ; ret
0x000000000005b51e : mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x0000000000041fb3 : mov qword ptr [rdi], rax ; subsd xmm0, xmm1 ; ret
0x00000000000b8536 : mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x00000000000b7bd6 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000b6f06 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b6f16 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000b6f27 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000b6f37 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000b6f47 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000b6ef7 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000b6ee6 : mov qword ptr [rdi], rcx ; ret
0x000000000018bc52 : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x00000000000a8975 : mov qword ptr [rdi], rdx ; add rax, rdi ; ret
0x00000000000b8523 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000000b9373 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 8] ; ret
0x00000000000b7ed0 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000b7ef0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b7f00 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000b7f10 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000b7f20 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000b7ee0 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000041fcd : mov qword ptr [rdi], rdx ; ret
0x00000000000bafd3 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x000000000018fb31 : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000057b5a : mov qword ptr [rdi], rsi ; ret
0x00000000000860c3 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x00000000001492a7 : mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000149281 : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000149285 : mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000008e5bc : mov qword ptr [rdx + 0xe0], rcx ; pop rbx ; ret
0x00000000000827fa : mov qword ptr [rdx + 0xe0], rcx ; ret
0x000000000017abea : mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x000000000017685a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000017ac0a : mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x000000000017687a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000017ac2a : mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x000000000017689a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000017aaba : mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x000000000017678a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x000000000015cf69 : mov qword ptr [rdx], 0 ; ret
0x000000000017aa63 : mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000121273 : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000176733 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000034550 : mov qword ptr [rdx], rax ; ret
0x00000000000871ab : mov qword ptr [rdx], rcx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a8621 : mov qword ptr [rdx], rcx ; ret
0x000000000009f865 : mov qword ptr [rip + 0x14f6dc], rax ; ret
0x000000000009520b : mov qword ptr [rip + 0x15707e], rax ; ret
0x00000000000951e2 : mov qword ptr [rip + 0x15709f], rax ; ret
0x00000000000951c2 : mov qword ptr [rip + 0x1570b7], rax ; ret
0x0000000000094ea8 : mov qword ptr [rip + 0x157439], rax ; ret
0x0000000000094e91 : mov qword ptr [rip + 0x157448], rax ; ret
0x0000000000094e77 : mov qword ptr [rip + 0x157452], rdx ; ret
0x0000000000094e38 : mov qword ptr [rip + 0x157459], rax ; ret
0x0000000000094e28 : mov qword ptr [rip + 0x157471], rax ; ret
0x0000000000095275 : mov qword ptr [rip + 0x159c24], rax ; ret
0x0000000000023a4f : mov qword ptr [rip + 0x1cd8d2], rax ; ret
0x0000000000160daf : mov qword ptr [rip + 0x8e0da], rsi ; ret
0x000000000012d01b : mov qword ptr [rip + 0xc2e56], rax ; pop rbp ; ret
0x0000000000121af8 : mov qword ptr [rip + 0xca861], rbx ; pop rbx ; ret
0x0000000000121ade : mov qword ptr [rip + 0xca87b], rbx ; pop rbx ; ret
0x000000000014830a : mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000048158 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x0000000000047c33 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000008df2b : mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], al ; mov eax, r8d ; ret
0x00000000001131ce : mov qword ptr [rsi + 0x48], rax ; ret
0x00000000001482a6 : mov qword ptr [rsi + 8], rax ; ret
0x0000000000055603 : mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; ret
0x000000000008d312 : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000013b411 : mov qword ptr [rsi], rdi ; ret
0x000000000013b94e : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000153182 : mov qword ptr fs:[rax], rdx ; ret
0x00000000001532c4 : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000003454f : mov qword ptr fs:[rdx], rax ; ret
0x00000000000bbc19 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000013f090 : mov r10, rax ; mov byte ptr [r10], 0 ; ret
0x000000000008e193 : mov r12, rax ; mov rax, r12 ; pop r12 ; ret
0x00000000000fec9b : mov r8, qword ptr [rax] ; mov qword ptr [rax], rdi ; mov rax, r8 ; ret
0x00000000001532f8 : mov r8, rax ; mov rax, r8 ; pop rbx ; ret
0x000000000011cc4a : mov r8, rbx ; mov rax, r8 ; pop rbx ; ret
0x00000000000c8566 : mov r8d, 0xfd83949 ; xchg ebx, eax ; ret
0x0000000000054db0 : mov r8d, 0xffffffff ; mov eax, r8d ; ret
0x000000000008cd40 : mov r8d, 1 ; mov eax, r8d ; ret
0x0000000000088042 : mov r8d, dword ptr [rax] ; mov eax, r8d ; ret
0x0000000000033dfb : mov r8d, dword ptr [rdx + rax] ; mov eax, r8d ; ret
0x000000000011f7d7 : mov r8d, eax ; mov eax, r8d ; ret
0x0000000000042f2e : mov rax, 0xffffffffffffffff ; ret
0x00000000000cfb20 : mov rax, 1 ; ret
0x00000000000cfb30 : mov rax, 2 ; ret
0x00000000000cfb40 : mov rax, 3 ; ret
0x00000000000cfb50 : mov rax, 4 ; ret
0x00000000000cfb60 : mov rax, 5 ; ret
0x00000000000cfb70 : mov rax, 6 ; ret
0x00000000000cfb80 : mov rax, 7 ; ret
0x0000000000094c45 : mov rax, qword ptr [0x10] ; ret
0x0000000000121fd7 : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000121fc7 : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x0000000000114c3b : mov rax, qword ptr [rax + 0x18] ; test rax, rax ; je 0x114c45 ; ret
0x000000000011d030 : mov rax, qword ptr [rax + 0x1c8] ; ret
0x000000000012ce5f : mov rax, qword ptr [rax + 0x30] ; ret
0x000000000014fdd0 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000150710 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000011d028 : mov rax, qword ptr [rax + 0x58] ; ret
0x000000000009271f : mov rax, qword ptr [rax + 0x68] ; test rax, rax ; jne 0x92718 ; ret
0x000000000011d00a : mov rax, qword ptr [rax + 8] ; ret
0x0000000000034298 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x0000000000033d62 : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x00000000000328ef : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x00000000000473ca : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000001411fc : mov rax, qword ptr [rax] ; ret
0x0000000000093548 : mov rax, qword ptr [rax] ; test rax, rax ; jne 0x93540 ; ret
0x000000000008cdd4 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000015323d : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x153250 ; pop rbx ; ret
0x0000000000176730 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000001574a4 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000de294 : mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000008ce28 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000008ccf8 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000093854 : mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000093555 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000034226 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000328b0 : mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000093834 : mov rax, qword ptr [rip + 0x159d65] ; ret
0x000000000002f5a4 : mov rax, qword ptr [rip + 0x1be3bd] ; ret
0x0000000000025ab4 : mov rax, qword ptr [rip + 0x1cb6ed] ; ret
0x0000000000025aa4 : mov rax, qword ptr [rip + 0x1cb70d] ; ret
0x00000000000328d0 : mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000349e5 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000048274 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x0000000000120fd0 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x38 ; ret
0x000000000012036f : mov rax, qword ptr [rsp] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000010c1c3 : mov rax, qword ptr [rsp] ; add rsp, 0x28 ; ret
0x0000000000120435 : mov rax, qword ptr [rsp] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000122916 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x0000000000122977 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x0000000000094c44 : mov rax, qword ptr fs:[0x10] ; ret
0x00000000001411fb : mov rax, qword ptr fs:[rax] ; ret
0x000000000005b3a2 : mov rax, r10 ; pop rbx ; ret
0x000000000005b337 : mov rax, r10 ; ret
0x00000000000a0b7f : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000041243 : mov rax, r11 ; ret
0x00000000000d1cd5 : mov rax, r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a0398 : mov rax, r12 ; pop r12 ; pop r13 ; ret
0x0000000000034b48 : mov rax, r12 ; pop r12 ; ret
0x000000000002ff33 : mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008e245 : mov rax, r12 ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000477a2 : mov rax, r12 ; pop rbp ; pop r12 ; ret
0x000000000006272e : mov rax, r12 ; pop rbx ; pop r12 ; ret
0x0000000000080ad0 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008e22b : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000034aaa : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011920e : mov rax, r12 ; pop rdx ; pop r12 ; ret
0x00000000001417d0 : mov rax, r13 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009f9e8 : mov rax, r13 ; pop r12 ; pop r13 ; ret
0x00000000000bcc00 : mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000bcba5 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d4a8f : mov rax, r8 ; add rsp, 8 ; ret
0x000000000013c5d9 : mov rax, r8 ; mov byte ptr [r8 + 2], 0 ; ret
0x0000000000116ed5 : mov rax, r8 ; mov byte ptr [rsi - 1], 0 ; ret
0x000000000009a49a : mov rax, r8 ; pop r12 ; pop r13 ; ret
0x0000000000095655 : mov rax, r8 ; pop r12 ; ret
0x000000000009a506 : mov rax, r8 ; pop r13 ; ret
0x000000000013b730 : mov rax, r8 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000085916 : mov rax, r8 ; pop rbp ; pop r12 ; ret
0x00000000000995a3 : mov rax, r8 ; pop rbp ; ret
0x000000000009cf7e : mov rax, r8 ; pop rbx ; pop r12 ; ret
0x0000000000082714 : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000099cb1 : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000046c8b : mov rax, r8 ; pop rbx ; pop rbp ; ret
0x00000000000993ac : mov rax, r8 ; pop rbx ; ret
0x0000000000046c80 : mov rax, r8 ; ret
0x0000000000188a20 : mov rax, r8 ; vzeroupper ; ret
0x0000000000038ca5 : mov rax, r9 ; pop r12 ; ret
0x000000000007a177 : mov rax, r9 ; pop r14 ; ret
0x0000000000038c77 : mov rax, r9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a86ee : mov rax, r9 ; ret
0x000000000008f50d : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d93e : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a2c39 : mov rax, rbx ; pop rbx ; cmovne rax, rdi ; ret
0x000000000008d883 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000627a6 : mov rax, rbx ; test r8d, r8d ; jne 0x627b0 ; pop rbx ; ret
0x0000000000047344 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x00000000000a8eec : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005b521 : mov rax, rdi ; ret
0x000000000012f9ed : mov rax, rdi ; sar rax, 6 ; ret
0x000000000018a8f0 : mov rax, rdi ; vzeroupper ; ret
0x000000000013c932 : mov rax, rdx ; movsxd rdx, ecx ; ret
0x0000000000056af4 : mov rax, rdx ; pop rbx ; ret
0x0000000000055c45 : mov rax, rdx ; ret
0x0000000000134871 : mov rax, rsi ; pop rbx ; ret
0x00000000000e3668 : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000001196f4 : mov rbx, rsi ; je 0x119700 ; pop rbx ; ret
0x00000000000b6ee0 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000a8638 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000bbbf5 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000013c947 : mov rdx, 0xffffffffffffffff ; ret
0x000000000008cdbb : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x0000000000055065 : mov rdx, qword ptr [rdx + 0x88] ; xor eax, eax ; ret
0x000000000009e924 : mov rdx, qword ptr [rdx + 8] ; test rdx, rdx ; jne 0x9e920 ; ret
0x0000000000167920 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000b6ed0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a8a48 : mov rdx, qword ptr [rsp + 0x10] ; mov qword ptr [rax], rdx ; ret
0x000000000009efc8 : mov rdx, r12 ; pop r12 ; pop r13 ; ret
0x00000000000bbf64 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000015f242 : mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000005b4d0 : mov rsp, rdx ; ret
0x000000000018fb59 : mov word ptr [r9 - 2], cx ; ret
0x00000000000a8aab : mov word ptr [rax + 4], dx ; ret
0x00000000000531aa : mov word ptr [rax + riz*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000000b76f0 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x00000000000a8a60 : mov word ptr [rax], si ; ret
0x0000000000042836 : mov word ptr [rbp - 0x7f000000], es ; sti ; push rax ; ret
0x00000000001787c2 : mov word ptr [rcx + 4], dx ; ret
0x0000000000178803 : mov word ptr [rcx + 8], dx ; ret
0x0000000000178790 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000178780 : mov word ptr [rcx], dx ; ret
0x00000000000b862c : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x00000000000b949c : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x12] ; ret
0x00000000000b6f7c : mov word ptr [rdi + 0x10], cx ; ret
0x00000000000bb0fc : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x0000000000113c8b : mov word ptr [rdi + 0x16], ax ; ret
0x00000000000b8734 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x00000000000b95a4 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000b7064 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000000bb204 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000016de17 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000a8b83 : mov word ptr [rdi + 4], ax ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000481e8 : mov word ptr [rdi + 4], ax ; xor eax, eax ; ret
0x00000000000b84f8 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x00000000000b9348 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 6] ; ret
0x00000000000a89e6 : mov word ptr [rdi + 4], dx ; ret
0x00000000000bafa8 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000b93aa : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 0xa] ; ret
0x00000000000b854a : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x00000000000b6efa : mov word ptr [rdi + 8], dx ; ret
0x00000000000bb00a : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000018a5bc : mov word ptr [rdi + r8 - 2], dx ; vzeroupper ; ret
0x0000000000053e9f : mov word ptr [rdi + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000bc05e : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x00000000000bbc38 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x0000000000167ebc : mov word ptr [rdi - 2], cx ; ret
0x0000000000167cd4 : mov word ptr [rdi - 2], dx ; ret
0x0000000000167eb8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00000000000b6e83 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000b7b76 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000190226 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000000bc063 : mov word ptr [rdi], cx ; ret
0x000000000018bc68 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x00000000000a8990 : mov word ptr [rdi], dx ; add rax, rdi ; ret
0x00000000000b84b3 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x00000000000b92f3 : mov word ptr [rdi], dx ; lea rax, [rdi + 2] ; ret
0x00000000000b6e73 : mov word ptr [rdi], dx ; ret
0x0000000000189163 : mov word ptr [rdi], dx ; vzeroupper ; ret
0x00000000000baf53 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a8b20 : mov word ptr [rdi], si ; lea rax, [rdi + rdx - 1] ; ret
0x000000000018fb56 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000000bbc3d : mov word ptr [rdi], si ; ret
0x000000000010c770 : mov word ptr [rdi], si ; xor eax, eax ; ret
0x000000000014d0e5 : mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x000000000017ab38 : mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x00000000000b3a4d : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000000b3ad1 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x000000000017aae3 : mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x00000000000b39e8 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000121fb5 : mov word ptr [rdx], ax ; ret
0x00000000001127e9 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x000000000004819a : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x0000000000190229 : mov word ptr [rsi - 2], cx ; ret
0x000000000010c757 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x000000000009f0f0 : mov word ptr [rsi], gs ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x0000000000041d98 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000057ccb : mov word ptr [rsp - 0x10], si ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000bbc37 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000018b8eb : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x000000000005ff34 : movabs al, byte ptr [0x8304768b41000000] ; ret
0x000000000005ff60 : movabs al, byte ptr [0x8324348b41000000] ; ret
0x000000000006e4ae : movabs al, byte ptr [0x8948c08548fffffa] ; ret
0x000000000018a640 : movabs eax, dword ptr [0x77f8c5e0075c7f7e] ; ret
0x000000000018a6c5 : movabs eax, dword ptr [0x77f8c5f007447f7a] ; ret
0x000000000018a620 : movabs eax, dword ptr [0x77f8c5f0075c7f7a] ; ret
0x0000000000157733 : movabs eax, dword ptr [0x8c48348c031fff2] ; ret
0x000000000014e5cb : movabs eax, dword ptr [0xfa1e0ff390fffe14] ; ret
0x0000000000042104 : movapd xmm0, xmm1 ; ret
0x0000000000042105 : movaps xmm0, xmm1 ; ret
0x00000000000d1dc2 : movaps xmmword ptr [rax], xmm0 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000004216f : movd mm0, eax ; ret
0x0000000000042046 : movd mm0, ecx ; ret
0x0000000000041f60 : movd mm0, edx ; ret
0x0000000000042308 : movd mm0, esi ; ret
0x00000000000424cb : movd xmm0, eax ; ret
0x0000000000042307 : movd xmm0, esi ; ret
0x0000000000042ab4 : movdqa xmm0, xmm2 ; pop rbp ; ret
0x00000000000b6f50 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000013c61f : movdqu xmm0, xmmword ptr [rsi] ; movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x000000000010c6f4 : movdqu xmm7, xmmword ptr [rdi + 0x78] ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000010c744 : movdqu xmm7, xmmword ptr [rsi + 0x70] ; movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x00000000000b87ed : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000b965d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x20] ; ret
0x00000000000b7e30 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000b711d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000b98d3 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, [rdi + 0x40] ; ret
0x00000000000b8083 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x000000000016daef : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016da7f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016da0f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016d99f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000b878d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000000b95fd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000b70bd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000016d92f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000b87ad : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000b961d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000b70dd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000016d8bf : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000b87cd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000b963d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000b70fd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000016dedf : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016de6f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016ddff : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016dd8f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016dd1f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016dcaf : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016dc3f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016dbcf : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016db5f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000bbfd1 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000016d04b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000016d0bb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000b7f30 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000b9464 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0x10] ; ret
0x00000000000b8604 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x00000000000b7c57 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000b6f64 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000b6fa7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000b6f97 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b7018 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000b6fd8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000b6ff8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b6f78 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000b7119 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000b70b9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000b70d9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000b70f9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b6f54 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000bb0c4 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000016d8c4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000b3b32 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000b3b52 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000b3b72 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000b39bc : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000b3966 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000b3b33 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000b3b53 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000b3b73 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000b39bd : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000b3967 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000042a24 : movmskps eax, xmm0 ; and eax, 8 ; ret
0x0000000000093588 : movntps xmmword ptr [rax + 0x18], xmm2 ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000042ab5 : movq mm0, mm2 ; pop rbp ; ret
0x00000000000b6f51 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000013c620 : movq mm0, qword ptr [rsi] ; movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x000000000004216e : movq mm0, rax ; ret
0x0000000000042045 : movq mm0, rcx ; ret
0x0000000000041f5f : movq mm0, rdx ; ret
0x000000000010c6f5 : movq mm7, qword ptr [rdi + 0x78] ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000010c745 : movq mm7, qword ptr [rsi + 0x70] ; movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x00000000000b87ee : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000b965e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x20] ; ret
0x00000000000b7e31 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000b711e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000000bb2be : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000b98d4 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, [rdi + 0x40] ; ret
0x00000000000b8084 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x00000000000bb334 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000016daf0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016da80 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016da10 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016d9a0 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000b878e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000000b95fe : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000b70be : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000000bb25e : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000016d930 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000b87ae : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000b961e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000b70de : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000000bb27e : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000016d8c0 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000b87ce : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000b963e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000b70fe : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000000bb29e : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000016dee0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016de70 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016de00 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016dd90 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016dd20 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016dcb0 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016dc40 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016dbd0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016db60 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000bbf2d : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000bbfd2 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000016d04c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000016d0bc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016d7f7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016d777 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016d6e7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016d667 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016d5e7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016d567 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016d4e7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016d467 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016d3e7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016d367 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016d2e7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016d267 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016d1d7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016d147 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016d0b7 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000b7f31 : movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000b9465 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0x10] ; ret
0x00000000000b8605 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0xf] ; ret
0x00000000000b7c58 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000b6f65 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000b6fb8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000b7cab : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000b6fa8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000b6f98 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b7019 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000b6fd9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000b6ff9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b6f79 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000b711a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000b70ba : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000b70da : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000b70fa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b6f55 : movq qword ptr [rdi], mm0 ; ret
0x00000000000bb0c5 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000016d8c5 : movq qword ptr [rdi], mm1 ; ret
0x000000000004216d : movq xmm0, rax ; ret
0x0000000000042044 : movq xmm0, rcx ; ret
0x0000000000041f5e : movq xmm0, rdx ; ret
0x00000000000bbb6e : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000001383c8 : movsb byte ptr [rdi], byte ptr [rsi] ; mov edx, 0x89480000 ; ret
0x00000000000bbb60 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000a1c84 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000007b9ae : movsd dword ptr [rdi], dword ptr [rsi] ; clc ; idiv bh ; dec dword ptr [rbp + 0x63] ; ret
0x0000000000056382 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000001228b7 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg ebp, eax ; or al, 0 ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000d029c : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x000000000015f249 : movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000042303 : movss dword ptr [rdi], xmm0 ; movd xmm0, esi ; ret
0x00000000001279a3 : movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009f325 : movsx eax, dl ; ret
0x00000000000a8814 : movsx edx, byte ptr [rdi + rax] ; cmp edx, esi ; je 0xa8810 ; ret
0x0000000000183a80 : movsxd rax, ecx ; add rax, rdi ; ret
0x000000000018388e : movsxd rax, ecx ; ret
0x00000000001838c2 : movsxd rcx, ecx ; add rax, rcx ; sub rax, rdi ; ret
0x0000000000034458 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000013c504 : movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x000000000013c935 : movsxd rdx, ecx ; ret
0x00000000000d029d : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x00000000000bbd53 : movups xmmword ptr [r11], xmm4 ; ret
0x00000000000bbdda : movups xmmword ptr [r11], xmm8 ; ret
0x00000000001507c9 : movups xmmword ptr [r8 + 0x20], xmm2 ; ret
0x0000000000150796 : movups xmmword ptr [r8 + 0x30], xmm0 ; ret
0x000000000014d06e : movups xmmword ptr [r8 + 8], xmm0 ; ret
0x00000000001507ca : movups xmmword ptr [rax + 0x20], xmm2 ; ret
0x0000000000150797 : movups xmmword ptr [rax + 0x30], xmm0 ; ret
0x0000000000087cc9 : movups xmmword ptr [rax + 0x40], xmm0 ; pop rbx ; ret
0x000000000014d06f : movups xmmword ptr [rax + 8], xmm0 ; ret
0x0000000000141b77 : movups xmmword ptr [rax], xmm0 ; add rsp, 8 ; ret
0x0000000000086ea2 : movups xmmword ptr [rax], xmm0 ; ret
0x00000000000926be : movups xmmword ptr [rbp + 0x38], xmm0 ; pop rbp ; pop r12 ; ret
0x000000000008e552 : movups xmmword ptr [rbx + 0x18], xmm0 ; movups xmmword ptr [rbx + 0x28], xmm0 ; pop rbx ; ret
0x000000000009e900 : movups xmmword ptr [rbx + 0x18], xmm0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008e556 : movups xmmword ptr [rbx + 0x28], xmm0 ; pop rbx ; ret
0x0000000000091f05 : movups xmmword ptr [rbx + 0x38], xmm0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000919c5 : movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x000000000008e655 : movups xmmword ptr [rbx + 8], xmm0 ; pop rbx ; ret
0x0000000000048007 : movups xmmword ptr [rbx], xmm0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bbddb : movups xmmword ptr [rbx], xmm0 ; ret
0x00000000000bbd54 : movups xmmword ptr [rbx], xmm4 ; ret
0x00000000000bbd4f : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000000bbd4e : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000001576ed : movups xmmword ptr [rdi + 0x18], xmm0 ; ret
0x000000000010c305 : movups xmmword ptr [rdi + 0x30], xmm0 ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x00000000000bbdd6 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000010c309 : movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x0000000000043b48 : movups xmmword ptr [rdi + 0x58], xmm0 ; movups xmmword ptr [rdi + 0x68], xmm0 ; ret
0x0000000000043b4c : movups xmmword ptr [rdi + 0x68], xmm0 ; ret
0x000000000010c749 : movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x000000000010d0de : movups xmmword ptr [rdi + 0xf8], xmm7 ; ret
0x00000000000918fb : movups xmmword ptr [rdi + 8], xmm0 ; ret
0x000000000013c623 : movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x00000000000bbaf6 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000000bbcbd : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x00000000000bbc9a : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000042304 : movups xmmword ptr [rdi], xmm0 ; movd xmm0, esi ; ret
0x00000000000bbaf3 : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000043f35 : movups xmmword ptr [rdi], xmm0 ; ret
0x000000000002717e : movups xmmword ptr [rdx + 0x48], xmm0 ; ret
0x000000000014d083 : movups xmmword ptr [rdx], xmm1 ; ret
0x000000000014fecb : movups xmmword ptr [rdx], xmm2 ; ret
0x00000000001507db : movups xmmword ptr [rdx], xmm3 ; ret
0x00000000001507bb : movups xmmword ptr [rdx], xmm4 ; ret
0x000000000010c6f9 : movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x0000000000100456 : movups xmmword ptr [rsi + 8], xmm0 ; ret
0x000000000014832b : movups xmmword ptr [rsi + 8], xmm1 ; ret
0x000000000014de26 : movzx eax, al ; add eax, 1 ; ret
0x0000000000157b8f : movzx eax, al ; add rsp, 0x18 ; ret
0x000000000010fb95 : movzx eax, al ; add rsp, 0x58 ; ret
0x000000000014a144 : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ce093 : movzx eax, al ; lea eax, [rax + rax - 1] ; ret
0x00000000000e51fe : movzx eax, al ; lea rax, [rax + rax - 1] ; ret
0x0000000000062e6b : movzx eax, al ; neg eax ; pop rbp ; ret
0x00000000000246dc : movzx eax, al ; neg eax ; ret
0x0000000000149d6d : movzx eax, al ; pop r12 ; ret
0x0000000000148c13 : movzx eax, al ; pop rbp ; pop r12 ; ret
0x000000000008dfdd : movzx eax, al ; pop rbx ; neg eax ; ret
0x000000000014a0da : movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000043c2f : movzx eax, al ; ret
0x0000000000034089 : movzx eax, ax ; ret
0x000000000013f490 : movzx eax, bl ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000090de3 : movzx eax, bl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014ae92 : movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x0000000000091b40 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008df56 : movzx eax, byte ptr [rax] ; ret
0x0000000000102a90 : movzx eax, byte ptr [rdi + 9] ; and eax, 0xf ; ret
0x00000000000aa388 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000184e50 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000ac8a1 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000aa3a3 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000184403 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; vzeroupper ; ret
0x00000000000bc148 : movzx eax, cl ; pop rbx ; ret
0x0000000000034242 : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000010c754 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000bb4da : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xbb4d0 ; ret
0x00000000000bb58a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xbb580 ; ret
0x000000000018e424 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x00000000000bbc0c : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000aa3a0 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000184e53 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000040fb8 : movzx edx, byte ptr [rcx] ; test dl, dl ; jne 0x40f98 ; ret
0x00000000000aa561 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000183d8b : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; vzeroupper ; ret
0x000000000018423b : movzx edx, byte ptr [rdx + rdi] ; sub eax, edx ; vzeroupper ; ret
0x000000000017e02f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000184dd8 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x00000000000aa3f7 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000183c0e : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; vzeroupper ; ret
0x0000000000192094 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x00000000001920f4 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x00000000001920e4 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000001920d4 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000001920c4 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00000000001920b4 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000001920a4 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000016d810 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000018e1d7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000019207b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x000000000016def0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000018a590 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000ac8a4 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000a8a02 : movzx edx, byte ptr [rsp + 0x16] ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000a8abf : movzx edx, byte ptr [rsp + 0xe] ; mov byte ptr [rax + 6], dl ; ret
0x00000000000a8a8e : movzx edx, byte ptr [rsp - 0xc] ; mov byte ptr [rax + 4], dl ; ret
0x00000000000a89c9 : movzx edx, byte ptr [rsp - 0xc] ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a8a70 : movzx edx, byte ptr [rsp - 6] ; mov byte ptr [rax + 2], dl ; ret
0x00000000000a89ab : movzx edx, byte ptr [rsp - 6] ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000ac8ca : movzx edx, dl ; sub eax, edx ; ret
0x000000000016d790 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000016de80 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000189160 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x00000000000a89e1 : movzx edx, word ptr [rsp + 0xc] ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a8aa6 : movzx edx, word ptr [rsp - 0x14] ; mov word ptr [rax + 4], dx ; ret
0x000000000012fb58 : movzx esi, dh ; mov eax, edi ; or eax, esi ; bswap eax ; ret
0x000000000012fb3b : movzx esi, si ; mov eax, edi ; or eax, esi ; bswap eax ; ret
0x00000000000b19f7 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000042069 : mulps xmm0, xmm1 ; ret
0x00000000000420ee : mulps xmm0, xmmword ptr [rip + 0x17abfb] ; ret
0x0000000000042453 : mulps xmm0, xmmword ptr [rip + 0x17af36] ; ret
0x0000000000042408 : mulps xmm0, xmmword ptr [rip + 0x17af79] ; ret
0x00000000000423e3 : mulps xmm0, xmmword ptr [rip + 0x17afa2] ; ret
0x00000000000420ed : mulsd xmm0, qword ptr [rip + 0x17abfb] ; ret
0x0000000000042068 : mulsd xmm0, xmm1 ; ret
0x0000000000042452 : mulss xmm0, dword ptr [rip + 0x17af36] ; ret
0x0000000000042407 : mulss xmm0, dword ptr [rip + 0x17af79] ; ret
0x00000000000423e2 : mulss xmm0, dword ptr [rip + 0x17afa2] ; ret
0x0000000000052b3a : neg eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000433eb : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000018bd8f : neg eax ; or eax, 1 ; vzeroupper ; ret
0x0000000000062e6e : neg eax ; pop rbp ; ret
0x000000000013f493 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000246df : neg eax ; ret
0x00000000001097fd : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000004354f : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000088a89 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000114ec5 : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000015d1c5 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbp ; ret
0x000000000006302f : nop ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x0000000000148aef : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000094d8f : nop ; and eax, 0xfffffffd ; mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x00000000000ac63f : nop ; bsr eax, eax ; add rax, rdi ; ret
0x00000000001255af : nop ; endbr64 ; ret
0x000000000009286f : nop ; endbr64 ; xor eax, eax ; ret
0x0000000000190d9f : nop ; lea rax, [rdi + 1] ; ret
0x0000000000190d8f : nop ; lea rax, [rdi] ; ret
0x000000000017aacf : nop ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000000ec40f : nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000a8b0f : nop ; mov byte ptr [rdi], 0 ; lea rax, [rdi + rdx - 1] ; ret
0x0000000000167aef : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000b92df : nop ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; ret
0x00000000001787af : nop ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000000b7e6f : nop ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000b7e8f : nop ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000b7e7f : nop ; mov dword ptr [rdi], edx ; ret
0x0000000000095247 : nop ; mov dword ptr [rip + 0x159c3e], eax ; ret
0x0000000000167ccf : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000b6e6f : nop ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000094d3f : nop ; mov eax, 0x16 ; ret
0x00000000000e501f : nop ; mov eax, 0x7e ; ret
0x000000000013b88f : nop ; mov eax, 0xffffffff ; ret
0x00000000000cf01f : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xcf080 ; ret
0x00000000000cf04f : nop ; mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xcf080 ; ret
0x00000000000cf06f : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xcf080 ; ret
0x000000000016808f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000b84cf : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000018917f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; vzeroupper ; ret
0x0000000000087f26 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000001787ef : nop ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x00000000000b7ecf : nop ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000094ea7 : nop ; mov qword ptr [rip + 0x157439], rax ; ret
0x0000000000094e90 : nop ; mov qword ptr [rip + 0x157448], rax ; ret
0x0000000000094e37 : nop ; mov qword ptr [rip + 0x157459], rax ; ret
0x0000000000094e27 : nop ; mov qword ptr [rip + 0x157471], rax ; ret
0x00000000000cfb1f : nop ; mov rax, 1 ; ret
0x000000000012ebaf : nop ; mov rax, rdi ; ret
0x000000000018a8ef : nop ; mov rax, rdi ; vzeroupper ; ret
0x000000000017878f : nop ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000017877f : nop ; mov word ptr [rcx], dx ; ret
0x00000000000b7e5f : nop ; mov word ptr [rdi], dx ; ret
0x00000000000b6f4f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000146f7f : nop ; pop rbp ; ret
0x0000000000198fcf : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bb86f : nop ; repz ret
0x00000000000319bf : nop ; ret
0x000000000012975f : nop ; sub eax, edx ; ret
0x000000000018478f : nop ; vzeroupper ; xor eax, eax ; ret
0x00000000000baf2f : nop ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000115c0f : nop ; xor eax, eax ; add rsp, 8 ; ret
0x00000000001483df : nop ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005294f : nop ; xor eax, eax ; ret
0x000000000012f39f : nop ; xor r8d, r8d ; mov rax, r8 ; ret
0x00000000000cf35f : nop ; xor rax, rax ; ret
0x000000000004245b : nop dword ptr [rax + rax] ; addss xmm0, xmm0 ; ret
0x000000000009381b : nop dword ptr [rax + rax] ; endbr64 ; ret
0x000000000012595b : nop dword ptr [rax + rax] ; mov eax, r8d ; ret
0x00000000000b6e8b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000011cc53 : nop dword ptr [rax + rax] ; mov rax, r8 ; ret
0x00000000000b812b : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000009e403 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x000000000002fd63 : nop dword ptr [rax + rax] ; ret
0x000000000010c563 : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000055bf3 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000cf08b : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000cfaec : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000023eed : nop dword ptr [rax] ; endbr64 ; ret
0x000000000010c69d : nop dword ptr [rax] ; endbr64 ; xor eax, eax ; ret
0x000000000017876c : nop dword ptr [rax] ; mov byte ptr [rcx], dl ; ret
0x00000000000b7e4c : nop dword ptr [rax] ; mov byte ptr [rdi], dl ; ret
0x000000000018a66c : nop dword ptr [rax] ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000b7b4c : nop dword ptr [rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a8a79 : nop dword ptr [rax] ; mov dword ptr [rax], ecx ; ret
0x0000000000063025 : nop dword ptr [rax] ; mov eax, 0x10 ; ret
0x00000000000e5014 : nop dword ptr [rax] ; mov eax, 0xfc17 ; ret
0x00000000000e5144 : nop dword ptr [rax] ; mov eax, 0xff ; ret
0x0000000000090d3c : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x000000000011635c : nop dword ptr [rax] ; mov eax, 1 ; ret
0x000000000012fb94 : nop dword ptr [rax] ; mov eax, edi ; shr eax, 0x18 ; ret
0x00000000000b7b7d : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000b67bc : nop dword ptr [rax] ; mov rax, rdi ; ret
0x00000000000bc1bd : nop dword ptr [rax] ; mov rax, rdx ; pop rbx ; ret
0x00000000000a8a5c : nop dword ptr [rax] ; mov word ptr [rax], si ; ret
0x0000000000183a7d : nop dword ptr [rax] ; movsxd rax, ecx ; add rax, rdi ; ret
0x00000000000928d5 : nop dword ptr [rax] ; pop rbp ; ret
0x0000000000038f24 : nop dword ptr [rax] ; ret
0x00000000000d0165 : nop dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000040fc1 : nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001886bd : nop dword ptr [rax] ; xor eax, eax ; vzeroupper ; ret
0x000000000013efdd : nop dword ptr [rax] ; xor r10d, r10d ; mov eax, r10d ; ret
0x000000000008274d : nop dword ptr [rax] ; xor r8d, r8d ; mov rax, r8 ; ret
0x00000000000ee467 : nop dword ptr cs:[rax + rax] ; ret
0x000000000012595a : nop word ptr [rax + rax] ; mov eax, r8d ; ret
0x000000000011cc52 : nop word ptr [rax + rax] ; mov rax, r8 ; ret
0x000000000009e402 : nop word ptr [rax + rax] ; pop rbp ; ret
0x0000000000042de7 : nop word ptr [rax + rax] ; ret
0x000000000008a2ba : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000cf08a : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x000000000009f8a7 : not byte ptr [rax + rax] ; add rsp, 8 ; ret
0x000000000009f869 : not byte ptr [rax + rax] ; ret
0x000000000012791f : not dword ptr [rbx - 0x18] ; cmp ch, byte ptr [rbx - 0x76b70011] ; ret
0x0000000000041b21 : not eax ; and eax, ecx ; ret
0x0000000000041ea1 : not eax ; and eax, edx ; ret
0x0000000000160a97 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000157d09 : not eax ; shr eax, 0x1f ; ret
0x0000000000061054 : not esi ; sbb byte ptr [rax], al ; add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; ret
0x0000000000160a96 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000121c4a : or al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000121c24 : or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000048030 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000009809d : or al, 0 ; add byte ptr [rax], al ; mov rax, r8 ; ret
0x00000000000f23d2 : or al, 0 ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000f24a1 : or al, 0 ; add byte ptr [rax], al ; ret
0x0000000000119793 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000009e95e : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000121d03 : or al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000009f1a2 : or al, 0 ; cmovne rax, rdx ; ret
0x00000000001228b9 : or al, 0 ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000121fd5 : or al, 0 ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x000000000012d020 : or al, 0 ; pop rbp ; ret
0x0000000000121ae3 : or al, 0 ; pop rbx ; ret
0x000000000018c797 : or al, 0x16 ; jne 0x18c769 ; vzeroupper ; ret
0x00000000000a13ee : or al, 0x16 ; mov byte ptr [rsi + rdx + 1], al ; jne 0xa13e0 ; ret
0x00000000000aa386 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000015f0f9 : or al, 0x30 ; fisttp dword ptr [rcx] ; ret
0x000000000011eeae : or al, 0x30 ; ror byte ptr [rcx], 0xd0 ; ret
0x00000000001230fd : or al, 0x31 ; test ecx, ecx ; jne 0x123108 ; ret
0x0000000000123166 : or al, 0x31 ; test ecx, ecx ; jne 0x123170 ; ret
0x0000000000123a4d : or al, 0x31 ; test ecx, ecx ; jne 0x123a58 ; ret
0x0000000000123aaa : or al, 0x31 ; test ecx, ecx ; jne 0x123ab8 ; ret
0x000000000011f8cf : or al, 0x3f ; shr eax, cl ; and eax, 3 ; ret
0x00000000000e2e76 : or al, 0x48 ; add esp, 0x18 ; ret
0x00000000000e2d50 : or al, 0x48 ; add esp, 0x28 ; ret
0x0000000000114fe2 : or al, 0x48 ; add esp, 0x38 ; ret
0x000000000014afc3 : or al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000148043 : or al, 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000009ef23 : or al, 0x48 ; mov dword ptr [rdi], esi ; ret
0x000000000013b410 : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x00000000000843e3 : or al, 0x4c ; mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008e163 : or al, 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000947fd : or al, 0x5b ; ret
0x00000000000a89e5 : or al, 0x66 ; mov dword ptr [rdi + 4], edx ; ret
0x0000000000033906 : or al, 0x74 ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000421eb : or al, 0x75 ; or dh, dl ; addps xmm0, xmm0 ; ret
0x00000000000791ba : or al, 0x7e ; ret
0x0000000000074536 : or al, 0x83 ; ret
0x00000000000bcb3d : or al, 0x87 ; test ecx, ecx ; jne 0xbcb18 ; mov rax, r8 ; ret
0x000000000005d7ba : or al, 0x89 ; fdiv st(6) ; ret
0x0000000000042c3b : or al, 0x89 ; jae 0x42c7f ; xor eax, eax ; pop rbx ; ret
0x00000000000aedf4 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000001230fa : or al, 0x8a ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x123108 ; ret
0x0000000000123163 : or al, 0x8a ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x123170 ; ret
0x0000000000123a4a : or al, 0x8a ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x123a58 ; ret
0x0000000000123aa7 : or al, 0x8a ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x123ab8 ; ret
0x000000000010c5db : or al, 0x8b ; push rbx ; add al, 0xeb ; ret
0x000000000011cd0f : or al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x0000000000123367 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000012334c : or al, 0x8e ; mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x123360 ; ret
0x0000000000123c7c : or al, 0x8e ; mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x123c90 ; ret
0x0000000000150786 : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000016172a : or al, 0xec ; dec dword ptr [rax - 0x77] ; ret
0x00000000000cef75 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000b7833 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x000000000016da13 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000005c117 : or al, 0xf6 ; ret
0x00000000001183ec : or al, 0xf7 ; ret
0x000000000010d066 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000011d032 : or al, 1 ; add byte ptr [rax], al ; ret
0x000000000010d100 : or al, 1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000b7a70 : or al, 5 ; add byte ptr [rax], al ; ret
0x0000000000136e6b : or al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000148356 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000014638b : or al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000141109 : or al, byte ptr [rax] ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x141118 ; ret
0x00000000001411f9 : or al, byte ptr [rax] ; mov rax, qword ptr fs:[rax] ; ret
0x00000000001463b7 : or al, byte ptr [rax] ; ret
0x0000000000140cbc : or al, byte ptr [rax] ; test eax, eax ; je 0x140cc8 ; ret
0x0000000000146f98 : or al, byte ptr [rax] ; test eax, eax ; je 0x146fa0 ; ret
0x0000000000142f79 : or al, byte ptr [rax] ; test rax, rax ; jne 0x142f88 ; ret
0x00000000000bc6f5 : or al, byte ptr [rbx + 0xd7402f8] ; xor eax, eax ; ret
0x0000000000048241 : or al, ch ; cdq ; ret
0x00000000000f1746 : or al, ch ; hlt ; ret
0x0000000000052a51 : or al, ch ; or esi, edi ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f3447 : or al, ch ; ret
0x00000000001191d6 : or ax, 0x4800 ; add esp, 0x18 ; ret
0x000000000014832e : or bl, al ; mov dword ptr [rsi], 0xc ; ret
0x0000000000131811 : or bl, al ; nop dword ptr [rax + rax] ; ret
0x0000000000115ea7 : or bl, al ; nop dword ptr [rax] ; ret
0x00000000000dfd0e : or bl, al ; ret
0x000000000011a765 : or bl, byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000152bdd : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000010257c : or bl, byte ptr [rdx + 0x59] ; pop rbx ; ret
0x000000000016dbd3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000014832d : or bl, r8b ; mov dword ptr [rsi], 0xc ; ret
0x00000000000ec481 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x00000000000ec411 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x000000000002fda8 : or byte ptr [r11 + 0x1974fdf8], al ; pop rbx ; ret
0x00000000000e8332 : or byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000094d15 : or byte ptr [r11 + 0x68901e0], r8b ; xor eax, eax ; ret
0x00000000000b3acf : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000ec406 : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000ec4a6 : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x0000000000057d67 : or byte ptr [r8 + 2], r15b ; ret
0x00000000000ec491 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000b3aae : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x0000000000176788 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000006e875 : or byte ptr [r8 - 0x77], cl ; ret
0x000000000006c57b : or byte ptr [r8 - 0x7d], cl ; ret
0x000000000005b51b : or byte ptr [r8], r8b ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000b3b0e : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x00000000000ec3d5 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000ec3ee : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x0000000000094d39 : or byte ptr [r9], r8b ; xor eax, eax ; ret
0x0000000000146993 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x0000000000041fc9 : or byte ptr [rax + 0x21], 0xc2 ; mov qword ptr [rdi], rdx ; ret
0x0000000000041f99 : or byte ptr [rax + 0x21], 0xc2 ; movq xmm0, rdx ; ret
0x00000000000e0f1b : or byte ptr [rax + 0x29], cl ; ret
0x000000000009811e : or byte ptr [rax + 0x39], cl ; ret
0x000000000009397d : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x25], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000000e50e7 : or byte ptr [rax + 0x40], bh ; ret
0x00000000000ecbc3 : or byte ptr [rax + 0x63], cl ; ret
0x0000000000136e69 : or byte ptr [rax + 0xa], bh ; pop rbx ; pop rbp ; ret
0x00000000000a1b37 : or byte ptr [rax + 0xf], cl ; ret
0x000000000014d07d : or byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm1 ; ret
0x00000000001507b5 : or byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm4 ; ret
0x0000000000155c23 : or byte ptr [rax + 1], bh ; pop rbp ; pop r12 ; ret
0x00000000000832c9 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000057d68 : or byte ptr [rax + 2], bh ; ret
0x0000000000094e49 : or byte ptr [rax + rax], al ; add byte ptr [rsi + 1], dh ; ret
0x00000000000ec492 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000049977 : or byte ptr [rax - 0x39], cl ; ret
0x00000000001463b1 : or byte ptr [rax - 0x73], cl ; add eax, 0xaa747 ; ret
0x00000000000570ac : or byte ptr [rax - 0x73], cl ; push rdi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x0000000000057754 : or byte ptr [rax - 0x73], cl ; push rsi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x0000000000122915 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000122976 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x000000000008d23b : or byte ptr [rax - 0x75], cl ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000b3aaf : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x00000000000b39c0 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000012f9ec : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x0000000000176789 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000006e876 : or byte ptr [rax - 0x77], cl ; ret
0x0000000000096863 : or byte ptr [rax - 0x77], r9b ; ret
0x000000000009e927 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000274da : or byte ptr [rax - 0x7d], cl ; ret
0x00000000000832eb : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000004123d : or byte ptr [rax], 0x4c ; add ebx, dword ptr [rdi + 0x20] ; mov rax, r11 ; ret
0x000000000005fb32 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001412d3 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000194cfd : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x21], cl ; ret
0x00000000000bc1e9 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000014834f : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e6d4d : or byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d4eb7 : or byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000005b51c : or byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x0000000000160db4 : or byte ptr [rax], al ; ret
0x000000000015dee8 : or byte ptr [rax], al ; test edi, edi ; jns 0x15def0 ; ret
0x00000000000bb00d : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000bb04b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000bafeb : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000013c88a : or byte ptr [rbp + 0x17], dh ; add rsp, 0x20 ; pop rbp ; ret
0x00000000000ee535 : or byte ptr [rbp + 0x31], al ; rol byte ptr [rcx + rcx*4 - 0x40], 0x5b ; pop rbp ; ret
0x0000000000058977 : or byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x39], cl ; ret
0x0000000000046c87 : or byte ptr [rbp + 0x31], al ; ror byte ptr [rcx + rcx*4 - 0x40], 0x5b ; pop rbp ; ret
0x000000000008541c : or byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000013c3f3 : or byte ptr [rbp + 0x5d5b2b04], cl ; ret
0x0000000000042517 : or byte ptr [rbp + 6], dh ; addss xmm0, xmm0 ; ret
0x00000000000d9630 : or byte ptr [rbp + rcx*4 + 0x15], cl ; pop rsp ; ret
0x000000000012ce5c : or byte ptr [rbp - 0xf], dh ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000002fda9 : or byte ptr [rbx + 0x1974fdf8], al ; pop rbx ; ret
0x000000000002fd87 : or byte ptr [rbx + 0x37403fe], al ; ret
0x000000000008f55e : or byte ptr [rbx + 0x48], bl ; sub eax, edx ; pop rbp ; pop r12 ; ret
0x000000000008b4e9 : or byte ptr [rbx + 0x5d], bl ; mov eax, r8d ; ret
0x000000000009ea47 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000005568a : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000009f417 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000024e0b : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000094d16 : or byte ptr [rbx + 0x68901e0], al ; xor eax, eax ; ret
0x000000000004123e : or byte ptr [rbx + rax + 0x5f], cl ; and byte ptr [rcx + rcx*4 - 0x28], cl ; ret
0x00000000000ee461 : or byte ptr [rbx + rdx*4 + 0x5b], dh ; ret
0x0000000000149326 : or byte ptr [rcx + 0x29], al ; rcr byte ptr [rbx + 0x5d], 1 ; mov eax, r8d ; ret
0x00000000000a3173 : or byte ptr [rcx + 0x29], cl ; ret
0x0000000000056af0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x000000000003fa03 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; ret
0x000000000009f9e7 : or byte ptr [rcx + rcx*4 - 0x18], cl ; pop r12 ; pop r13 ; ret
0x000000000014ddec : or byte ptr [rcx + rcx*4 - 0x20], al ; pop rbp ; pop r12 ; ret
0x000000000005b933 : or byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop r12 ; ret
0x00000000000477a1 : or byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbp ; pop r12 ; ret
0x00000000000a0a43 : or byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop r12 ; ret
0x000000000013cad6 : or byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010281b : or byte ptr [rcx + rcx*4 - 0x38], al ; ret
0x0000000000082406 : or byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x0000000000117381 : or byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x00000000000831b4 : or byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; pop rbp ; ret
0x000000000013c76a : or byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x0000000000055bb2 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000011a562 : or byte ptr [rcx - 0x75], cl ; add dword ptr [rbx + 0x94901e0], eax ; ret
0x00000000000b3b0f : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x0000000000070eff : or byte ptr [rcx - 0x77], al ; ret
0x000000000007f1cf : or byte ptr [rcx - 0x77], cl ; or r9b, r13b ; ret
0x00000000001229ec : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1229f5 ; ret
0x0000000000122a7c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x122a85 ; ret
0x0000000000122b1c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x122b25 ; ret
0x0000000000122bac : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x122bb5 ; ret
0x0000000000122cdc : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x122ce5 ; ret
0x0000000000122d7c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x122d85 ; ret
0x0000000000122e1c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x122e25 ; ret
0x0000000000122ebc : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x122ec5 ; ret
0x0000000000122f4c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x122f55 ; ret
0x0000000000122fe7 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x122ff0 ; ret
0x000000000012307c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x123085 ; ret
0x00000000001233ce : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1233d7 ; ret
0x000000000012345e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x123467 ; ret
0x00000000001234ee : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1234f7 ; ret
0x000000000012356e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x123577 ; ret
0x000000000012368e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x123697 ; ret
0x000000000012371e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x123727 ; ret
0x00000000001237ae : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1237b7 ; ret
0x000000000012383e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x123847 ; ret
0x00000000001238ce : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1238d7 ; ret
0x000000000012395b : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x123964 ; ret
0x00000000001239de : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1239e7 ; ret
0x000000000005b3c8 : or byte ptr [rcx - 0x7d], cl ; ret
0x000000000006d150 : or byte ptr [rcx - 0xa], al ; ret
0x00000000000eaf53 : or byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000010d076 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000010d118 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000ec46c : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000ec3ef : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x0000000000094d3a : or byte ptr [rcx], al ; xor eax, eax ; ret
0x00000000000a88cf : or byte ptr [rcx], bh ; int1 ; jne 0xa88c0 ; ret
0x00000000000ec3d6 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x00000000000c9f03 : or byte ptr [rcx], ch ; ret
0x000000000012b99e : or byte ptr [rcx], dh ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000047247 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000fed6a : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000010c2dc : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000034088 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000008df55 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000ecbbf : or byte ptr [rdi], cl ; mov dh, 0xc ; or byte ptr [rax + 0x63], cl ; ret
0x000000000014de25 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, 1 ; ret
0x0000000000157b8e : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x18 ; ret
0x000000000010fb94 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x00000000000246db : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000148c12 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x000000000014a0d9 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000522b8 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000006c6b3 : or byte ptr [rdi], cl ; test edi, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x000000000006d53a : or byte ptr [rdi], cl ; test esi, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x00000000001028b0 : or byte ptr [rdi], cl ; xchg ebp, eax ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x0000000000122058 : or byte ptr [rdi], cl ; xchg edi, eax ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x000000000009ef21 : or byte ptr [rdx + 0xc], dh ; mov qword ptr [rdi], rsi ; ret
0x00000000000ec412 : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00000000000ec482 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x00000000001136a6 : or byte ptr [rip + 0x100f], ah ; ret
0x00000000001136a5 : or byte ptr [rip + 0x100f], r12b ; ret
0x00000000001176f1 : or byte ptr [rip - 0x3b7cb800], 8 ; ret
0x00000000000b66c1 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000b3ad0 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000ec4a7 : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000000ec407 : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x0000000000041d2f : or cl, bl ; std ; fstp st(1) ; ret
0x0000000000084519 : or cl, byte ptr [rax - 0x7d] ; ret
0x00000000001786b6 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x000000000007f1d3 : or cl, ch ; ret
0x00000000000bb9e5 : or cl, cl ; cmove rax, rdx ; ret
0x0000000000094d2f : or dh, bh ; xor eax, eax ; ret
0x000000000016daf3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000041e25 : or dh, byte ptr [rbp + 8] ; fadd st(0) ; add rsp, 8 ; ret
0x00000000000ee2db : or dh, byte ptr [rbp + rdi + 0x48] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000421ed : or dh, dl ; addps xmm0, xmm0 ; ret
0x000000000015f021 : or dword ptr [rax + 0x39], ecx ; ret
0x00000000000d358d : or dword ptr [rax - 0x7d], ecx ; ret
0x0000000000153274 : or dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000a7ace : or dword ptr [rax], eax ; add bh, dh ; ret
0x00000000001610fa : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000246f2 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000001482e1 : or dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x000000000010c50a : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000001934dd : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000b5c15 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000015cc7b : or dword ptr [rax], eax ; add dword ptr [rcx + rcx*4 - 0x40], ecx ; pop rbp ; ret
0x0000000000120dc7 : or dword ptr [rax], eax ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000153180 : or dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x0000000000082a77 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008e660 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000093e7c : or dword ptr [rbx], 8 ; pop rbx ; ret
0x000000000006c3ff : or dword ptr [rcx - 1], 0xffffffff ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000094d38 : or dword ptr [rdi + 8], 1 ; xor eax, eax ; ret
0x0000000000160a77 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x000000000005b6ac : or dword ptr [rdi - 0x2f], esi ; mov rax, r8 ; ret
0x0000000000043b92 : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000178696 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000009f357 : or dword ptr [rdx - 1], edi ; cmovbe eax, edx ; ret
0x0000000000042089 : or eax, 0x17a672 ; mulsd xmm0, xmm1 ; ret
0x0000000000042063 : or eax, 0x17a6a8 ; mulsd xmm0, xmm1 ; ret
0x0000000000041eff : or eax, 0x17a7dc ; orpd xmm0, xmm1 ; ret
0x000000000013c32a : or eax, 0x1975c085 ; mov eax, r8d ; ret
0x00000000000b8791 : or eax, 0x1c478d48 ; ret
0x00000000000b9601 : or eax, 0x1d478d48 ; ret
0x0000000000178718 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x0000000000117c0e : or eax, 0x1f88300 ; jg 0x117c16 ; ret
0x000000000012ceda : or eax, 0x3f8348 ; je 0x12cef0 ; ret
0x0000000000119187 : or eax, 0x415c4100 ; pop rbp ; ret
0x000000000011914e : or eax, 0x415d5900 ; pop rsp ; pop r13 ; ret
0x000000000015763a : or eax, 0x44c03145 ; mov eax, eax ; ret
0x000000000008d882 : or eax, 0x5bd88948 ; pop rbp ; pop r12 ; ret
0x0000000000118c34 : or eax, 0x5c415d00 ; pop r13 ; ret
0x00000000000b7855 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x00000000001183e7 : or eax, 0x74db8500 ; or al, 0xf7 ; ret
0x0000000000113751 : or eax, 0x80000000 ; mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000b8f49 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x0000000000102577 : or eax, 0x89000ed0 ; or bl, byte ptr [rdx + 0x59] ; pop rbx ; ret
0x00000000000c8f2a : or eax, 0x89490000 ; ret
0x0000000000117681 : or eax, 0xc0894c00 ; add rsp, 8 ; ret
0x0000000000117651 : or eax, 0xc0894c00 ; ret
0x00000000000cf7b2 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x000000000016d9a3 : or eax, 0xf7f0ff3 ; ret
0x00000000000433f1 : or eax, 0xffffffff ; ret
0x0000000000184e19 : or eax, 1 ; ret
0x000000000018bd91 : or eax, 1 ; vzeroupper ; ret
0x0000000000094d85 : or eax, 2 ; mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x000000000014835d : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000007dcde : or eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000048112 : or eax, dword ptr [rax] ; add dword ptr [rax], eax ; ret
0x00000000001379fd : or eax, dword ptr [rax] ; add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbp ; ret
0x0000000000138527 : or eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000004225d : or eax, ecx ; sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x0000000000047330 : or eax, edi ; ret
0x000000000004216b : or eax, edx ; movq xmm0, rax ; ret
0x000000000005294b : or eax, edx ; ret
0x000000000012fb24 : or eax, esi ; bswap eax ; ret
0x0000000000057ca0 : or eax, esi ; movq xmm0, rax ; ret
0x000000000011ef06 : or eax, esi ; ret
0x000000000011f88e : or eax, esi ; wrpkru ; xor eax, eax ; ret
0x000000000015196a : or ebp, ebp ; dec dword ptr [rax - 0x77] ; ret
0x000000000016db63 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000000e111b : or ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000093e7d : or ecx, dword ptr [rax] ; pop rbx ; ret
0x00000000000cf014 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000cf064 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000b7813 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x0000000000042042 : or ecx, eax ; movq xmm0, rcx ; ret
0x000000000013bccc : or edi, dword ptr [rdx + 0x104] ; cmove eax, edx ; ret
0x0000000000041d09 : or edx, esi ; je 0x41c58 ; ret
0x00000000000423bf : or esi, eax ; movd xmm0, esi ; ret
0x0000000000057c59 : or esi, eax ; or esi, edx ; movd xmm0, esi ; ret
0x00000000001136f2 : or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x0000000000082c04 : or esi, ebp ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016da83 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000052a53 : or esi, edi ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000057c5b : or esi, edx ; movd xmm0, esi ; ret
0x0000000000082a78 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008e661 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000015cc7a : or qword ptr [r8], rax ; add dword ptr [rcx + rcx*4 - 0x40], ecx ; pop rbp ; ret
0x0000000000160a76 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000043b91 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000178695 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000016dbd2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x000000000016db62 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000016daf2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000016da82 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000007f1d2 : or r9b, r13b ; ret
0x0000000000178717 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x00000000000433f0 : or rax, 0xffffffffffffffff ; ret
0x000000000004732f : or rax, rdi ; ret
0x000000000004216a : or rax, rdx ; movq xmm0, rax ; ret
0x0000000000057c9f : or rax, rsi ; movq xmm0, rax ; ret
0x000000000011ef05 : or rax, rsi ; ret
0x0000000000042041 : or rcx, rax ; movq xmm0, rcx ; ret
0x0000000000041f04 : orpd xmm0, xmm1 ; ret
0x0000000000041f05 : orps xmm0, xmm1 ; ret
0x00000000000422c2 : orps xmm0, xmm3 ; ret
0x000000000004732d : out 0x20, eax ; or rax, rdi ; ret
0x00000000000a88a1 : out 0x39, al ; enter -0x1d8c, 0x4c ; mov eax, eax ; ret
0x000000000010d218 : out 0x44, eax ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012b917 : out 0x48, al ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000145901 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000009c270 : out 0x48, eax ; sub eax, 0x10 ; ret
0x00000000000a1df8 : out 0x4c, eax ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e30fa : out 0x57, eax ; ret
0x0000000000197386 : out 0x5b, al ; ret
0x00000000000dd818 : out 0x5b, eax ; pop rbp ; pop r12 ; ret
0x00000000000342c7 : out 0x80, eax ; sete al ; ret
0x00000000000745d3 : out 0x83, al ; ret
0x00000000000c9f5d : out 0x89, al ; ret
0x00000000000f3925 : out 0x89, eax ; ret
0x00000000001423fb : out 0xa, al ; add byte ptr [rcx], al ; pop rbp ; ret
0x00000000000d33a4 : out 0xe8, eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; lodsd eax, dword ptr [rsi] ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000d4414 : out 0xe8, eax ; loopne 0xd440d ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a273b : out 0xe8, eax ; pop rdi ; fdivr st(7) ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d6117 : out 0xe8, eax ; ret
0x000000000015c863 : out 0xe8, eax ; xchg edi, eax ; insd dword ptr [rdi], dx ; sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000016d36a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016d3ea : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000007e826 : out 0xff, eax ; push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000005fcf9 : out dx, al ; adc byte ptr [rcx + 0x39], cl ; ret
0x000000000013c172 : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x13c179 ; ret
0x000000000014102e : out dx, al ; dec dword ptr [rax + 0x39] ; ret
0x0000000000138381 : out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000139e1b : out dx, al ; dec dword ptr [rax - 0x7d] ; ret
0x000000000013caf1 : out dx, al ; dec dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011865d : out dx, al ; jno 0x11866d ; add byte ptr [rcx], al ; add rsp, 8 ; ret
0x000000000011f8cd : out dx, al ; lea ecx, [rdi + rdi] ; shr eax, cl ; and eax, 3 ; ret
0x0000000000082c05 : out dx, al ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000167b3a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000011d009 : out dx, al ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000e82d1 : out dx, al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016d77a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000bcc39 : out dx, al ; xor eax, eax ; ret
0x00000000000cf34d : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x00000000000d0134 : out dx, eax ; adc dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000019654a : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000087d22 : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000087d7e : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001663b4 : out dx, eax ; and byte ptr [rbp + rcx*4 + 0x1d], cl ; ret
0x00000000001231d4 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000012887a : out dx, eax ; inc dword ptr [rax - 0x76b7ffc8] ; ret
0x0000000000102a40 : out dx, eax ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000016796a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000167a66 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001679b2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a8620 : out dx, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000a8780 : out dx, eax ; mov rax, r8 ; ret
0x0000000000056528 : out dx, eax ; mov rax, rdx ; ret
0x000000000016d7fa : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000007dcdd : out dx, eax ; or eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000133e4d : out dx, eax ; ret
0x0000000000093667 : out dx, eax ; ror byte ptr [rdi], 0x11 ; pop rbx ; ret
0x000000000011f892 : out dx, eax ; xor eax, eax ; ret
0x0000000000041fb1 : outsb dx, byte ptr [rsi] ; enter -0x76b8, 7 ; subsd xmm0, xmm1 ; ret
0x000000000011754f : outsb dx, byte ptr [rsi] ; enter 0x4866, 0xf ; outsb dx, byte ptr [rsi] ; ret
0x000000000006bf00 : outsb dx, byte ptr [rsi] ; fmul dword ptr [rbx + 0xf660446] ; insb byte ptr [rdi], dx ; ret
0x0000000000063dbe : outsb dx, byte ptr [rsi] ; fsub dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret
0x000000000002530d : outsb dx, byte ptr [rsi] ; ret
0x00000000000424cd : outsb dx, byte ptr [rsi] ; rol bl, 0xf3 ; addps xmm0, xmm0 ; ret
0x00000000000429f2 : outsd dx, dword ptr [rsi] ; add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000121f70 : outsd dx, dword ptr [rsi] ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000000e160c : outsd dx, dword ptr [rsi] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000005b123 : outsd dx, dword ptr [rsi] ; and al, 0xe8 ; pinsrw xmm0, eax, 6 ; ret
0x000000000010c6f6 : outsd dx, dword ptr [rsi] ; jg 0x10c771 ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000010c746 : outsd dx, dword ptr [rsi] ; jle 0x10c7b9 ; movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x000000000018e90d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000000b19fa : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000b19ff : outsd dx, dword ptr [rsi] ; ret
0x0000000000151ba6 : outsd dx, dword ptr [rsi] ; sub rsp, -0x80 ; mov eax, r8d ; pop rbp ; ret
0x00000000000cfae4 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000000cfacf : pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000018bc3a : pextrw edi, mm0, 0x77 ; ret
0x000000000005b128 : pinsrw mm0, eax, 6 ; ret
0x000000000005b127 : pinsrw xmm0, eax, 6 ; ret
0x00000000000421b5 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x00000000000424e5 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x00000000000ac5a3 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000ac152 : pmovmskb eax, mm1 ; test eax, eax ; jne 0xac1b0 ; xor eax, eax ; ret
0x00000000000ac605 : pmovmskb eax, mm1 ; test eax, eax ; jne 0xac680 ; xor eax, eax ; ret
0x00000000000ac634 : pmovmskb eax, mm1 ; test eax, eax ; jne 0xac6b0 ; xor eax, eax ; ret
0x00000000000ce332 : pmovmskb eax, mm1 ; test eax, eax ; jne 0xce390 ; xor eax, eax ; ret
0x00000000000421b4 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x00000000000424e4 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x00000000000d4239 : pop qword ptr [rdx] ; jbe 0xd4240 ; ret
0x00000000001498b8 : pop r11 ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000009a504 : pop r12 ; mov rax, r8 ; pop r13 ; ret
0x000000000007a173 : pop r12 ; pop r13 ; mov rax, r9 ; pop r14 ; ret
0x00000000000248eb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000023b63 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002601a : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ef194 : pop r12 ; pop r13 ; pop r15 ; ret
0x0000000000046074 : pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000025b9b : pop r12 ; pop r13 ; ret
0x000000000008e230 : pop r12 ; pop r14 ; ret
0x000000000012cf7d : pop r12 ; pop rbp ; ret
0x000000000002f709 : pop r12 ; ret
0x000000000007a175 : pop r13 ; mov rax, r9 ; pop r14 ; ret
0x00000000000248ed : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000023b65 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002601c : pop r13 ; pop r14 ; ret
0x00000000000ef196 : pop r13 ; pop r15 ; ret
0x0000000000046076 : pop r13 ; pop rbp ; ret
0x0000000000025b9d : pop r13 ; ret
0x00000000000248ef : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000023b67 : pop r14 ; pop r15 ; ret
0x000000000002601e : pop r14 ; ret
0x00000000000248f1 : pop r15 ; pop rbp ; ret
0x0000000000023b69 : pop r15 ; ret
0x0000000000043b4a : pop r8 ; movups xmmword ptr [rdi + 0x68], xmm0 ; ret
0x00000000000f7e1b : pop rax ; cmp dh, dh ; ret
0x00000000000e4f4a : pop rax ; jne 0xe4f50 ; ret
0x000000000014ff50 : pop rax ; mov eax, 1 ; ret
0x0000000000034268 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x00000000000341f6 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000149284 : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000011920d : pop rax ; mov rax, r12 ; pop rdx ; pop r12 ; ret
0x0000000000043b4b : pop rax ; movups xmmword ptr [rdi + 0x68], xmm0 ; ret
0x000000000005d7b9 : pop rax ; or al, 0x89 ; fdiv st(6) ; ret
0x000000000005c116 : pop rax ; or al, 0xf6 ; ret
0x00000000000b5c14 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000005520f : pop rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000226be : pop rax ; pop rbx ; pop rbp ; ret
0x000000000015f8c5 : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000036174 : pop rax ; ret
0x000000000014de90 : pop rax ; sub byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000118cc4 : pop rax ; xchg ecx, eax ; hlt ; dec dword ptr [rcx + rcx*4 - 0x20] ; pop r12 ; ret
0x00000000000961d2 : pop rbp ; adc eax, 0x10894800 ; ret
0x000000000013b6e4 : pop rbp ; add dh, dh ; ret
0x0000000000198aa3 : pop rbp ; add eax, 0x5b050f00 ; ret
0x00000000001989e7 : pop rbp ; add eax, 0xdb854800 ; jne 0x1989d0 ; pop rbx ; ret
0x00000000000e366a : pop rbp ; clc ; leave ; ret
0x000000000012796f : pop rbp ; cmp byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000dd759 : pop rbp ; lea rax, [rax + rdx*8] ; ret
0x0000000000134b49 : pop rbp ; mov byte ptr [rdx], 0 ; pop r12 ; pop r13 ; ret
0x000000000012d411 : pop rbp ; mov eax, 0x89483e74 ; ret
0x000000000010d22c : pop rbp ; mov eax, r12d ; pop r12 ; ret
0x000000000008b647 : pop rbp ; mov eax, r8d ; pop r12 ; ret
0x000000000008b4eb : pop rbp ; mov eax, r8d ; ret
0x000000000008e192 : pop rbp ; mov r12, rax ; mov rax, r12 ; pop r12 ; ret
0x00000000000a0397 : pop rbp ; mov rax, r12 ; pop r12 ; pop r13 ; ret
0x0000000000034b47 : pop rbp ; mov rax, r12 ; pop r12 ; ret
0x000000000009a499 : pop rbp ; mov rax, r8 ; pop r12 ; pop r13 ; ret
0x0000000000095654 : pop rbp ; mov rax, r8 ; pop r12 ; ret
0x0000000000038ca4 : pop rbp ; mov rax, r9 ; pop r12 ; ret
0x000000000007a176 : pop rbp ; mov rax, r9 ; pop r14 ; ret
0x0000000000149d6c : pop rbp ; movzx eax, al ; pop r12 ; ret
0x000000000009a503 : pop rbp ; pop r12 ; mov rax, r8 ; pop r13 ; ret
0x0000000000023b62 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000026019 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ef193 : pop rbp ; pop r12 ; pop r13 ; pop r15 ; ret
0x0000000000025b9a : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008e22f : pop rbp ; pop r12 ; pop r14 ; ret
0x000000000002f708 : pop rbp ; pop r12 ; ret
0x000000000013641e : pop rbp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000248ee : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000023b66 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000002601d : pop rbp ; pop r14 ; ret
0x00000000000ef197 : pop rbp ; pop r15 ; ret
0x0000000000046077 : pop rbp ; pop rbp ; ret
0x0000000000055bb8 : pop rbp ; pop rbx ; ret
0x00000000000226c0 : pop rbp ; ret
0x00000000000a093e : pop rbp ; xor eax, eax ; pop r12 ; pop r13 ; ret
0x00000000000bc1b6 : pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000005b45f : pop rbx ; cmovb r10, rdi ; mov rax, r10 ; ret
0x00000000000bc103 : pop rbx ; cmove rax, rdx ; ret
0x00000000000a2c3c : pop rbx ; cmovne rax, rdi ; ret
0x00000000000bc19b : pop rbx ; cmovne rax, rdx ; ret
0x00000000000ddb01 : pop rbx ; hlt ; dec dword ptr [rax - 0x77] ; ret
0x00000000000bc91a : pop rbx ; idiv bh ; pop rdx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000f23d0 : pop rbx ; mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000000875b8 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000148ba8 : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x000000000012cf8e : pop rbx ; mov eax, 5 ; pop r12 ; pop rbp ; ret
0x0000000000106fb6 : pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x000000000010c508 : pop rbx ; mov eax, 9 ; pop rbp ; pop r12 ; ret
0x00000000000473cd : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000015031f : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000046adb : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000013c52b : pop rbx ; mov qword ptr [r9], rcx ; ret
0x0000000000095449 : pop rbx ; mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008e244 : pop rbx ; mov rax, r12 ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000bcbff : pop rbx ; mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013b72f : pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000085915 : pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; ret
0x000000000008dfe0 : pop rbx ; neg eax ; ret
0x000000000010feb0 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000046073 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000062569 : pop rbx ; pop r12 ; pop r13 ; ret
0x000000000005b937 : pop rbx ; pop r12 ; ret
0x00000000000dd758 : pop rbx ; pop rbp ; lea rax, [rax + rdx*8] ; ret
0x000000000010d22b : pop rbx ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x000000000008b646 : pop rbx ; pop rbp ; mov eax, r8d ; pop r12 ; ret
0x000000000008b4ea : pop rbx ; pop rbp ; mov eax, r8d ; ret
0x00000000000a8dfb : pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; pop r13 ; ret
0x0000000000034b46 : pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000095653 : pop rbx ; pop rbp ; mov rax, r8 ; pop r12 ; ret
0x0000000000038ca3 : pop rbx ; pop rbp ; mov rax, r9 ; pop r12 ; ret
0x0000000000149d6b : pop rbx ; pop rbp ; movzx eax, al ; pop r12 ; ret
0x000000000003040a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ef192 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r15 ; ret
0x0000000000025b99 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008e22e : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000002f830 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013641d : pop rbx ; pop rbp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000196c62 : pop rbx ; pop rbp ; pop r14 ; ret
0x00000000000226bf : pop rbx ; pop rbp ; ret
0x000000000002fdaf : pop rbx ; ret
0x000000000010c55e : pop rbx ; setl al ; ret
0x000000000011976e : pop rbx ; setne al ; movzx eax, al ; ret
0x00000000000bc112 : pop rbx ; shr eax, 0xe ; and eax, 0x3fc00 ; ret
0x00000000000bc15d : pop rbx ; shr eax, 6 ; and eax, 0x3fffc00 ; ret
0x000000000008f55f : pop rbx ; sub rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000004739c : pop rbx ; test eax, eax ; cmovs eax, edx ; ret
0x000000000012cf7a : pop rbx ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x00000000000900b0 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000420ef : pop rcx ; add eax, 0x17abfb ; ret
0x0000000000042454 : pop rcx ; add eax, 0x17af36 ; ret
0x0000000000042409 : pop rcx ; add eax, 0x17af79 ; ret
0x00000000000423e4 : pop rcx ; add eax, 0x17afa2 ; ret
0x0000000000119150 : pop rcx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001587d3 : pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010257e : pop rcx ; pop rbx ; ret
0x0000000000106f5c : pop rcx ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000f1f96 : pop rcx ; xor eax, eax ; pop rbp ; ret
0x000000000010dc42 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000001930b2 : pop rdi ; add dword ptr [rcx - 9], eax ; ret
0x0000000000051b9b : pop rdi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000041241 : pop rdi ; and byte ptr [rcx + rcx*4 - 0x28], cl ; ret
0x00000000001849d2 : pop rdi ; and ch, al ; std ; xlatb ; ret
0x00000000000a273d : pop rdi ; fdivr st(7) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000167f09 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000167d19 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000167b39 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000167969 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000167a65 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001679b1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000248f2 : pop rdi ; pop rbp ; ret
0x0000000000023b6a : pop rdi ; ret
0x0000000000051c69 : pop rdx ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000114990 : pop rdx ; add rsp, 0x38 ; ret
0x0000000000118c32 : pop rdx ; insb byte ptr [rdi], dx ; or eax, 0x5c415d00 ; pop r13 ; ret
0x0000000000119c8b : pop rdx ; or byte ptr [rcx - 0xa], al ; ret
0x00000000000a7ad9 : pop rdx ; or dword ptr [rax], eax ; add bh, dh ; ret
0x0000000000119211 : pop rdx ; pop r12 ; ret
0x0000000000198aa2 : pop rdx ; pop rbp ; add eax, 0x5b050f00 ; ret
0x000000000015f8c6 : pop rdx ; pop rbx ; ret
0x000000000010257d : pop rdx ; pop rcx ; pop rbx ; ret
0x0000000000142c92 : pop rdx ; ret
0x00000000000cf625 : pop rdx ; test al, 0xf0 ; jne 0xcf650 ; lea rax, [rdi - 0x10] ; ret
0x000000000009f3a9 : pop rdx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000197276 : pop rsi ; add eax, 0x27418 ; ret
0x00000000000248f0 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000023b68 : pop rsi ; pop r15 ; ret
0x000000000002601f : pop rsi ; ret
0x00000000000d0299 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000042320 : pop rsp ; enter 0x280f, -0x3f ; ret
0x000000000009a505 : pop rsp ; mov rax, r8 ; pop r13 ; ret
0x00000000000d4238 : pop rsp ; pop qword ptr [rdx] ; jbe 0xd4240 ; ret
0x000000000007a174 : pop rsp ; pop r13 ; mov rax, r9 ; pop r14 ; ret
0x00000000000248ec : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000023b64 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002601b : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000ef195 : pop rsp ; pop r13 ; pop r15 ; ret
0x0000000000046075 : pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000025b9c : pop rsp ; pop r13 ; ret
0x000000000008e231 : pop rsp ; pop r14 ; ret
0x000000000012cf7e : pop rsp ; pop rbp ; ret
0x000000000002f70a : pop rsp ; ret
0x00000000000792d0 : pop rsp ; test al, 0 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000094a53 : popfq ; adc eax, 0x5b050f00 ; ret
0x000000000006e01f : popfq ; loope 0x6e021 ; inc dword ptr [rcx - 0xa] ; ret
0x0000000000042645 : por mm0, mm1 ; ret
0x0000000000042644 : por xmm0, xmm1 ; ret
0x000000000016d8c2 : psllq mm1, qword ptr [r15] ; jg 0x16d8d7 ; ret
0x00000000001703f2 : psllq mm1, qword ptr [r15] ; jg 0x170407 ; ret
0x000000000016d8c3 : psllq mm1, qword ptr [rdi] ; jg 0x16d8d7 ; ret
0x00000000001703f3 : psllq mm1, qword ptr [rdi] ; jg 0x170407 ; ret
0x00000000000b6f96 : psllq mm1, qword ptr [rdi] ; jg 0xb6fa2 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b6ff7 : psllq mm1, qword ptr [rdi] ; jg 0xb7003 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b7c86 : psllq mm1, qword ptr [rdi] ; jg 0xb7c92 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b7ce7 : psllq mm1, qword ptr [rdi] ; jg 0xb7cf3 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000ba2a6 : psllq mm1, qword ptr [rdi] ; jg 0xba2b2 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000ba307 : psllq mm1, qword ptr [rdi] ; jg 0xba313 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000bad96 : psllq mm1, qword ptr [rdi] ; jg 0xbada2 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000badf7 : psllq mm1, qword ptr [rdi] ; jg 0xbae03 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000d44e2 : psubsb mm3, mm0 ; add eax, 0x89480000 ; ret
0x000000000008e651 : punpcklqdq xmm0, xmm0 ; movups xmmword ptr [rbx + 8], xmm0 ; pop rbx ; ret
0x0000000000116d82 : punpcklqdq xmm0, xmm1 ; movups xmmword ptr [rdi], xmm0 ; ret
0x000000000002717a : punpcklqdq xmm0, xmm1 ; movups xmmword ptr [rdx + 0x48], xmm0 ; ret
0x000000000014db6b : push -0x76b7fffa ; ret
0x00000000000cf617 : push -0xfb872b8 ; ret
0x00000000000ebd4a : push 0x1f0f10eb ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000bcf80 : push 0x5c415d5b ; pop r13 ; ret
0x000000000009839e : push 0x6e0f4966 ; ret
0x00000000000b7a12 : push 5 ; add byte ptr [rax], al ; ret
0x00000000000b661f : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000011739d : push qword ptr [rbp + 0x10] ; mov eax, 1 ; ret
0x00000000001925a8 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x0000000000184dc9 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x000000000010c76d : push qword ptr [rbp + 5] ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x0000000000062f10 : push qword ptr [rbp + rcx + 0x44] ; mov eax, eax ; ret
0x0000000000056526 : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x0000000000137b52 : push qword ptr [rbp - 0x15] ; pop rbx ; ret
0x0000000000141153 : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012b915 : push qword ptr [rbp - 0x1a] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000929e0 : push qword ptr [rbp - 0x40] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000433e0 : push qword ptr [rbx + 1] ; ret
0x0000000000054f06 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x00000000000d2f6c : push qword ptr [rcx] ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret
0x00000000001120ca : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000008e463 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000011f7d4 : push qword ptr [rdi + 0x31] ; mov r8d, eax ; mov eax, r8d ; ret
0x00000000000e2e4c : push qword ptr [rdi + 0x31] ; ret
0x000000000010e81c : push qword ptr [rdi + 0x41] ; ret
0x0000000000043461 : push qword ptr [rdi + 0x4c] ; ret
0x0000000000113b66 : push qword ptr [rdi + 0x4f] ; ret
0x000000000004822c : push qword ptr [rdi + 0x51] ; ret
0x000000000010dfd7 : push qword ptr [rdi + 0x56] ; ret
0x00000000000e2c3f : push qword ptr [rdi + 0x5e] ; ret
0x00000000001188eb : push qword ptr [rdi + 0x62] ; pop rbx ; pop rbp ; ret
0x0000000000114532 : push qword ptr [rdi + 0x63] ; ret
0x0000000000120b9f : push qword ptr [rdi + 0x66] ; ret
0x0000000000120315 : push qword ptr [rdi + 0x68] ; ret
0x00000000000e2cf2 : push qword ptr [rdi + 0x6b] ; ret
0x0000000000114f7f : push qword ptr [rdi + 0x6e] ; ret
0x000000000011f245 : push qword ptr [rdi + 0x70] ; ret
0x0000000000112fef : push qword ptr [rdi + 0x76] ; ret
0x0000000000062ec3 : push qword ptr [rdi + 0xa] ; ret
0x000000000012e7b2 : push qword ptr [rdi + 0xb] ; ret
0x000000000011532c : push qword ptr [rdi + 1] ; ret
0x00000000000dd12a : push qword ptr [rdi + 3] ; ret
0x0000000000113d79 : push qword ptr [rdi + 4] ; ret
0x0000000000062e90 : push qword ptr [rdi + 5] ; ret
0x000000000010d4bf : push qword ptr [rdi + 6] ; ret
0x000000000010d51e : push qword ptr [rdi + 7] ; ret
0x0000000000043415 : push qword ptr [rdi + 8] ; ret
0x000000000010d9c4 : push qword ptr [rdi + 9] ; ret
0x000000000011870b : push qword ptr [rsi + rax - 0x77] ; cmp eax, 0xd3c34 ; ret
0x0000000000121faf : push qword ptr [rsi + rbp - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x0000000000055040 : push r10 ; ret
0x0000000000086e5e : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000093599 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000094e75 : push rax ; add dword ptr [rax - 0x77], ecx ; adc eax, 0x157452 ; ret
0x000000000008df50 : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000bce2e : push rax ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000157558 : push rax ; cld ; mov qword ptr [rdi + 0x18], rax ; mov eax, r8d ; ret
0x000000000007e828 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000012a2ac : push rax ; fdivr st(7) ; dec dword ptr [rcx] ; ret
0x0000000000150713 : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000086ea0 : push rax ; movups xmmword ptr [rax], xmm0 ; ret
0x000000000014e8a1 : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000042017 : push rax ; ret
0x000000000012a7ac : push rax ; sar edi, cl ; dec dword ptr [rcx] ; ret
0x000000000009358a : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000012ceb9 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x0000000000086402 : push rax ; sub byte ptr [rax - 0x78], al ; cmp byte ptr [rcx + rcx*4 - 0x38], al ; ret
0x00000000001131c9 : push rax ; xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x00000000001413eb : push rbp ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000049d2e : push rbp ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000ff2bb : push rbp ; add byte ptr [rcx + 0x6c0f66d0], cl ; ret
0x0000000000196c5d : push rbp ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x00000000000ec99a : push rbp ; sbb byte ptr [rdx + rdx*2 - 0x73], dh ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000010c3d4 : push rbx ; add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010c4fc : push rbx ; add al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000010c5dd : push rbx ; add al, 0xeb ; ret
0x00000000000a5dc1 : push rbx ; add al, byte ptr [rax] ; add bh, dh ; ret
0x0000000000031765 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000eb5ad : push rbx ; add dword ptr [rcx - 0x7f], ecx ; ret
0x00000000001029a2 : push rbx ; add rsp, 0x38 ; ret
0x00000000000a5dd9 : push rbx ; and al, 0 ; add bh, dh ; ret
0x0000000000121d01 : push rbx ; fisttp qword ptr [rax + rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000001904d9 : push rbx ; jb 0x1904e1 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000874ff : push rbx ; je 0x8755d ; pop rbp ; pop r12 ; ret
0x00000000000cf5fc : push rbx ; lea rax, [rdi - 0x10] ; ret
0x00000000000b8082 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x000000000008d23a : push rbx ; or byte ptr [rax - 0x75], cl ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000119fda : push rbx ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000138526 : push rbx ; or eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000000e4f48 : push rbx ; pop rax ; jne 0xe4f50 ; ret
0x000000000012c529 : push rbx ; sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000000e51ab : push rbx ; setne al ; ret
0x0000000000047868 : push rcx ; add rsp, 0x18 ; ret
0x000000000005b05b : push rcx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000018fcc1 : push rcx ; jl 0x18fd0c ; adc dword ptr [rcx - 1], edi ; ret
0x000000000018fe28 : push rcx ; jl 0x18fe73 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000009811d : push rcx ; or byte ptr [rax + 0x39], cl ; ret
0x000000000004822e : push rcx ; ret
0x0000000000096355 : push rcx ; sbb byte ptr [rcx + 1], cl ; ret
0x00000000000bb162 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000b9502 : push rdi ; adc al, 0x48 ; lea eax, [rdi + 0x15] ; ret
0x00000000000bb2c0 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000baf98 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000bafaa : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000b84fa : push rdi ; add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x00000000000b934a : push rdi ; add al, 0x48 ; lea eax, [rdi + 6] ; ret
0x000000000016da29 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000000baf6a : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000570af : push rdi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x00000000000b85ac : push rdi ; add eax, 0xc478d48 ; ret
0x00000000000b940c : push rdi ; add eax, 0xd478d48 ; ret
0x00000000000bafc8 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x000000000009e2f8 : push rdi ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x00000000001677f8 : push rdi ; clc ; ret
0x0000000000167970 : push rdi ; cld ; ret
0x0000000000168497 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016d309 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016d289 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016d0da : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016d16a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000013b40f : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x0000000000136d11 : push rdi ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000bb00c : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000bb04a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000bafea : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000008f55d : push rdi ; or byte ptr [rbx + 0x48], bl ; sub eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000055bb1 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000008df54 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000b8790 : push rdi ; or eax, 0x1c478d48 ; ret
0x00000000000b9600 : push rdi ; or eax, 0x1d478d48 ; ret
0x00000000000e30fb : push rdi ; ret
0x000000000015761e : push rdi ; sbb byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x0000000000168697 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000167eba : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000168297 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000157915 : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00000000001576eb : push rdi ; sub byte ptr [rdi], cl ; adc dword ptr [rdi + 0x18], eax ; ret
0x0000000000074580 : push rdi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000bb2a0 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000b19fb : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000ac158 : push rdi ; xor eax, eax ; ret
0x00000000000df410 : push rdx ; add rsp, 0x38 ; ret
0x0000000000034225 : push rdx ; mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000009e926 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000341f5 : push rdx ; pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000055041 : push rdx ; ret
0x000000000019030d : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x19035b ; adc dword ptr [rsi + 3], edx ; ret
0x000000000016dcc1 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000115f8b : push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x000000000016dd31 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000057757 : push rsi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x00000000000b6f25 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000013486f : push rsi ; add eax, 0x5bf08948 ; ret
0x000000000016dc51 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000b6ec3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000167922 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000168091 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000167cc5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000167ea5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000168085 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000167ae5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001920e6 : push rsi ; cmc ; sub eax, edx ; ret
0x00000000000844f6 : push rsi ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000001920d6 : push rsi ; hlt ; sub eax, edx ; ret
0x00000000001920a6 : push rsi ; int1 ; sub eax, edx ; ret
0x000000000012bd96 : push rsi ; je 0x12bda0 ; mov eax, 7 ; ret
0x0000000000157e06 : push rsi ; mov dh, 0xff ; dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000146cf6 : push rsi ; mov eax, 0x8948ffed ; ret
0x000000000012d01e : push rsi ; or al, 0 ; pop rbp ; ret
0x0000000000036186 : push rsi ; ret
0x00000000001920b6 : push rsi ; sub eax, edx ; ret
0x00000000001127eb : push rsi ; xor ax, ax ; ret
0x000000000013cc9c : push rsp ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000a8a4a : push rsp ; and al, 0x10 ; mov qword ptr [rax], rdx ; ret
0x00000000000a8a04 : push rsp ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000a8972 : push rsp ; and al, 0x18 ; mov qword ptr [rdi], rdx ; add rax, rdi ; ret
0x00000000000a89e3 : push rsp ; and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a8ac1 : push rsp ; and al, 0xe ; mov byte ptr [rax + 6], dl ; ret
0x00000000000a8aa8 : push rsp ; and al, 0xec ; mov word ptr [rax + 4], dx ; ret
0x00000000000a8a90 : push rsp ; and al, 0xf4 ; mov byte ptr [rax + 4], dl ; ret
0x00000000000a89cb : push rsp ; and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a8a72 : push rsp ; and al, 0xfa ; mov byte ptr [rax + 2], dl ; ret
0x00000000000a89ad : push rsp ; and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000183db7 : push rsp ; cmp ah, byte ptr [rax] ; sub eax, edx ; vzeroupper ; ret
0x0000000000162148 : push rsp ; cmp eax, 0x8948ffee ; ret
0x00000000000ac69b : push rsp ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000014ff80 : push rsp ; mov eax, 1 ; ret
0x00000000000e51a9 : push rsp ; push rbx ; setne al ; ret
0x00000000000422bd : push rsp ; ret
0x000000000002c138 : pushfq ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3948fc51], cl ; ret
0x000000000009f700 : pushfq ; add dword ptr [rax], r8d ; cmovne rax, rdx ; ret
0x00000000001383aa : pushfq ; and al, 0xa8 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000001176f0 : pushfq ; or byte ptr [rip - 0x3b7cb800], 8 ; ret
0x0000000000079d70 : pushfq ; test edx, edi ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000093666 : pxor mm0, mm0 ; movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x0000000000116d91 : pxor mm0, mm0 ; movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000093665 : pxor xmm0, xmm0 ; movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x0000000000116d90 : pxor xmm0, xmm0 ; movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000023a4d : rcl byte ptr [rcx], 0x48 ; mov dword ptr [rip + 0x1cd8d2], eax ; ret
0x0000000000022674 : rcl dword ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000023a52 : rcr al, cl ; sbb al, 0 ; ret
0x0000000000041c8f : rcr bl, 0x3f ; fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x000000000009a502 : rcr byte ptr [rbp + 0x41], 0x5c ; mov rax, r8 ; pop r13 ; ret
0x0000000000026018 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000013b732 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x000000000002f707 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000008f562 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000055bb7 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000134b48 : rcr byte ptr [rbp - 0x3a], 2 ; add byte ptr [rcx + 0x5c], al ; pop r13 ; ret
0x000000000009cf80 : rcr byte ptr [rbx + 0x41], 0x5c ; ret
0x0000000000084e28 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000046601 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000046d32 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000099c92 : rcr byte ptr [rbx + 0x5d], 0x4c ; mov eax, eax ; pop r12 ; ret
0x0000000000149d6a : rcr byte ptr [rbx + 0x5d], 0xf ; mov dh, 0xc0 ; pop r12 ; ret
0x0000000000149329 : rcr byte ptr [rbx + 0x5d], 1 ; mov eax, r8d ; ret
0x00000000000bc1c2 : rcr byte ptr [rbx - 0x3d], 1 ; mov eax, 0x60 ; pop rbx ; ret
0x000000000008dfdf : rcr byte ptr [rbx - 9], 0xd8 ; ret
0x00000000000972a9 : rcr dword ptr [rax + 0x15], cl ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000115e0c : rcr dword ptr [rbx + 0x31], cl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000055be9 : rcr dword ptr [rcx], 0xc0 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000001463d8 : rdtsc ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000bbb6d : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000000bbb5f : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000015f248 : rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000bbf67 : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000000989d4 : rep stosq qword ptr [rdi], rax ; pop rbp ; ret
0x0000000000043aee : rep stosq qword ptr [rdi], rax ; ret
0x000000000009e92c : repz ret
0x0000000000022679 : ret
0x000000000012fad6 : rol ax, 8 ; ret
0x00000000000bb595 : rol bl, 0x48 ; mov eax, edi ; ret
0x0000000000094d3d : rol bl, 0x90 ; mov eax, 0x16 ; ret
0x000000000013b88d : rol bl, 0x90 ; mov eax, 0xffffffff ; ret
0x000000000013bd07 : rol bl, 0xb8 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000424ce : rol bl, 0xf3 ; addps xmm0, xmm0 ; ret
0x0000000000087ebc : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000005294c : rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000ac8ce : rol bl, 1 ; xor eax, eax ; ret
0x00000000000bbd51 : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x000000000018475b : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x000000000004736b : rol byte ptr [rax + 0x775003f], 0x5b ; ret
0x000000000002a549 : rol byte ptr [rax + rcx*2], 0x39 ; ret
0x000000000002f110 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x00000000000bcc34 : rol byte ptr [rax*4 + 0x31ee75d2], 0xc0 ; ret
0x0000000000184b92 : rol byte ptr [rbx + 0x14860c0], 0xf8 ; ret
0x0000000000062f0d : rol byte ptr [rbx + 0xd74fff8], 0x44 ; mov eax, eax ; ret
0x0000000000055beb : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x00000000000342c5 : rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x00000000000cfb42 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000fc4bc : rol byte ptr [rcx + 0x29], 1 ; ret
0x00000000000dfb27 : rol byte ptr [rcx + 0x5c], 0x41 ; pop rbp ; pop r14 ; ret
0x000000000009a49c : rol byte ptr [rcx + 0x5c], 0x41 ; pop rbp ; ret
0x000000000012cf7c : rol byte ptr [rcx + 0x5c], 0x5d ; ret
0x00000000000fff1a : rol byte ptr [rcx + 0xf], 0x93 ; ret
0x00000000000bbd52 : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x00000000000d068d : rol byte ptr [rcx + rbp - 0x40], 0x89 ; ret
0x00000000000f248e : rol byte ptr [rcx + rcx*4 + 0x45], 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013efe2 : rol byte ptr [rcx + rcx*4 - 0x30], cl ; ret
0x00000000000ee538 : rol byte ptr [rcx + rcx*4 - 0x40], 0x5b ; pop rbp ; ret
0x000000000013c33a : rol byte ptr [rcx + rcx*4 - 0x40], cl ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000013c5db : rol byte ptr [rcx - 0x3a], 0x40 ; add al, byte ptr [rax] ; ret
0x00000000000cfb22 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000001537e5 : rol byte ptr [rcx], 0x39 ; ret
0x0000000000121fb3 : rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x0000000000054332 : rol byte ptr [rcx], 0x80 ; js 0x54338 ; add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x000000000015402a : rol byte ptr [rcx], 0x89 ; ret
0x0000000000043f33 : rol byte ptr [rcx], 0xf ; adc dword ptr [rdi], eax ; ret
0x0000000000062355 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000cfb82 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000cfb32 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000086baa : rol byte ptr [rdx], 0 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000cfb72 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000001847df : rol ch, 1 ; std ; xlatb ; ret
0x0000000000188586 : rol ch, cl ; std ; xlatb ; ret
0x0000000000116ed7 : rol dh, 0x46 ; inc dword ptr [rax] ; ret
0x00000000000cfacc : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x000000000012d0d6 : rol dword ptr [rax], cl ; add byte ptr [rax], al ; leave ; ret
0x00000000000ac154 : rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x00000000000ac607 : rol dword ptr [rbp + 0x317475c0], 0xc0 ; ret
0x00000000000ac636 : rol dword ptr [rbp + 0x317575c0], 0xc0 ; ret
0x00000000000a87ec : rol dword ptr [rbp - 0x7c], 0xca ; jne 0xa87d0 ; mov rax, r8 ; ret
0x0000000000047ce7 : rol dword ptr [rcx + rcx*4 - 0x40], 0xf ; adc dword ptr [rdi], eax ; ret
0x000000000009f83a : rol dword ptr [rcx], 0 ; cmovne rax, rdx ; ret
0x00000000000d683e : rol dword ptr [rdi + rcx], 0x84 ; ret
0x00000000000b8ff9 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x000000000013c526 : rol dword ptr [rdx], 0x45 ; mov dword ptr [rax], ebx ; pop rbx ; mov qword ptr [r9], rcx ; ret
0x000000000012fad7 : rol eax, 8 ; ret
0x0000000000043be1 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000013a2fe : rol esi, 0x45 ; ret
0x000000000013a2fd : rol r14, 0x45 ; ret
0x0000000000043be0 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000160a98 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x0000000000043be2 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x00000000000ac1a2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0xac1e0 ; add rax, rdi ; ret
0x00000000000ce382 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0xce3c0 ; add rax, rdi ; ret
0x00000000000b1d57 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000cf84c : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x000000000010d1c7 : ror byte ptr [rax + 0x39], 0xf7 ; ja 0x10d1b8 ; mov eax, r8d ; ret
0x0000000000094c65 : ror byte ptr [rax + 0x39], 0xf7 ; sete al ; ret
0x0000000000094190 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000009939e : ror byte ptr [rax + 0x39], 1 ; ret
0x0000000000028962 : ror byte ptr [rax + 0x39], cl ; ret
0x00000000000cf8d6 : ror byte ptr [rax + 0xf], cl ; ret
0x00000000000ac25c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x00000000000ac778 : ror byte ptr [rax + 1], 0xf8 ; add rax, rsi ; ret
0x00000000000ac172 : ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000001847a3 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x000000000003885b : ror byte ptr [rax + 1], 1 ; ret
0x000000000013c506 : ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x00000000000b1d54 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000ac8c6 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x000000000015cf68 : ror byte ptr [rax - 0x39], 2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000005897a : ror byte ptr [rax - 0x39], cl ; ret
0x000000000007553e : ror byte ptr [rax - 0x73], 0x34 ; ret
0x00000000000e5200 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x00000000000ac162 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x00000000000ac192 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x00000000000ac672 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x00000000000ac182 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000018a332 : ror byte ptr [rax - 0x73], 1 ; jl 0x18a34e ; and ecx, ebp ; ret
0x0000000000096860 : ror byte ptr [rax - 0x75], 0x46 ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000dc203 : ror byte ptr [rax - 0x75], 0x74 ; ret
0x000000000015fa81 : ror byte ptr [rax - 0x75], 5 ; xlatb ; ret
0x000000000009ef3b : ror byte ptr [rax - 0x77], 0x37 ; ret
0x00000000000a863c : ror byte ptr [rax - 0x77], 0xa ; ret
0x00000000000a2c38 : ror byte ptr [rax - 0x77], 0xd8 ; pop rbx ; cmovne rax, rdi ; ret
0x00000000000898f9 : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000014d12a : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x000000000013b94d : ror byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x00000000000908a5 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x908b0 ; ret
0x00000000001004ff : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000010d3b9 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000048073 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000157d6d : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x00000000000522b4 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000010fb97 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x000000000008e465 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000120a08 : ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000002a546 : ror byte ptr [rax - 0x7d], 1 ; rol byte ptr [rax + rcx*2], 0x39 ; ret
0x00000000000fdded : ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000043020 : ror byte ptr [rax - 0x7f], 0xc4 ; sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000bb9e4 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000018bda1 : ror byte ptr [rbx + 0x75163b17], 0xe4 ; ret
0x0000000000156536 : ror byte ptr [rcx + 0x1b803], 0 ; add bl, ch ; ret
0x0000000000127784 : ror byte ptr [rcx + 0x2b], 1 ; cmp byte ptr [r8 + 0x39], r9b ; ret
0x000000000002d898 : ror byte ptr [rcx + 0x3948fc51], cl ; ret
0x000000000010c4fa : ror byte ptr [rcx + 0x5d5b0453], 0x41 ; pop rsp ; ret
0x00000000000f23c7 : ror byte ptr [rcx + 0x5d5b307d], 0x41 ; pop rsp ; ret
0x00000000000a31ce : ror byte ptr [rcx + 1], 1 ; ret
0x00000000000295e6 : ror byte ptr [rcx + rcx*4 + 0x5c], 0x24 ; sub byte ptr [rcx - 0x77], cl ; ret
0x000000000014a5fd : ror byte ptr [rcx + rcx*4 + 7], 1 ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000038583 : ror byte ptr [rcx + rcx*4 - 0x20], 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000dd893 : ror byte ptr [rcx + rcx*4 - 0x20], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000046c8a : ror byte ptr [rcx + rcx*4 - 0x40], 0x5b ; pop rbp ; ret
0x00000000001532fa : ror byte ptr [rcx + rcx*4 - 0x40], 0x5b ; ret
0x0000000000041ba8 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000000a0b03 : ror byte ptr [rcx - 0x39], cl ; ret
0x000000000005f088 : ror byte ptr [rcx - 0x3f], 0xe3 ; and byte ptr [rcx + 9], cl ; ret
0x000000000011eeb0 : ror byte ptr [rcx], 0xd0 ; ret
0x0000000000093668 : ror byte ptr [rdi], 0x11 ; pop rbx ; ret
0x0000000000082831 : ror byte ptr [rdi], 0x84 ; mov dword ptr [rax], 0x89480000 ; ret
0x000000000009d5de : ror byte ptr [rdi], 0x84 ; ret
0x0000000000118dea : ror byte ptr [rdi], 0x84 ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000b5c11 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000002823c : ror byte ptr [rdi], 0x85 ; ret
0x00000000000304e8 : ror byte ptr [rdi], 0x94 ; ret
0x00000000000e51fd : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x0000000000062e6a : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbp ; ret
0x00000000001028b3 : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000bbc99 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x0000000000040fb7 : ror byte ptr [rdi], 1 ; mov dh, 0x11 ; test dl, dl ; jne 0x40f98 ; ret
0x00000000000e8628 : ror byte ptr [rdi], cl ; mov byte ptr [rcx], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ea36f : ror byte ptr [rdi], cl ; mov dl, bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ac71d : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000016112a : ror byte ptr [rdi], cl ; test bh, bh ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001610f6 : ror byte ptr [rdi], cl ; test byte ptr [rbx], dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000102578 : ror byte ptr [rsi], 1 ; add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x00000000000288ed : ror dword ptr [rax + 0x39], 1 ; ret
0x0000000000183a82 : ror dword ptr [rax + 1], 0xf8 ; ret
0x00000000001149b5 : ror dword ptr [rax - 0x75], 5 ; ret
0x00000000000f1d6c : ror dword ptr [rax - 0x75], cl ; sub cl, byte ptr [rax - 0x7d] ; ret
0x0000000000086e1d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x86e10 ; ret
0x00000000000916e5 : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x916d8 ; ret
0x00000000000557b7 : ror dword ptr [rax - 0x7d], 0xc0 ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000011676e : ror dword ptr [rax - 0x7d], 1 ; ret
0x000000000009083b : ror dword ptr [rcx + 0x58d4807], 1 ; ret
0x00000000000fc4b9 : ror dword ptr [rcx + 0x63], cl ; rol byte ptr [rcx + 0x29], 1 ; ret
0x0000000000195307 : ror dword ptr [rcx + 0xf], cl ; mov edx, 0x94d3ff3 ; ret
0x000000000005b6ae : ror dword ptr [rcx + rcx*4 - 0x40], 1 ; ret
0x0000000000091f04 : ror dword ptr [rdi], 0x11 ; cmp byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000009839a : ror dword ptr [rdi], 0x11 ; push 0x6e0f4966 ; ret
0x000000000002717d : ror dword ptr [rdi], 0x11 ; ret
0x000000000018e148 : ror dword ptr [rdi], 0x85 ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018e854 : ror dword ptr [rdi], 0x85 ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018e626 : ror dword ptr [rdi], 0x85 ; add eax, 0xc0310000 ; ret
0x000000000018f750 : ror dword ptr [rdi], 0x85 ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018e5a6 : ror dword ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000018e8e4 : ror dword ptr [rdi], 0x85 ; je 0x18e8eb ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018e3db : ror dword ptr [rdi], 0x85 ; jno 0x18e3e7 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018e4a3 : ror dword ptr [rdi], 0x85 ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018e120 : ror dword ptr [rdi], 0x85 ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007dcda : ror dword ptr [rdi], 0x8d ; out dx, eax ; or eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000ac5a5 : ror dword ptr [rdi], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000196c45 : ror dword ptr [rdi], cl ; xchg esp, eax ; ret
0x0000000000086e1c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x86e10 ; ret
0x00000000000916e4 : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x916d8 ; ret
0x000000000013b6ae : sahf ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 1] ; ret
0x000000000009f8a6 : sahf ; not byte ptr [rax + rax] ; add rsp, 8 ; ret
0x000000000014472e : sahf ; ret
0x0000000000144729 : sal al, 0xf ; mov cl, 0x15 ; sahf ; ret
0x0000000000052b39 : sal bh, 0xd8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000018bd8e : sal bh, 0xd8 ; or eax, 1 ; vzeroupper ; ret
0x0000000000062e6d : sal bh, 0xd8 ; pop rbp ; ret
0x00000000000246de : sal bh, 0xd8 ; ret
0x000000000005ea34 : sal bh, cl ; int1 ; add r8d, eax ; mov eax, r8d ; ret
0x0000000000042451 : sal bl, 0xf ; pop rcx ; add eax, 0x17af36 ; ret
0x000000000005b3c6 : sal byte ptr [rax + rcx + 0x49], 0x83 ; ret
0x000000000009f415 : sal byte ptr [rax + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x000000000011cbe4 : sal byte ptr [rax + rdi + 0x48], 0x39 ; ret
0x000000000013c32c : sal byte ptr [rbp + 0x19], 0x44 ; mov eax, eax ; ret
0x0000000000188a52 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x0000000000183a13 : sal byte ptr [rbp + 0x6a], cl ; test esi, esi ; je 0x1839f8 ; xor eax, eax ; ret
0x0000000000123352 : sal byte ptr [rbp + 0xb], cl ; ret
0x000000000010c5d9 : sal byte ptr [rbp + 0xc], 0x8b ; push rbx ; add al, 0xeb ; ret
0x000000000012ced8 : sal byte ptr [rbp + 0xd], 0x48 ; cmp dword ptr [rdi], 0 ; je 0x12cef0 ; ret
0x00000000000627ab : sal byte ptr [rbp + 2], 0x5b ; ret
0x00000000000bbf56 : sal byte ptr [rbp + 4], cl ; mov rax, rdi ; ret
0x00000000000e2ec8 : sal byte ptr [rbp + 5], 0x48 ; add esp, 8 ; ret
0x00000000000908a8 : sal byte ptr [rbp + 5], cl ; ret
0x0000000000063087 : sal byte ptr [rbp + 6], cl ; sub dword ptr [rdi], 1 ; ret
0x0000000000033d9e : sal byte ptr [rbp + 7], 0x44 ; mov eax, eax ; ret
0x000000000014123d : sal byte ptr [rbp + 8], 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000bcc37 : sal byte ptr [rbp - 0x12], cl ; xor eax, eax ; ret
0x00000000000bb700 : sal byte ptr [rbp - 0x13], cl ; lea rax, [rcx - 1] ; ret
0x0000000000086e20 : sal byte ptr [rbp - 0x13], cl ; ret
0x00000000000a87b2 : sal byte ptr [rbp - 0x15], 1 ; mov rax, r8 ; ret
0x000000000013efd6 : sal byte ptr [rbp - 0x1c], 0x44 ; mov eax, edx ; ret
0x000000000018c63a : sal byte ptr [rbp - 0x1d], 0x29 ; enter -0x73b, 0x77 ; ret
0x00000000000aa64b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x0000000000183f0c : sal byte ptr [rbp - 0x1f], 0x29 ; enter -0x73b, 0x77 ; ret
0x000000000018cb0f : sal byte ptr [rbp - 0x22], 0x29 ; enter -0x73b, 0x77 ; ret
0x00000000001843e1 : sal byte ptr [rbp - 0x24], 0x29 ; enter -0x73b, 0x77 ; ret
0x00000000000bccd1 : sal byte ptr [rbp - 0x24], cl ; ret
0x0000000000040fbc : sal byte ptr [rbp - 0x27], cl ; ret
0x0000000000115d29 : sal byte ptr [rbp - 0x2c], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000115e0a : sal byte ptr [rbp - 0x2d], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000013b94b : sal byte ptr [rbp - 0x2e], 1 ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000001847dd : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x00000000001882dd : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x000000000012edcd : sal byte ptr [rbp - 0x57], 0x48 ; mov eax, edi ; ret
0x000000000009e92a : sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000bdfbc : sal byte ptr [rbp - 0xf], cl ; ret
0x0000000000093980 : sal byte ptr [rbx + 0x25], 1 ; movzx eax, byte ptr [rax] ; ret
0x0000000000157638 : sal byte ptr [rbx + 0xd], 1 ; xor r8d, r8d ; mov eax, r8d ; ret
0x00000000000dd796 : sal byte ptr [rbx + rbp + 0x5b], 0x5d ; pop r12 ; ret
0x00000000000896d2 : sal byte ptr [rbx + rbp*2 + 0x49], 0x2b ; and byte ptr [r8 + 1], r9b ; ret
0x00000000001532c1 : sal byte ptr [rcx + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000000b1c9c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000115f33 : sal byte ptr [rcx], 0xc0 ; pop rbp ; ret
0x000000000009418e : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000148216 : sal byte ptr [rdi + rax + 0x31], 0xc0 ; ret
0x00000000000ede6f : sal byte ptr [rdi + rdi - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000ac71b : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000011cc28 : sal byte ptr [rdx + riz + 0x48], 0x39 ; ret
0x00000000000b1e6b : sal byte ptr [rdx + riz + 0x48], cl ; bsf eax, edx ; ret
0x00000000000b1c3f : sal byte ptr [rsi + rdi*2 + 0x48], cl ; bsf eax, edx ; ret
0x00000000000dda11 : sal byte ptr [rsp + rbp + 0x48], 0x89 ; ret
0x00000000000a8729 : sal byte ptr [rsp + rbp + 0x4d], 0x89 ; ret
0x000000000014afc1 : sal byte ptr [rsp + rcx + 0x48], cl ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012bdbd : sal dh, 0x43 ; sbb al, 0x20 ; je 0x12bdd0 ; pop rbx ; ret
0x00000000000420ec : sal dl, 0xf ; pop rcx ; add eax, 0x17abfb ; ret
0x00000000000a863a : sal dword ptr [rcx], 0xc0 ; mov qword ptr [rdx], rcx ; ret
0x00000000000a8851 : sal dword ptr [rsp + rsi*8 + 0x39], 1 ; int1 ; je 0xa8848 ; ret
0x00000000000e5296 : sal ebx, 1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000bbbf7 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000057c35 : sar bh, 0xff ; ret
0x000000000013c92f : sar byte ptr [rax + 0xe], cl ; mov rax, rdx ; movsxd rdx, ecx ; ret
0x00000000000ee479 : sar byte ptr [rax], 0xe ; je 0xee3bd ; ret
0x000000000011f127 : sar byte ptr [rbx + rdx + 0x74], 1 ; ret
0x0000000000043ddc : sar byte ptr [rdx + 1], cl ; cmove eax, edx ; ret
0x00000000000a50b1 : sar dh, 0xff ; inc dword ptr [rcx - 0x7d] ; ret
0x00000000000696aa : sar dl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x000000000018fa87 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x18fa8c ; ret
0x000000000018b8ed : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x0000000000041b6c : sar eax, 0x10 ; ret
0x000000000004225f : sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x0000000000162da8 : sar eax, 0x1f ; ret
0x0000000000041b1c : sar eax, 0x1f ; sub ecx, edx ; not eax ; and eax, ecx ; ret
0x00000000000425a9 : sar eax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000041e9e : sar eax, 0x3f ; not eax ; and eax, edx ; ret
0x0000000000094d57 : sar eax, 1 ; and eax, 1 ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000008aa16 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000885ed : sar eax, 2 ; ret
0x000000000012f9f1 : sar eax, 6 ; ret
0x000000000019342b : sar ebp, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x0000000000087dfc : sar ecx, 2 ; lea eax, [rcx - 1] ; ret
0x000000000012a7ad : sar edi, cl ; dec dword ptr [rcx] ; ret
0x0000000000087ea6 : sar edx, 2 ; sub eax, edx ; ret
0x00000000000ac8c8 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000001906e7 : sar esi, 1 ; jg 0x19070f ; vzeroupper ; ret
0x0000000000190872 : sar esi, 1 ; jg 0x19089a ; vzeroupper ; ret
0x00000000000425a8 : sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000041e9d : sar rax, 0x3f ; not eax ; and eax, edx ; ret
0x00000000000885ec : sar rax, 2 ; ret
0x000000000012f9f0 : sar rax, 6 ; ret
0x0000000000087dfb : sar rcx, 2 ; lea eax, [rcx - 1] ; ret
0x0000000000087ea5 : sar rdx, 2 ; sub eax, edx ; ret
0x00000000000ac8c7 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000226bc : sbb al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000023a54 : sbb al, 0 ; ret
0x0000000000026f5c : sbb al, 0 ; test eax, eax ; je 0x26f68 ; ret
0x000000000012bdc0 : sbb al, 0x20 ; je 0x12bdd0 ; pop rbx ; ret
0x00000000000c9fdb : sbb al, 0x39 ; ret
0x0000000000151724 : sbb al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000000000e8643 : sbb al, 0x8b ; add ecx, dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret
0x00000000000ec493 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000014fec5 : sbb al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm2 ; ret
0x0000000000047581 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000047f89 : sbb al, byte ptr [rax] ; add rsp, 8 ; ret
0x00000000000440f7 : sbb al, byte ptr [rax] ; mov eax, edx ; ret
0x0000000000044098 : sbb al, byte ptr [rax] ; ret
0x00000000000ec483 : sbb bh, byte ptr [rax + 2] ; ret
0x0000000000109b51 : sbb bl, byte ptr [rax + rcx*2 - 0x7d] ; ret
0x000000000009e902 : sbb byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000008e554 : sbb byte ptr [r15], cl ; adc dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x000000000009517b : sbb byte ptr [r8 + 0x39], cl ; ret
0x000000000015f8c3 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000bb1e4 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000bb206 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000bb244 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000008c10f : sbb byte ptr [r9 + r9*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015755c : sbb byte ptr [r9 + r9*4 - 0x40], r8b ; ret
0x00000000001972e7 : sbb byte ptr [r9 - 0x75], r9b ; push rbp ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000009517c : sbb byte ptr [rax + 0x39], cl ; ret
0x000000000015f8c4 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00000000000f3f02 : sbb byte ptr [rax - 0x77], cl ; je 0xf3f2b ; adc al, ch ; ret
0x00000000000918f6 : sbb byte ptr [rax - 0x77], cl ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x00000000000dd7e7 : sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000df9f4 : sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000000a3d83 : sbb byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000061056 : sbb byte ptr [rax], al ; add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; ret
0x00000000000241a9 : sbb byte ptr [rax], al ; ret
0x000000000008cd2c : sbb byte ptr [rax], al ; setne r8b ; mov eax, r8d ; ret
0x00000000000bb1e5 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000bb207 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000bb245 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a3d82 : sbb byte ptr [rax], r8b ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000010daba : sbb byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x00000000000476c4 : sbb byte ptr [rbp + 0x4c], bl ; mov eax, esp ; pop r12 ; ret
0x000000000013c52a : sbb byte ptr [rbx + 0x49], bl ; mov dword ptr [rcx], ecx ; ret
0x000000000008c085 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007a3fa : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000009e903 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000429f8 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000009358b : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000121fda : sbb byte ptr [rbx - 0x6f3cff00], al ; ret
0x0000000000033d14 : sbb byte ptr [rbx], 0 ; mov qword ptr [rax], rdx ; ret
0x0000000000096356 : sbb byte ptr [rcx + 1], cl ; ret
0x00000000001470f8 : sbb byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop r12 ; ret
0x000000000008c110 : sbb byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d4e7 : sbb byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000046e6e : sbb byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x00000000001574e7 : sbb byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x000000000009cf7d : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; pop r12 ; ret
0x000000000015751f : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x00000000001972e8 : sbb byte ptr [rcx - 0x75], cl ; push rbp ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000043024 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000e9ec6 : sbb byte ptr [rcx], bh ; ret
0x000000000008a0a3 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000015376e : sbb byte ptr [rdi + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000008e555 : sbb byte ptr [rdi], cl ; adc dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x0000000000062e2c : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000197278 : sbb byte ptr [rdx + rax], dh ; ret
0x00000000000ec99b : sbb byte ptr [rdx + rdx*2 - 0x73], dh ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000440f6 : sbb byte ptr [rdx], 0 ; mov eax, edx ; ret
0x00000000000440a7 : sbb byte ptr [rdx], 0 ; ret
0x0000000000121fca : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x0000000000121fc9 : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x0000000000093db2 : sbb ch, al ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e9ec3 : sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret
0x0000000000137c19 : sbb cl, byte ptr [rax + 0x4801000b] ; add esp, 8 ; ret
0x0000000000109b73 : sbb cl, byte ptr [rax - 0x7d] ; ret
0x00000000000b7a0f : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x00000000000ec3d7 : sbb dword ptr [rax + 1], edi ; ret
0x000000000015c33c : sbb dword ptr [rax - 0x7d], ecx ; ret
0x00000000000529fd : sbb dword ptr [rax], eax ; mov byte ptr [rax + rdx], 0 ; ret
0x00000000000241b9 : sbb dword ptr [rax], eax ; ret
0x00000000000a8be3 : sbb dword ptr [rax], edi ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000013c32e : sbb dword ptr [rcx + rcx*4 - 0x40], eax ; ret
0x00000000000df4da : sbb dword ptr [rcx + rcx*4 - 0x40], ecx ; pop rbx ; ret
0x00000000001016e5 : sbb dword ptr [rcx - 0x7d], ecx ; ret
0x00000000000c9ee6 : sbb dword ptr [rcx], edi ; ret
0x00000000000d002a : sbb dword ptr [rdi + 0x23], edi ; mov rax, r12 ; pop r12 ; ret
0x00000000000b916e : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x000000000017c6ec : sbb eax, -1 ; ret
0x000000000010fd89 : sbb eax, 0 ; ret
0x00000000000b7a99 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x00000000000b922d : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x0000000000121afa : sbb eax, 0xca861 ; pop rbx ; ret
0x0000000000121ae0 : sbb eax, 0xca87b ; pop rbx ; ret
0x000000000003e1ce : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x0000000000032851 : sbb eax, dword ptr [rax] ; mov byte ptr [rip + 0x1bb2a4], dl ; ret
0x0000000000033d15 : sbb eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; ret
0x000000000002f5a9 : sbb eax, dword ptr [rax] ; ret
0x0000000000112d2c : sbb eax, dword ptr [rbx + 0x674a1f8] ; neg eax ; ret
0x0000000000055bea : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000184e17 : sbb eax, eax ; or eax, 1 ; ret
0x000000000013b88c : sbb eax, eax ; ret
0x00000000001925c5 : sbb eax, eax ; sbb eax, -1 ; ret
0x000000000005438a : sbb edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000017c6eb : sbb rax, -1 ; ret
0x000000000005b3a1 : scasb al, byte ptr [rdi] ; mov rax, r10 ; pop rbx ; ret
0x000000000018c7ba : scasb al, byte ptr [rdi] ; vzeroupper ; ret
0x0000000000118ded : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000895a0 : scasd eax, dword ptr [rdi] ; ret
0x00000000000440f5 : scasd eax, dword ptr [rdi] ; sbb byte ptr [rdx], 0 ; mov eax, edx ; ret
0x0000000000122059 : seta al ; movzx eax, al ; neg eax ; ret
0x000000000010fd86 : seta al ; sbb eax, 0 ; ret
0x0000000000094194 : setae al ; ret
0x00000000000d424b : setb al ; add eax, 0x16d ; ret
0x0000000000122c5a : setbe al ; mov eax, r8d ; ret
0x0000000000122c59 : setbe r8b ; mov eax, r8d ; ret
0x00000000001458ac : sete al ; add rsp, 8 ; ret
0x0000000000155df8 : sete al ; movzx eax, al ; ret
0x00000000000342c9 : sete al ; ret
0x0000000000042c5a : sete dh ; xor eax, eax ; mov dword ptr [rbx + 0x40], esi ; pop rbx ; ret
0x0000000000160b15 : sete dl ; mov dword ptr [rbx], edx ; pop rbx ; ret
0x000000000010c55f : setl al ; ret
0x0000000000102aa8 : setne al ; lea eax, [rax + rax*8 + 5] ; ret
0x000000000008cd2f : setne al ; mov eax, r8d ; ret
0x0000000000062e68 : setne al ; movzx eax, al ; neg eax ; pop rbp ; ret
0x00000000001028b1 : setne al ; movzx eax, al ; neg eax ; ret
0x0000000000043c2c : setne al ; movzx eax, al ; ret
0x00000000000e5190 : setne al ; ret
0x00000000000a8926 : setne bh ; test r9b, dil ; jne 0xa8908 ; ret
0x00000000000a8925 : setne dil ; test r9b, dil ; jne 0xa8908 ; ret
0x000000000008cd2e : setne r8b ; mov eax, r8d ; ret
0x0000000000184b94 : shl byte ptr [rax + 0x48], 1 ; clc ; ret
0x000000000018477b : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x000000000018473b : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x000000000004216c : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x00000000000ff2be : shl byte ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret
0x00000000000b1a36 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000ed9c8 : shl byte ptr [rsi + 0xf], cl ; outsb dx, byte ptr [rsi] ; ret
0x0000000000043f2f : shl dword ptr [rsi + 0xf], 0xc6 ; rol byte ptr [rcx], 0xf ; adc dword ptr [rdi], eax ; ret
0x00000000000b1a32 : shl dword ptr [rsi + 0xf], 0xd7 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000bb47f : shl dword ptr [rsi + 0xf], 0xda ; ret
0x00000000000423bc : shl eax, 0x17 ; or esi, eax ; movd xmm0, esi ; ret
0x0000000000052948 : shl eax, 0x1e ; or eax, edx ; ret
0x000000000011eeff : shl eax, 0x20 ; and rax, rdi ; or rax, rsi ; ret
0x0000000000043b8f : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000563cc : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000005634b : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000005631a : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000004732c : shl edi, 0x20 ; or rax, rdi ; ret
0x00000000000563cb : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000005634a : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000056319 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000043b8e : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000004732b : shl rdi, 0x20 ; or rax, rdi ; ret
0x0000000000135bd4 : shr al, 0x16 ; ret
0x0000000000046114 : shr al, 0x46 ; ret
0x000000000011195e : shr al, 0x7c ; ret
0x0000000000135b42 : shr al, 0xa8 ; ret
0x00000000000970ec : shr al, 0xbe ; ret
0x000000000012ceba : shr ax, 0xe ; and eax, 1 ; ret
0x00000000000aa64f : shr byte ptr [rcx], 0xc8 ; ret
0x000000000002f258 : shr byte ptr [rcx], cl ; ret
0x00000000000ac8cc : shr byte ptr [rcx], cl ; rol bl, 1 ; xor eax, eax ; ret
0x00000000000960bc : shr byte ptr [rdx + 0x15], 0 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000012fb9a : shr eax, 0x18 ; ret
0x0000000000041b7f : shr eax, 0x1f ; ret
0x000000000018f99c : shr eax, 0x20 ; cmp ecx, eax ; jne 0x18f9a6 ; xor eax, eax ; ret
0x00000000000481e5 : shr eax, 0x20 ; mov word ptr [rdi + 4], ax ; xor eax, eax ; ret
0x0000000000192c6a : shr eax, 0x38 ; ret
0x0000000000041ecc : shr eax, 0x3f ; ret
0x000000000011eeac : shr eax, 0xc ; xor al, al ; or eax, edx ; ret
0x00000000000bc113 : shr eax, 0xe ; and eax, 0x3fc00 ; ret
0x000000000012cebb : shr eax, 0xe ; and eax, 1 ; ret
0x00000000000cf73b : shr eax, 2 ; ret
0x000000000018d0a3 : shr eax, 2 ; vzeroupper ; ret
0x000000000013c722 : shr eax, 4 ; and eax, 0x7f ; ret
0x000000000008def6 : shr eax, 4 ; and eax, 1 ; ret
0x000000000008df06 : shr eax, 5 ; and eax, 1 ; ret
0x00000000000bc15e : shr eax, 6 ; and eax, 0x3fffc00 ; ret
0x0000000000160a73 : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x000000000005b15a : shr eax, cl ; add byte ptr [rbx - 4], dh ; dec dword ptr [rcx - 0x77] ; ret
0x00000000001229ef : shr eax, cl ; and eax, 1 ; ret
0x000000000011f8d1 : shr eax, cl ; and eax, 3 ; ret
0x0000000000122c3d : shr eax, cl ; and r8d, 1 ; mov eax, r8d ; ret
0x00000000001294ad : shr ecx, 0x1f ; cmp dil, cl ; cmovne eax, esi ; ret
0x00000000001294e4 : shr ecx, 0x1f ; cmp sil, cl ; cmovne eax, edx ; ret
0x000000000015f245 : shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000989d1 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbp ; ret
0x0000000000043aeb : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000564dc : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000056465 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000056434 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000008ad40 : shr edx, 4 ; and edx, 1 ; mov eax, edx ; ret
0x000000000008ae40 : shr edx, 5 ; and edx, 1 ; mov eax, edx ; ret
0x00000000000564db : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000056464 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000056433 : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000192c69 : shr rax, 0x38 ; ret
0x0000000000041ecb : shr rax, 0x3f ; ret
0x000000000011eeab : shr rax, 0xc ; xor al, al ; or eax, edx ; ret
0x00000000000cf73a : shr rax, 2 ; ret
0x000000000018d0a2 : shr rax, 2 ; vzeroupper ; ret
0x000000000013c721 : shr rax, 4 ; and eax, 0x7f ; ret
0x0000000000043f30 : shufpd xmm0, xmm0, 1 ; movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000043f31 : shufps xmm0, xmm0, 1 ; movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000189175 : shufps xmm0, xmmword ptr [rdi + 2], 0 ; vzeroupper ; ret
0x00000000000a1cc4 : stc ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000d1241 : stc ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000015d235 : stc ; add esi, dword ptr [rsi + 7] ; ret
0x000000000004a170 : stc ; dec dword ptr [rax - 0x77] ; fadd dword ptr [rcx + 0xf] ; xchg esp, eax ; ret
0x000000000008e337 : stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000beeb3 : stc ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000105025 : stc ; dec dword ptr [rcx - 0x77] ; ret
0x00000000000a892b : stc ; jne 0xa8908 ; ret
0x000000000018ac5f : stc ; lea rax, [rdi + rdx] ; vzeroupper ; ret
0x0000000000168698 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000056525 : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x00000000001229ee : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000018ff88 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000001891af : stc ; vzeroupper ; ret
0x000000000013f5b4 : std ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000052a55 : std ; dec dword ptr [rax - 0x77] ; ret
0x00000000000471e1 : std ; dec dword ptr [rax - 0x77] ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000041d31 : std ; fstp st(1) ; ret
0x00000000001849d0 : std ; je 0x184a32 ; and ch, al ; std ; xlatb ; ret
0x0000000000184abe : std ; je 0x184b20 ; and ch, al ; std ; xlatb ; ret
0x000000000002fdac : std ; je 0x2fdc8 ; pop rbx ; ret
0x000000000018ac3b : std ; lea rax, [rdi + rdx] ; vzeroupper ; ret
0x0000000000094d92 : std ; mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x0000000000189197 : std ; mov dword ptr [rdi + rdx - 3], ecx ; vzeroupper ; ret
0x0000000000167ebb : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000009e7b5 : std ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bbb6c : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000052acf : std ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000018919b : std ; vzeroupper ; ret
0x00000000001847e1 : std ; xlatb ; ret
0x0000000000188584 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x00000000000d13be : sti ; add al, byte ptr [rcx] ; ret
0x00000000000e872c : sti ; add cl, byte ptr [rax - 0x7d] ; ret
0x00000000000d33a8 : sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000015c867 : sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000168298 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000033905 : sti ; or al, 0x74 ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000140cbb : sti ; or al, byte ptr [rax] ; test eax, eax ; je 0x140cc8 ; ret
0x000000000004283c : sti ; push rax ; ret
0x00000000000911a1 : sti ; ret
0x00000000000e9ec2 : sti ; sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret
0x00000000000bbf68 : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000000a09b9 : stosb byte ptr [rdi], al ; or al, 0 ; cmovne rax, rdx ; ret
0x0000000000094a52 : stosb byte ptr [rdi], al ; popfq ; adc eax, 0x5b050f00 ; ret
0x000000000014db6a : stosb byte ptr [rdi], al ; push -0x76b7fffa ; ret
0x0000000000127923 : stosd dword ptr [rdi], eax ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000000989d6 : stosd dword ptr [rdi], eax ; pop rbp ; ret
0x0000000000043af0 : stosd dword ptr [rdi], eax ; ret
0x00000000000c1831 : stosd dword ptr [rdi], eax ; stc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000989d5 : stosq qword ptr [rdi], rax ; pop rbp ; ret
0x0000000000043aef : stosq qword ptr [rdi], rax ; ret
0x000000000009b1b4 : sub ah, 0x11 ; add al, ch ; ret
0x000000000009c1e9 : sub al, 0x15 ; add byte ptr [rbx + 0x22], dh ; lea rax, [rax - 8] ; ret
0x00000000000a2c0a : sub al, 0x24 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000cf022 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x0000000000149675 : sub al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x000000000018bc36 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x00000000000cf025 : sub al, 0x75 ; pop rax ; ret
0x000000000018e123 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a15fd : sub al, bl ; ret
0x000000000004125a : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, r11 ; ret
0x00000000000412a7 : sub al, ch ; ret
0x0000000000185035 : sub al, ch ; std ; xlatb ; ret
0x00000000000cf016 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x0000000000073d32 : sub byte ptr [r15 + rcx - 0x4a], r8b ; ret
0x0000000000157905 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001574e2 : sub byte ptr [r8 - 0x77], r9b ; ja 0x157500 ; mov eax, r8d ; ret
0x00000000000bda12 : sub byte ptr [r8 - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000004a9a2 : sub byte ptr [rax + 0x39], cl ; ret
0x00000000000ecac8 : sub byte ptr [rax + 0x63], cl ; ret
0x0000000000157916 : sub byte ptr [rax + 1], bh ; ret
0x0000000000157906 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000008df2e : sub byte ptr [rax - 0x3f76bbfe], cl ; ret
0x000000000008df2d : sub byte ptr [rax - 0x3f76bbfe], r9b ; ret
0x00000000001574e3 : sub byte ptr [rax - 0x77], cl ; ja 0x157500 ; mov eax, r8d ; ret
0x00000000000471e5 : sub byte ptr [rax - 0x77], cl ; ret
0x0000000000086403 : sub byte ptr [rax - 0x78], al ; cmp byte ptr [rcx + rcx*4 - 0x38], al ; ret
0x00000000000bda13 : sub byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000014de91 : sub byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000147024 : sub byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000dd794 : sub byte ptr [rbp + 0x5b2b74c0], al ; pop rbp ; pop r12 ; ret
0x00000000000cf01a : sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000cf019 : sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000001524c7 : sub byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x00000000000426d5 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000639d1 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000005b05f : sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000015f808 : sub byte ptr [rbx - 0x1b], dh ; mov eax, 1 ; ret
0x000000000015f807 : sub byte ptr [rbx - 0x1b], sil ; mov eax, 1 ; ret
0x00000000000cf017 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x0000000000152c8b : sub byte ptr [rcx + rcx*4 - 0x20], al ; pop rbp ; pop r12 ; ret
0x000000000008aba0 : sub byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbp ; pop r12 ; ret
0x000000000006272d : sub byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop r12 ; ret
0x000000000008187a : sub byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x00000000000295eb : sub byte ptr [rcx - 0x77], cl ; ret
0x0000000000073d33 : sub byte ptr [rdi + rcx - 0x4a], al ; ret
0x00000000000d4237 : sub byte ptr [rdi + rcx*4 + 2], bl ; jbe 0xd4240 ; ret
0x00000000001492a4 : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000001576ec : sub byte ptr [rdi], cl ; adc dword ptr [rdi + 0x18], eax ; ret
0x00000000000ea41f : sub byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000014e525 : sub byte ptr [rdx], cl ; add al, ch ; ret
0x000000000014e4fe : sub byte ptr [rdx], cl ; add byte ptr [rax - 0x77], cl ; in eax, 0x89 ; ret
0x0000000000042106 : sub cl, al ; ret
0x00000000000f1d6f : sub cl, byte ptr [rax - 0x7d] ; ret
0x0000000000074581 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000ea41d : sub dword ptr [rax + rbp + 0xf], esi ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000007d739 : sub dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d1dc3 : sub dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000000d1fe9 : sub dword ptr [rax], eax ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x0000000000098653 : sub dword ptr [rbp + 0x15], eax ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000198a56 : sub dword ptr [rbx + 0x55da22d], eax ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000000de23b : sub dword ptr [rbx + 4], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001785d3 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x00000000001571c6 : sub dword ptr [rcx + rcx*4 - 0x40], eax ; ret
0x000000000008ac40 : sub dword ptr [rdi], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006308a : sub dword ptr [rdi], 1 ; ret
0x000000000018f779 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000098d0c : sub dword ptr [rip + 0x153e6d], 1 ; pop rbp ; ret
0x0000000000099f4f : sub dword ptr [rip + 0x154f22], 1 ; pop rbx ; ret
0x00000000000949f7 : sub dword ptr [rip + 0x159e02], 1 ; pop rbx ; ret
0x00000000000938fc : sub dword ptr [rip + 0x15aebd], 1 ; ret
0x0000000000090ff0 : sub dword ptr [rip + 0x15d7c9], 1 ; ret
0x0000000000083f3c : sub dword ptr [rip + 0x16a83d], 1 ; ret
0x00000000000475f9 : sub dword ptr [rip + 0x1a6ee0], 1 ; pop rbp ; ret
0x0000000000198a57 : sub dword ptr [rip + 0x55da2], 1 ; pop rbx ; ret
0x0000000000198d68 : sub dword ptr [rip + 0x577a9], 1 ; pop rbp ; ret
0x00000000001423f8 : sub dword ptr [rip + 0xae619], 1 ; pop rbp ; ret
0x0000000000117bfc : sub dword ptr [rip + 0xd7c4d], 1 ; ret
0x000000000018e906 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x0000000000184dc7 : sub eax, -1 ; jne 0x184dd0 ; vzeroupper ; ret
0x000000000018bd77 : sub eax, -1 ; jne 0x18bd80 ; vzeroupper ; ret
0x000000000009c272 : sub eax, 0x10 ; ret
0x00000000000de23a : sub eax, 0x1046b83 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004229d : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x000000000015163a : sub eax, 0x89480006 ; ret
0x0000000000184a5f : sub eax, 0xc5000001 ; std ; xlatb ; ret
0x000000000002fdbc : sub eax, 1 ; mov dword ptr [rdx + 8], eax ; pop rbx ; ret
0x0000000000055bef : sub eax, 1 ; ret
0x0000000000094c94 : sub eax, 2 ; add rsp, 8 ; ret
0x00000000000bc79e : sub eax, dword ptr [r8 + r9*4] ; je 0xbc780 ; ret
0x00000000000bc79f : sub eax, dword ptr [rax + rcx*4] ; je 0xbc780 ; ret
0x0000000000034cb3 : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000074531 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x46 ; or al, 0x83 ; ret
0x00000000000bc740 : sub eax, dword ptr [rcx + r8*4] ; je 0xbc728 ; ret
0x00000000000bc741 : sub eax, dword ptr [rcx + rax*4] ; je 0xbc728 ; ret
0x0000000000093ea2 : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000008ce2d : sub eax, dword ptr [rdi + 0x20] ; ret
0x000000000008ccfd : sub eax, dword ptr [rdi + 0x38] ; ret
0x00000000000885e9 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x000000000008ce1a : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x000000000008ccea : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x0000000000093567 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000057de3 : sub eax, eax ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x0000000000184e13 : sub eax, ecx ; je 0x184e20 ; sbb eax, eax ; or eax, 1 ; ret
0x0000000000057c15 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000aa38c : sub eax, ecx ; ret
0x0000000000092a29 : sub eax, ecx ; sub eax, 1 ; ret
0x0000000000183f0f : sub eax, ecx ; vzeroupper ; ret
0x00000000000b1d59 : sub eax, edi ; ret
0x00000000000cf84e : sub eax, edi ; shr rax, 2 ; ret
0x000000000008b6fc : sub eax, edx ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000008f561 : sub eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000149328 : sub eax, edx ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x00000000000472f9 : sub eax, edx ; ret
0x0000000000041b6a : sub eax, edx ; sar eax, 0x10 ; ret
0x0000000000042283 : sub eax, edx ; shr eax, 0x1f ; ret
0x0000000000041ec9 : sub eax, edx ; shr rax, 0x3f ; ret
0x000000000018d0a0 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x0000000000183c12 : sub eax, edx ; vzeroupper ; ret
0x00000000000dea4b : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000060ef7 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000dd798 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000013c3f6 : sub ebx, dword ptr [rbx + 0x5d] ; ret
0x00000000000c9e8b : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000043ae8 : sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000479c6 : sub ecx, 1 ; jns 0x47989 ; xor eax, eax ; ret
0x000000000015d230 : sub ecx, 5 ; cmp cx, 3 ; jbe 0x15d240 ; ret
0x0000000000056b52 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000b7751 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000188a54 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x0000000000087df9 : sub ecx, eax ; sar rcx, 2 ; lea eax, [rcx - 1] ; ret
0x000000000010859f : sub ecx, ebp ; ret
0x0000000000041b1f : sub ecx, edx ; not eax ; and eax, ecx ; ret
0x00000000000cf34c : sub edi, 0x10 ; add rax, rdi ; ret
0x00000000001461c1 : sub edx, 1 ; jne 0x146148 ; ret
0x0000000000093598 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000093589 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000087ea2 : sub edx, dword ptr [rcx + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x0000000000087eb4 : sub edx, dword ptr [rcx + 8] ; sar rdx, 2 ; sub eax, edx ; ret
0x00000000000ac1a4 : sub edx, eax ; jbe 0xac1e0 ; add rax, rdi ; ret
0x00000000000ac1b4 : sub edx, eax ; jbe 0xac1e0 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000ac1c4 : sub edx, eax ; jbe 0xac1e0 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000ac1d4 : sub edx, eax ; jbe 0xac1e0 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000ce384 : sub edx, eax ; jbe 0xce3c0 ; add rax, rdi ; ret
0x00000000000ce394 : sub edx, eax ; jbe 0xce3c0 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000ce3a4 : sub edx, eax ; jbe 0xce3c0 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000ce3b4 : sub edx, eax ; jbe 0xce3c0 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000001141b8 : sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x0000000000183888 : sub edx, esi ; cmp edx, ecx ; jle 0x1838a4 ; movsxd rax, ecx ; ret
0x000000000013c171 : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x00000000000beeb1 : sub esi, dword ptr [rbp - 7] ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000119076 : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000013f9f0 : sub esi, ebp ; dec dword ptr [rax - 0x77] ; ret
0x0000000000151ba8 : sub esp, -0x80 ; mov eax, r8d ; pop rbp ; ret
0x000000000010dab8 : sub esp, -0x80 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000198d67 : sub qword ptr [rip + 0x577a9], 1 ; pop rbp ; ret
0x00000000001423f7 : sub qword ptr [rip + 0xae619], 1 ; pop rbp ; ret
0x0000000000149327 : sub r8d, edx ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x000000000009c271 : sub rax, 0x10 ; ret
0x00000000000bb853 : sub rax, 1 ; ret
0x0000000000093ea1 : sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000008ce2c : sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000008ccfc : sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000885e8 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x000000000008ce19 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x000000000008cce9 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x0000000000092a28 : sub rax, rcx ; sub eax, 1 ; ret
0x00000000000b1d58 : sub rax, rdi ; ret
0x00000000000cf84d : sub rax, rdi ; shr rax, 2 ; ret
0x000000000008b6fb : sub rax, rdx ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000008f560 : sub rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000004730c : sub rax, rdx ; ret
0x0000000000041ec8 : sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000018872f : sub rax, rdx ; vzeroupper ; ret
0x00000000000cf34b : sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000001461c0 : sub rdx, 1 ; jne 0x146148 ; ret
0x00000000000ac1a3 : sub rdx, rax ; jbe 0xac1e0 ; add rax, rdi ; ret
0x00000000000ce383 : sub rdx, rax ; jbe 0xce3c0 ; add rax, rdi ; ret
0x0000000000151ba7 : sub rsp, -0x80 ; mov eax, r8d ; pop rbp ; ret
0x000000000010dab7 : sub rsp, -0x80 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000041fb7 : subps xmm0, xmm1 ; ret
0x000000000004231f : subps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000041fb6 : subsd xmm0, xmm1 ; ret
0x000000000004231e : subss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x00000000000a4f87 : test ah, bh ; xor al, 0 ; add byte ptr [rcx - 9], al ; ret
0x00000000000792d1 : test al, 0 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000014d143 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000015355b : test al, 0 ; add byte ptr [rax], al ; mov rax, r8 ; pop rbx ; ret
0x00000000000de748 : test al, 0 ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000328f4 : test al, 0 ; add byte ptr [rax], al ; ret
0x0000000000083f3f : test al, 0x16 ; add byte ptr [rcx], al ; ret
0x000000000012dcef : test al, 0x48 ; mov eax, edi ; ret
0x00000000000cf5f9 : test al, 0xf0 ; jne 0xcf650 ; lea rax, [rdi - 0x10] ; ret
0x00000000000e7a57 : test al, 0xf3 ; dec dword ptr [rax - 0x77] ; ret
0x000000000005b4cc : test al, 3 ; add byte ptr [rax], al ; mov rsp, rdx ; ret
0x000000000013efd5 : test al, al ; jne 0x13efbd ; mov eax, r10d ; ret
0x00000000000aa64a : test al, al ; jne 0xaa630 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000000e81e1 : test al, al ; jne 0xe8191 ; xor eax, eax ; ret
0x0000000000082833 : test bh, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000016112c : test bh, bh ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000715b1 : test bh, bh ; ret
0x0000000000196549 : test bh, ch ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000003426a : test byte ptr [rax + 0x200], bh ; ret
0x0000000000038db9 : test byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000df2f8 : test byte ptr [rax], ah ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b6e5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000017879a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000001787da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00000000000b7eba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00000000000b92ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000b7e79 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; ret
0x0000000000042dea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000189bfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000000bc0ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000004679a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000cf67a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000007bad9 : test byte ptr [rbp - 0x7c000012], dh ; ret
0x000000000012bdbe : test byte ptr [rbx + 0x1c], 0x20 ; je 0x12bdd0 ; pop rbx ; ret
0x00000000001435d8 : test byte ptr [rbx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001610f8 : test byte ptr [rbx], dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000012fb3d : test byte ptr [rcx + 0xff009f8], -0x38 ; ret
0x000000000007d737 : test byte ptr [rcx + rbp - 0x7cb80000], dh ; ret
0x0000000000133e87 : test byte ptr [rcx + rcx*4 + 0x35], -0x4f ; ret
0x00000000000c3493 : test byte ptr [rcx - 0x41], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret
0x0000000000117cb3 : test byte ptr [rcx], bl ; add al, byte ptr [rax] ; add bh, dh ; ret
0x0000000000053be4 : test byte ptr [rdi + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000e65ee : test byte ptr [rdi], -0x6c ; ret
0x000000000013d306 : test byte ptr [rdi], -0x7b ; ret
0x0000000000049b3e : test byte ptr [rdi], -0x7c ; ret
0x000000000008cd66 : test byte ptr [rdi], 4 ; sete al ; ret
0x000000000008cd76 : test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000b77f8 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x00000000000f1d44 : test byte ptr [rdi], bl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000341f8 : test byte ptr [rdx + 0x200], al ; ret
0x00000000000a046f : test byte ptr [rdx + 0xcd], 1 ; je 0xa0435 ; ret
0x00000000000bcd7f : test byte ptr [rdx + 0xcd], 1 ; je 0xbcd45 ; ret
0x00000000000b1dfd : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x000000000006f61e : test byte ptr [rsi], cl ; add eax, 0x83480000 ; ret
0x00000000000a5dcc : test byte ptr [rsp], dh ; add bh, dh ; ret
0x00000000000a892a : test cl, bh ; jne 0xa8908 ; ret
0x00000000000a88cc : test cl, cl ; je 0xa88d8 ; cmp ecx, esi ; jne 0xa88c0 ; ret
0x000000000012dcec : test cl, cl ; jne 0x12dc98 ; mov rax, rdi ; ret
0x00000000000bb4df : test cl, cl ; jne 0xbb4d0 ; ret
0x00000000000bb58f : test cl, cl ; jne 0xbb580 ; ret
0x00000000000bb84f : test cl, cl ; jne 0xbb840 ; sub rax, 1 ; ret
0x0000000000026204 : test dh, bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a861d : test dh, dh ; jne 0xa8610 ; mov qword ptr [rdx], rcx ; ret
0x0000000000190c14 : test dl, 0x40 ; jne 0x190bd0 ; lea rax, [rdi + 7] ; ret
0x0000000000190c42 : test dl, 4 ; jne 0x190bd0 ; lea rax, [rdi + 3] ; ret
0x00000000001393a9 : test dl, bl ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000082932 : test dl, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a87ee : test dl, cl ; jne 0xa87d0 ; mov rax, r8 ; ret
0x0000000000040fbb : test dl, dl ; jne 0x40f98 ; ret
0x00000000000bb6ff : test dl, dl ; jne 0xbb6f0 ; lea rax, [rcx - 1] ; ret
0x000000000018a4a3 : test dword ptr [rax + 2], ebx ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000018b1b3 : test dword ptr [rax + 2], edi ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000000b7b2b : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x00000000000b907b : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000000b8f7b : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x00000000000a53d8 : test dword ptr [rax + rbp*8 - 0x76b70001], esi ; ret
0x00000000000f1e15 : test dword ptr [rax], 0x89480000 ; fmul dword ptr [rax - 0x7d] ; ret
0x000000000007a3ba : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000006251c : test dword ptr [rax], ebx ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000074f4d : test dword ptr [rax], edx ; idiv edi ; inc dword ptr [rcx] ; ret
0x000000000013b493 : test dword ptr [rax], esp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000466fe : test dword ptr [rbp + 0x1a], esi ; add byte ptr [rcx], al ; xor eax, eax ; pop rbx ; ret
0x000000000009d600 : test dword ptr [rbp + 0x48000000], ebp ; add esp, 0x18 ; ret
0x00000000000578c3 : test dword ptr [rbp], edi ; add byte ptr [rax], al ; leave ; ret
0x000000000010ded1 : test dword ptr [rbx + 0x48000000], esi ; add esp, 0x78 ; ret
0x00000000000cef30 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x00000000000cf4e8 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x00000000001786b8 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000178698 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00000000001785b0 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000b9170 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x000000000018e407 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018e856 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000010e4c7 : test dword ptr [rcx + 0x48000000], ebx ; add esp, 0x68 ; ret
0x00000000001783ba : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x000000000018e3dd : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000b7712 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x000000000018e2ed : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018e1fd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000cef77 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000192ac7 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x00000000000cef47 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x0000000000066231 : test dword ptr [rcx + rcx*4 - 9], 0xe8f4894d ; ret
0x000000000017875a : test dword ptr [rcx - 0x3cffffff], esp ; ret
0x0000000000160a47 : test dword ptr [rdi + rax*8], edx ; setne al ; movzx eax, al ; ret
0x00000000000b7877 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000b7857 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x000000000013a96e : test dword ptr [rdi + rdi*8 - 1], esi ; inc dword ptr [rbp - 0x77] ; ret
0x000000000013e364 : test dword ptr [rdi], eax ; add al, 0 ; add byte ptr [rcx - 0x7d], al ; ret
0x0000000000043c2a : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x000000000018a581 : test dword ptr [rdx + 1], edi ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000018afe9 : test dword ptr [rdx + 4], eax ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000000b7a11 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x00000000000b8e59 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x000000000018f752 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018e122 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000178677 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x0000000000184a5e : test dword ptr [rip - 0x3affffff], ebp ; std ; xlatb ; ret
0x00000000000cf58d : test dword ptr [rsi + 0x48000000], edi ; lea eax, [rdi - 0x10] ; ret
0x0000000000192452 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018b2b5 : test dword ptr [rsi + 1], esi ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000000b7835 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x00000000000b7815 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000000b772d : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x000000000018e628 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x0000000000198d6a : test eax, 0x1000577 ; pop rbp ; ret
0x00000000000d3781 : test eax, 0x3948fffb ; ret
0x000000000009f813 : test eax, 0x48000120 ; cmove eax, edx ; ret
0x0000000000042354 : test eax, 0x7fffff ; je 0x42360 ; ret
0x000000000011cd83 : test eax, eax ; cmove eax, edx ; ret
0x00000000001141ba : test eax, eax ; cmovns eax, edx ; ret
0x000000000004739d : test eax, eax ; cmovs eax, edx ; ret
0x0000000000114c40 : test eax, eax ; je 0x114c45 ; ret
0x0000000000116db5 : test eax, eax ; je 0x116dbc ; mov qword ptr [rax], rdx ; ret
0x000000000012e8be : test eax, eax ; je 0x12e8d0 ; add rsp, 8 ; ret
0x0000000000140cbe : test eax, eax ; je 0x140cc8 ; ret
0x0000000000141b44 : test eax, eax ; je 0x141b50 ; add rsp, 8 ; ret
0x0000000000146f9a : test eax, eax ; je 0x146fa0 ; ret
0x0000000000148215 : test eax, eax ; je 0x148220 ; xor eax, eax ; ret
0x00000000001532c0 : test eax, eax ; je 0x153245 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000153241 : test eax, eax ; je 0x153250 ; pop rbx ; ret
0x00000000001571c3 : test eax, eax ; je 0x1571f0 ; mov eax, r8d ; ret
0x0000000000157213 : test eax, eax ; je 0x157240 ; mov eax, r8d ; ret
0x000000000017ec73 : test eax, eax ; je 0x17ec78 ; xchg edx, eax ; sub eax, edx ; ret
0x000000000017fc58 : test eax, eax ; je 0x17fc5d ; xchg edx, eax ; sub eax, edx ; ret
0x0000000000026f5e : test eax, eax ; je 0x26f68 ; ret
0x000000000008e591 : test eax, eax ; je 0x8e5a0 ; pop rbx ; ret
0x000000000009f414 : test eax, eax ; je 0x9f420 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dd795 : test eax, eax ; je 0xdd7c4 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011f126 : test eax, eax ; jl 0x11f13d ; je 0x11f12d ; ret
0x0000000000115f30 : test eax, eax ; jne 0x115ef4 ; xor eax, eax ; pop rbp ; ret
0x000000000012edcc : test eax, eax ; jne 0x12ed79 ; mov rax, rdi ; ret
0x000000000013c32b : test eax, eax ; jne 0x13c348 ; mov eax, r8d ; ret
0x000000000014110e : test eax, eax ; jne 0x141118 ; ret
0x000000000014123c : test eax, eax ; jne 0x141248 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000142f7c : test eax, eax ; jne 0x142f88 ; ret
0x000000000014de0a : test eax, eax ; jne 0x14de10 ; ret
0x000000000015450a : test eax, eax ; jne 0x154510 ; ret
0x0000000000183f0b : test eax, eax ; jne 0x183ef0 ; sub eax, ecx ; vzeroupper ; ret
0x00000000001843e0 : test eax, eax ; jne 0x1843c0 ; sub eax, ecx ; vzeroupper ; ret
0x0000000000184711 : test eax, eax ; jne 0x184730 ; xor eax, eax ; vzeroupper ; ret
0x000000000018c1c1 : test eax, eax ; jne 0x18c1e0 ; xor eax, eax ; vzeroupper ; ret
0x000000000018c639 : test eax, eax ; jne 0x18c620 ; sub eax, ecx ; vzeroupper ; ret
0x000000000018cb0e : test eax, eax ; jne 0x18caf0 ; sub eax, ecx ; vzeroupper ; ret
0x0000000000033d9d : test eax, eax ; jne 0x33da8 ; mov eax, r8d ; ret
0x00000000000627aa : test eax, eax ; jne 0x627b0 ; pop rbx ; ret
0x0000000000092724 : test eax, eax ; jne 0x92718 ; ret
0x000000000009354c : test eax, eax ; jne 0x93540 ; ret
0x000000000009e84f : test eax, eax ; jne 0x9e840 ; xor eax, eax ; ret
0x00000000000ac155 : test eax, eax ; jne 0xac1b0 ; xor eax, eax ; ret
0x00000000000ac608 : test eax, eax ; jne 0xac680 ; xor eax, eax ; ret
0x00000000000ac637 : test eax, eax ; jne 0xac6b0 ; xor eax, eax ; ret
0x00000000000ce335 : test eax, eax ; jne 0xce390 ; xor eax, eax ; ret
0x00000000000e2ec7 : test eax, eax ; jne 0xe2ed0 ; add rsp, 8 ; ret
0x000000000008aeaf : test eax, eax ; js 0x8aeb8 ; ret
0x00000000001458aa : test eax, eax ; sete al ; add rsp, 8 ; ret
0x000000000006d15f : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x00000000001986d4 : test ebp, ebp ; jne 0x1986c0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000094aaa : test ebp, ebp ; jne 0x94adc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001252f2 : test ebx, ebx ; je 0x125308 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012792c : test ebx, ebx ; jne 0x127938 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000153955 : test ebx, ebx ; jne 0x153960 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000160b00 : test ebx, ebx ; jne 0x160b10 ; pop rbx ; ret
0x0000000000160b30 : test ebx, ebx ; jne 0x160b40 ; pop rbx ; ret
0x0000000000197383 : test ebx, ebx ; jne 0x19736d ; pop rbx ; ret
0x00000000001985fc : test ebx, ebx ; jne 0x1985e0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000198949 : test ebx, ebx ; jne 0x198935 ; pop rbx ; ret
0x00000000001989eb : test ebx, ebx ; jne 0x1989d0 ; pop rbx ; ret
0x000000000012d0d5 : test ebx, edx ; add byte ptr [rax], al ; add cl, cl ; ret
0x00000000000ac578 : test ebx, esi ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000001230ff : test ecx, ecx ; jne 0x123108 ; ret
0x0000000000123168 : test ecx, ecx ; jne 0x123170 ; ret
0x0000000000123a4f : test ecx, ecx ; jne 0x123a58 ; ret
0x0000000000123aac : test ecx, ecx ; jne 0x123ab8 ; ret
0x00000000000bcb3f : test ecx, ecx ; jne 0xbcb18 ; mov rax, r8 ; ret
0x000000000011739c : test edi, edi ; jne 0x1173b0 ; mov eax, 1 ; ret
0x0000000000137b51 : test edi, edi ; jne 0x137b40 ; pop rbx ; ret
0x000000000015deea : test edi, edi ; jns 0x15def0 ; ret
0x00000000000e5219 : test edi, edi ; js 0xe5220 ; ret
0x000000000006c6b5 : test edi, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x0000000000041f87 : test edx, eax ; je 0x41f90 ; ret
0x00000000000c79de : test edx, ebp ; and eax, dword ptr [rax] ; add dh, dh ; ret
0x0000000000079d71 : test edx, edi ; dec dword ptr [rcx - 0x77] ; ret
0x000000000008d2f3 : test edx, edx ; je 0x8d300 ; ret
0x000000000008d753 : test edx, edx ; je 0x8d760 ; ret
0x00000000000b1bf6 : test edx, edx ; je 0xb1bfe ; bsf eax, edx ; ret
0x00000000000b1c9b : test edx, edx ; je 0xb1cb0 ; bsf rax, rdx ; ret
0x00000000000b1c3e : test edx, edx ; je 0xb1cc0 ; bsf rax, rdx ; ret
0x00000000000b1e6a : test edx, edx ; je 0xb1e90 ; bsf rax, rdx ; ret
0x0000000000123351 : test edx, edx ; jne 0x123360 ; ret
0x0000000000123c81 : test edx, edx ; jne 0x123c90 ; ret
0x0000000000063086 : test edx, edx ; jne 0x63090 ; sub dword ptr [rdi], 1 ; ret
0x0000000000086e1f : test edx, edx ; jne 0x86e10 ; ret
0x00000000000908a7 : test edx, edx ; jne 0x908b0 ; ret
0x00000000000916e7 : test edx, edx ; jne 0x916d8 ; ret
0x000000000009e929 : test edx, edx ; jne 0x9e920 ; ret
0x00000000000bbf55 : test edx, edx ; jne 0xbbf5d ; mov rax, rdi ; ret
0x00000000000bcc36 : test edx, edx ; jne 0xbcc28 ; xor eax, eax ; ret
0x00000000000bccd0 : test edx, edx ; jne 0xbccb0 ; ret
0x00000000000bdfbb : test edx, edx ; jne 0xbdfb0 ; ret
0x00000000000bd212 : test edx, edx ; sete al ; ret
0x0000000000139e1a : test esi, ebp ; dec dword ptr [rax - 0x7d] ; ret
0x000000000006d53c : test esi, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x0000000000038db8 : test esi, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000183a16 : test esi, esi ; je 0x1839f8 ; xor eax, eax ; ret
0x000000000002fd84 : test esi, esi ; je 0x2fd90 ; cmp esi, 3 ; je 0x2fd90 ; ret
0x000000000011a762 : test esi, esi ; jne 0x11a770 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b1d65 : test esi, esi ; jne 0xb1d6d ; xor rax, rax ; ret
0x00000000000cf695 : test esi, esi ; jne 0xcf69d ; xor rax, rax ; ret
0x000000000011c02c : test esp, esp ; jne 0x11c069 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000043c29 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x00000000000a87ed : test r10b, r9b ; jne 0xa87d0 ; mov rax, r8 ; ret
0x000000000011c02b : test r12d, r12d ; jne 0x11c069 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017ec72 : test r8d, r8d ; je 0x17ec78 ; xchg edx, eax ; sub eax, edx ; ret
0x000000000017fc57 : test r8d, r8d ; je 0x17fc5d ; xchg edx, eax ; sub eax, edx ; ret
0x00000000000627a9 : test r8d, r8d ; jne 0x627b0 ; pop rbx ; ret
0x00000000000a8929 : test r9b, dil ; jne 0xa8908 ; ret
0x0000000000114c3f : test rax, rax ; je 0x114c45 ; ret
0x0000000000116db4 : test rax, rax ; je 0x116dbc ; mov qword ptr [rax], rdx ; ret
0x000000000012e8bd : test rax, rax ; je 0x12e8d0 ; add rsp, 8 ; ret
0x0000000000141b43 : test rax, rax ; je 0x141b50 ; add rsp, 8 ; ret
0x0000000000153240 : test rax, rax ; je 0x153250 ; pop rbx ; ret
0x000000000008e590 : test rax, rax ; je 0x8e5a0 ; pop rbx ; ret
0x000000000009f413 : test rax, rax ; je 0x9f420 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011f125 : test rax, rax ; jl 0x11f13d ; je 0x11f12d ; ret
0x0000000000115f2f : test rax, rax ; jne 0x115ef4 ; xor eax, eax ; pop rbp ; ret
0x0000000000142f7b : test rax, rax ; jne 0x142f88 ; ret
0x0000000000092723 : test rax, rax ; jne 0x92718 ; ret
0x000000000009354b : test rax, rax ; jne 0x93540 ; ret
0x000000000009e84e : test rax, rax ; jne 0x9e840 ; xor eax, eax ; ret
0x00000000001986d3 : test rbp, rbp ; jne 0x1986c0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000094aa9 : test rbp, rbp ; jne 0x94adc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001252f1 : test rbx, rbx ; je 0x125308 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012792b : test rbx, rbx ; jne 0x127938 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000160aff : test rbx, rbx ; jne 0x160b10 ; pop rbx ; ret
0x0000000000160b2f : test rbx, rbx ; jne 0x160b40 ; pop rbx ; ret
0x0000000000197382 : test rbx, rbx ; jne 0x19736d ; pop rbx ; ret
0x00000000001985fb : test rbx, rbx ; jne 0x1985e0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000198948 : test rbx, rbx ; jne 0x198935 ; pop rbx ; ret
0x00000000001989ea : test rbx, rbx ; jne 0x1989d0 ; pop rbx ; ret
0x0000000000137b50 : test rdi, rdi ; jne 0x137b40 ; pop rbx ; ret
0x0000000000041f86 : test rdx, rax ; je 0x41f90 ; ret
0x00000000000b1c9a : test rdx, rdx ; je 0xb1cb0 ; bsf rax, rdx ; ret
0x00000000000b1c3d : test rdx, rdx ; je 0xb1cc0 ; bsf rax, rdx ; ret
0x00000000000b1e69 : test rdx, rdx ; je 0xb1e90 ; bsf rax, rdx ; ret
0x0000000000086e1e : test rdx, rdx ; jne 0x86e10 ; ret
0x00000000000908a6 : test rdx, rdx ; jne 0x908b0 ; ret
0x00000000000916e6 : test rdx, rdx ; jne 0x916d8 ; ret
0x000000000009e928 : test rdx, rdx ; jne 0x9e920 ; ret
0x00000000000bbf54 : test rdx, rdx ; jne 0xbbf5d ; mov rax, rdi ; ret
0x00000000000b1d64 : test rsi, rsi ; jne 0xb1d6d ; xor rax, rax ; ret
0x00000000000cf694 : test rsi, rsi ; jne 0xcf69d ; xor rax, rax ; ret
0x00000000000a861c : test sil, sil ; jne 0xa8610 ; mov qword ptr [rdx], rcx ; ret
0x000000000018fb1e : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000018b760 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000001891ce : vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3 ; vzeroupper ; ret
0x00000000001901f9 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000018bc45 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x00000000001901fd : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000018b8ec : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x000000000018b993 : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x000000000018fb0a : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000018faf1 : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x000000000018a806 : vmovdqu ymmword ptr [rdi + 0x60], ymm7 ; vzeroupper ; ret
0x00000000001891ee : vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3 ; vzeroupper ; ret
0x000000000018b699 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x000000000018bbaf : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x000000000018b837 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x000000000018b809 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x000000000018bb26 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x00000000001901ef : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000001901f3 : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000001906e6 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x00000000001907ac : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x00000000001909b5 : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x0000000000190208 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000019020c : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000018fe27 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000018fcc0 : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000018fac2 : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x000000000018fa86 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000018ff89 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000001903ac : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000019030f : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x00000000001901ae : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000146cf4 : vorps xmm7, xmm2, xmmword ptr [rax - 0x76b70013] ; ret
0x0000000000119dfc : vpaddsw ymm0, ymm15, ymmword ptr [rcx + 0xf] ; lahf ; ret
0x0000000000183c14 : vzeroupper ; ret
0x0000000000184790 : vzeroupper ; xor eax, eax ; ret
0x0000000000146fac : wait ; or al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000146f97 : wait ; or al, byte ptr [rax] ; test eax, eax ; je 0x146fa0 ; ret
0x0000000000128879 : wait ; out dx, eax ; inc dword ptr [rax - 0x76b7ffc8] ; ret
0x00000000000bb11d : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000bb19f : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000bb2a1 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000011f890 : wrpkru ; xor eax, eax ; ret
0x00000000000a421a : xchg al, ah ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; ret
0x000000000013a77b : xchg al, bh ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000c9750 : xchg bh, cl ; add eax, 0x89490000 ; ret
0x0000000000123277 : xchg byte ptr [rbx - 0x172ceffc], cl ; and eax, 1 ; ret
0x00000000000c9474 : xchg dl, bh ; add eax, 0x89490000 ; ret
0x0000000000079cfb : xchg dl, bh ; dec dword ptr [rcx - 0x77] ; ret
0x000000000002a5a7 : xchg dword ptr [rax + 0x39480000], esp ; ret
0x0000000000189b0c : xchg dword ptr [rax], eax ; vzeroupper ; ret
0x00000000000bcb3e : xchg dword ptr [rbp + 0x4cd575c9], eax ; mov eax, eax ; ret
0x000000000010d065 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000045fea : xchg dword ptr [rcx - 0x18000000], ebx ; pop rsp ; ret
0x00000000000a8927 : xchg ebp, eax ; mov dword ptr [rcx - 0x7c], 0xc3da75f9 ; nop ; ret
0x00000000001228b8 : xchg ebp, eax ; or al, 0 ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000260c7 : xchg ebp, eax ; ret
0x00000000001173c8 : xchg ebp, eax ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000156535 : xchg ebp, eax ; ror byte ptr [rcx + 0x1b803], 0 ; add bl, ch ; ret
0x0000000000062e69 : xchg ebp, eax ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbp ; ret
0x00000000001028b2 : xchg ebp, eax ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000bcccf : xchg ebp, eax ; test edx, edx ; jne 0xbccb0 ; ret
0x0000000000088a88 : xchg ebx, eax ; nop ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000000ee463 : xchg ebx, eax ; pop rbx ; ret
0x000000000007161e : xchg ebx, eax ; ret
0x0000000000047f88 : xchg ebx, eax ; sbb al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000008584f : xchg ebx, eax ; xor r8d, r8d ; mov rax, r8 ; ret
0x00000000000c9ee0 : xchg ecx, eax ; add eax, 0x74db8500 ; sbb dword ptr [rcx], edi ; ret
0x0000000000118cc5 : xchg ecx, eax ; hlt ; dec dword ptr [rcx + rcx*4 - 0x20] ; pop r12 ; ret
0x00000000001817f1 : xchg ecx, eax ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014473b : xchg ecx, eax ; ret
0x000000000017ff1f : xchg ecx, eax ; sub eax, edx ; ret
0x00000000000a8e2f : xchg edi, eax ; idiv edi ; add rsp, 8 ; ret
0x000000000015c865 : xchg edi, eax ; insd dword ptr [rdi], dx ; sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f1b65 : xchg edi, eax ; ret
0x000000000012205a : xchg edi, eax ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x0000000000055067 : xchg edx, eax ; mov byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000194e68 : xchg edx, eax ; ret
0x000000000017ec77 : xchg edx, eax ; sub eax, edx ; ret
0x00000000000a6be9 : xchg edx, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000a70cd : xchg esi, eax ; ret
0x000000000003e1cd : xchg esi, eax ; sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x000000000012902c : xchg esp, eax ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000149d69 : xchg esp, eax ; rcr byte ptr [rbx + 0x5d], 0xf ; mov dh, 0xc0 ; pop r12 ; ret
0x00000000000304ea : xchg esp, eax ; ret
0x00000000000d068c : xchg esp, eax ; rol byte ptr [rcx + rbp - 0x40], 0x89 ; ret
0x0000000000157d6c : xchg esp, eax ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x00000000000522b3 : xchg esp, eax ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000bbb5c : xlatb ; jb 0xbbb62 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000011d007 : xlatb ; jne 0x11cff8 ; mov rax, qword ptr [rax + 8] ; ret
0x000000000013c509 : xlatb ; mov qword ptr [r9], rdi ; ret
0x000000000005b463 : xlatb ; mov rax, r10 ; ret
0x00000000000abfa4 : xlatb ; ret
0x0000000000188585 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x00000000000ac153 : xlatb ; rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x00000000000ac606 : xlatb ; rol dword ptr [rbp + 0x317475c0], 0xc0 ; ret
0x00000000000ac635 : xlatb ; rol dword ptr [rbp + 0x317575c0], 0xc0 ; ret
0x00000000000ac5a4 : xlatb ; ror dword ptr [rdi], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000000b1a35 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000004732a : xlatb ; shl rdi, 0x20 ; or rax, rdi ; ret
0x000000000011eeaa : xlatb ; shr rax, 0xc ; xor al, al ; or eax, edx ; ret
0x0000000000160a9c : xlatb ; xor eax, eax ; ret
0x00000000000b67a8 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000b673e : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000a4f89 : xor al, 0 ; add byte ptr [rcx - 9], al ; ret
0x00000000000a1f73 : xor al, 0x24 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001476e0 : xor al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ac6bb : xor al, 0x48 ; lea eax, [rdi + rax + 0x20] ; ret
0x0000000000057b54 : xor al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00000000000e7668 : xor al, 0xe8 ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000cef48 : xor al, 1 ; add byte ptr [rax], al ; ret
0x000000000011eeaf : xor al, al ; or eax, edx ; ret
0x0000000000109ed7 : xor al, ch ; ret
0x00000000001127ec : xor ax, ax ; ret
0x00000000000e81a6 : xor bh, byte ptr [rax + 1] ; ret
0x0000000000042302 : xor bl, 0xf ; adc dword ptr [rdi], eax ; movd xmm0, esi ; ret
0x00000000000ac1dc : xor bl, al ; nop ; xor eax, eax ; ret
0x000000000012ce62 : xor bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000f2491 : xor byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x00000000000cf03c : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000ac0ad : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x000000000010c307 : xor byte ptr [r15], r9b ; adc dword ptr [rdi + 0x40], eax ; ret
0x00000000001507a5 : xor byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm1 ; ret
0x00000000000b98d7 : xor byte ptr [rax - 0x73], cl ; ret
0x00000000000c0595 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; imul cl ; ret
0x00000000000bc1d4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000008749e : xor byte ptr [rax], al ; je 0x874a8 ; ret
0x00000000000bb337 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000cf040 : xor byte ptr [rbp + 0x3d], dh ; ret
0x00000000000cf03f : xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000bbdd9 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x0000000000040f56 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009125b : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000196c61 : xor byte ptr [rbx + 0x5d], bl ; pop r14 ; ret
0x00000000000f69ec : xor byte ptr [rbx + rax*4], dl ; ret
0x00000000000cf03d : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000874fd : xor byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000006669b : xor byte ptr [rcx + 0xf], al ; mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000019707a : xor byte ptr [rcx + rcx*4 - 0x20], cl ; pop r12 ; ret
0x000000000010f30a : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000010c308 : xor byte ptr [rdi], cl ; adc dword ptr [rdi + 0x40], eax ; ret
0x00000000000a15fa : xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00000000000b19fc : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000ac0ae : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000014102c : xor byte ptr [rsi + rbp*8], dl ; dec dword ptr [rax + 0x39] ; ret
0x000000000015139a : xor byte ptr [rsi], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000bb0c8 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000bb0de : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000bb100 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000bb11e : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000bb13e : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000bb164 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000bb180 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000bb1a0 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000bb1c0 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000bb1e6 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000bb208 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000bb226 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000bb246 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000bb262 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000bb282 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000bb2a2 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000bb2c2 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000bb2e8 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000bb338 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000bb00e : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000bb02c : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000bb04c : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000bb06e : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000bb08e : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000bb0ae : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000baf44 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000baf56 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000baf6c : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000baf84 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000baf9a : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000bafac : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000bafca : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000bafd6 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000bafec : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000baf30 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000b6620 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000e81c7 : xor dword ptr [rax + 1], edi ; ret
0x000000000006ec67 : xor dword ptr [rax - 0x77], ecx ; ret
0x00000000000a861b : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x11] ; mov qword ptr [rdx], rcx ; ret
0x00000000000986d0 : xor dword ptr [rax], ecx ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000002c95f : xor dword ptr [rax], edx ; add byte ptr [rcx - 0x77], al ; ret
0x00000000001131cb : xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000002448a : xor eax, 0x38c48348 ; pop rbx ; pop rbp ; ret
0x00000000001904b7 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000160db1 : xor eax, 0x8e0da ; ret
0x00000000000a4f96 : xor eax, 0xf7410000 ; ret
0x0000000000199140 : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000008e464 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012b96e : xor eax, eax ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x0000000000048072 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000094cd1 : xor eax, eax ; add rsp, 8 ; ret
0x00000000000342c4 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x0000000000121268 : xor eax, eax ; cmp byte ptr [rcx], 0 ; je 0x121270 ; ret
0x000000000004736a : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x47378 ; pop rbx ; ret
0x0000000000094c64 : xor eax, eax ; cmp rdi, rsi ; sete al ; ret
0x000000000009418f : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000000f23c6 : xor eax, eax ; mov dword ptr [rbp + 0x30], edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000042c5d : xor eax, eax ; mov dword ptr [rbx + 0x40], esi ; pop rbx ; ret
0x000000000010c4f9 : xor eax, eax ; mov dword ptr [rbx + 4], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008762f : xor eax, eax ; mov dword ptr [rbx], ecx ; pop rbx ; ret
0x00000000001136f4 : xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x000000000004810d : xor eax, eax ; mov dword ptr [rsi + 0xc], 0x1000b ; ret
0x00000000000ee537 : xor eax, eax ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x00000000001574f1 : xor eax, eax ; mov eax, r8d ; ret
0x000000000018bda0 : xor eax, eax ; mov edx, dword ptr [rdi] ; cmp edx, dword ptr [rsi] ; jne 0x18bd8c ; ret
0x000000000009ef3a : xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x00000000000a863b : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000160dad : xor eax, eax ; mov qword ptr [rip + 0x8e0da], rsi ; ret
0x0000000000046c89 : xor eax, eax ; mov rax, r8 ; pop rbx ; pop rbp ; ret
0x0000000000046c7e : xor eax, eax ; mov rax, r8 ; ret
0x00000000000a093f : xor eax, eax ; pop r12 ; pop r13 ; ret
0x000000000012cf7b : xor eax, eax ; pop r12 ; pop rbp ; ret
0x0000000000026017 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000900b1 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000004129a : xor eax, eax ; pop rbp ; ret
0x0000000000099c91 : xor eax, eax ; pop rbx ; pop rbp ; mov rax, r8 ; pop r12 ; ret
0x0000000000047248 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008d8de : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000935e6 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000042c3f : xor eax, eax ; pop rbx ; ret
0x0000000000040fc8 : xor eax, eax ; ret
0x00000000000aa64e : xor eax, eax ; sub eax, ecx ; ret
0x000000000012bdbc : xor eax, eax ; test byte ptr [rbx + 0x1c], 0x20 ; je 0x12bdd0 ; pop rbx ; ret
0x000000000008cd64 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x000000000008cd74 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00000000001571c1 : xor eax, eax ; test eax, eax ; je 0x1571f0 ; mov eax, r8d ; ret
0x0000000000157211 : xor eax, eax ; test eax, eax ; je 0x157240 ; mov eax, r8d ; ret
0x00000000000bd210 : xor eax, eax ; test edx, edx ; sete al ; ret
0x00000000000908a4 : xor eax, eax ; test rdx, rdx ; jne 0x908b0 ; ret
0x00000000001843f0 : xor eax, eax ; vzeroupper ; ret
0x0000000000047d7c : xor eax, ecx ; ret
0x000000000014a5fc : xor eax, edx ; mov qword ptr [rdi], r8 ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000040fb6 : xor eax, edx ; movzx edx, byte ptr [rcx] ; test dl, dl ; jne 0x40f98 ; ret
0x00000000000472f7 : xor eax, edx ; sub eax, edx ; ret
0x000000000004730a : xor eax, edx ; sub rax, rdx ; ret
0x0000000000120d29 : xor eax, r8d ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bc879 : xor ebp, dword ptr [rcx] ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000007161c : xor ebp, ecx ; xchg ebx, eax ; ret
0x0000000000082c07 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000008d23e : xor ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000102816 : xor ecx, ecx ; add rsp, 8 ; mov eax, r9d ; ret
0x0000000000042178 : xor ecx, ecx ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x00000000000cf156 : xor ecx, ecx ; cmp eax, ecx ; jne 0xcf160 ; mov eax, r9d ; ret
0x00000000000c6b50 : xor ecx, ecx ; mov eax, r9d ; ret
0x0000000000038ca1 : xor ecx, ecx ; pop rbx ; pop rbp ; mov rax, r9 ; pop r12 ; ret
0x000000000013efe1 : xor edx, edx ; mov eax, r10d ; ret
0x00000000000bb9e3 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00000000000d0071 : xor esp, esp ; mov rax, r12 ; pop r12 ; ret
0x000000000010d229 : xor esp, esp ; pop rbx ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x0000000000034b44 : xor esp, esp ; pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x00000000000986cf : xor qword ptr [rax], r9 ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000013efe0 : xor r10d, r10d ; mov eax, r10d ; ret
0x00000000000d0070 : xor r12d, r12d ; mov rax, r12 ; pop r12 ; ret
0x00000000000ee536 : xor r8d, r8d ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x00000000001574f0 : xor r8d, r8d ; mov eax, r8d ; ret
0x0000000000046c88 : xor r8d, r8d ; mov rax, r8 ; pop rbx ; pop rbp ; ret
0x0000000000046c7d : xor r8d, r8d ; mov rax, r8 ; ret
0x00000000000c6b4f : xor r9d, r9d ; mov eax, r9d ; ret
0x00000000001131ca : xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x00000000000b1d69 : xor rax, rax ; ret
0x0000000000047309 : xor rax, rdx ; sub rax, rdx ; ret
